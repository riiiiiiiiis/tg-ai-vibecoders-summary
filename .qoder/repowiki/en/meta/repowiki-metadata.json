{"knowledge_relations":[{"id":2587,"source_id":"04e0e8aa-24b8-4489-a98b-8950c038b4bd","target_id":"8d488c67-6b32-4639-a69c-fa93734ba68d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 04e0e8aa-24b8-4489-a98b-8950c038b4bd -\u003e 8d488c67-6b32-4639-a69c-fa93734ba68d","gmt_create":"2025-10-11T19:04:45.773875-03:00","gmt_modified":"2025-10-11T19:04:45.773875-03:00"},{"id":2588,"source_id":"1dfa5f8d-02d6-461d-acd8-86796c07b12c","target_id":"73c290e6-929a-4f84-a974-63c64eebb1dd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1dfa5f8d-02d6-461d-acd8-86796c07b12c -\u003e 73c290e6-929a-4f84-a974-63c64eebb1dd","gmt_create":"2025-10-11T19:04:45.786458-03:00","gmt_modified":"2025-10-11T19:04:45.786458-03:00"},{"id":2589,"source_id":"23881c8f-99b0-4f44-b028-71214875ed11","target_id":"2579f4a5-9635-47d5-99cf-8c648730ef56","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 23881c8f-99b0-4f44-b028-71214875ed11 -\u003e 2579f4a5-9635-47d5-99cf-8c648730ef56","gmt_create":"2025-10-11T19:04:45.795035-03:00","gmt_modified":"2025-10-11T19:04:45.795035-03:00"},{"id":2590,"source_id":"2579f4a5-9635-47d5-99cf-8c648730ef56","target_id":"e0aabb15-9588-4457-a863-a8407d6d6db4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2579f4a5-9635-47d5-99cf-8c648730ef56 -\u003e e0aabb15-9588-4457-a863-a8407d6d6db4","gmt_create":"2025-10-11T19:04:45.806037-03:00","gmt_modified":"2025-10-11T19:04:45.806037-03:00"},{"id":2591,"source_id":"2579f4a5-9635-47d5-99cf-8c648730ef56","target_id":"71368a46-16c3-4602-ba68-4d27bfb1cbf4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2579f4a5-9635-47d5-99cf-8c648730ef56 -\u003e 71368a46-16c3-4602-ba68-4d27bfb1cbf4","gmt_create":"2025-10-11T19:04:45.810996-03:00","gmt_modified":"2025-10-11T19:04:45.810996-03:00"},{"id":2592,"source_id":"2579f4a5-9635-47d5-99cf-8c648730ef56","target_id":"f0ae06cf-1481-46d4-beb6-7c582f600db9","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2579f4a5-9635-47d5-99cf-8c648730ef56 -\u003e f0ae06cf-1481-46d4-beb6-7c582f600db9","gmt_create":"2025-10-11T19:04:45.81631-03:00","gmt_modified":"2025-10-11T19:04:45.81631-03:00"},{"id":2593,"source_id":"2579f4a5-9635-47d5-99cf-8c648730ef56","target_id":"98859b6f-8655-4d45-ba04-ed444bebb01b","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 2579f4a5-9635-47d5-99cf-8c648730ef56 -\u003e 98859b6f-8655-4d45-ba04-ed444bebb01b","gmt_create":"2025-10-11T19:04:45.821198-03:00","gmt_modified":"2025-10-11T19:04:45.821198-03:00"},{"id":2594,"source_id":"1dfa5f8d-02d6-461d-acd8-86796c07b12c","target_id":"199981b7-1163-4746-be32-f78d9a3bbbbb","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1dfa5f8d-02d6-461d-acd8-86796c07b12c -\u003e 199981b7-1163-4746-be32-f78d9a3bbbbb","gmt_create":"2025-10-11T19:04:45.825464-03:00","gmt_modified":"2025-10-11T19:04:45.825464-03:00"},{"id":2595,"source_id":"199981b7-1163-4746-be32-f78d9a3bbbbb","target_id":"b636f08b-4127-4b44-a6a0-63a309e68068","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 199981b7-1163-4746-be32-f78d9a3bbbbb -\u003e b636f08b-4127-4b44-a6a0-63a309e68068","gmt_create":"2025-10-11T19:04:45.826051-03:00","gmt_modified":"2025-10-11T19:04:45.826051-03:00"},{"id":2596,"source_id":"199981b7-1163-4746-be32-f78d9a3bbbbb","target_id":"1e8e644f-fd67-44d8-85bb-c15144459c5a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 199981b7-1163-4746-be32-f78d9a3bbbbb -\u003e 1e8e644f-fd67-44d8-85bb-c15144459c5a","gmt_create":"2025-10-11T19:04:45.826445-03:00","gmt_modified":"2025-10-11T19:04:45.826445-03:00"},{"id":2597,"source_id":"199981b7-1163-4746-be32-f78d9a3bbbbb","target_id":"d4ed5348-c0a6-4fc4-889d-e12c4f0d4d1f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 199981b7-1163-4746-be32-f78d9a3bbbbb -\u003e d4ed5348-c0a6-4fc4-889d-e12c4f0d4d1f","gmt_create":"2025-10-11T19:04:45.826882-03:00","gmt_modified":"2025-10-11T19:04:45.826882-03:00"},{"id":2598,"source_id":"199981b7-1163-4746-be32-f78d9a3bbbbb","target_id":"cca1f1c9-0fea-4f74-a759-40d2d18e5eca","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 199981b7-1163-4746-be32-f78d9a3bbbbb -\u003e cca1f1c9-0fea-4f74-a759-40d2d18e5eca","gmt_create":"2025-10-11T19:04:45.827272-03:00","gmt_modified":"2025-10-11T19:04:45.827272-03:00"},{"id":2599,"source_id":"199981b7-1163-4746-be32-f78d9a3bbbbb","target_id":"1dd292ce-8ba6-4d5f-abe9-6e8fc9aa29c7","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 199981b7-1163-4746-be32-f78d9a3bbbbb -\u003e 1dd292ce-8ba6-4d5f-abe9-6e8fc9aa29c7","gmt_create":"2025-10-11T19:04:45.827664-03:00","gmt_modified":"2025-10-11T19:04:45.827664-03:00"},{"id":2600,"source_id":"199981b7-1163-4746-be32-f78d9a3bbbbb","target_id":"34ff4ffc-b49c-4308-a43a-99fbb1c67236","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 199981b7-1163-4746-be32-f78d9a3bbbbb -\u003e 34ff4ffc-b49c-4308-a43a-99fbb1c67236","gmt_create":"2025-10-11T19:04:45.8281-03:00","gmt_modified":"2025-10-11T19:04:45.8281-03:00"},{"id":2601,"source_id":"04e0e8aa-24b8-4489-a98b-8950c038b4bd","target_id":"7cf2b3e6-d90f-492f-b794-2603251deb39","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 04e0e8aa-24b8-4489-a98b-8950c038b4bd -\u003e 7cf2b3e6-d90f-492f-b794-2603251deb39","gmt_create":"2025-10-11T19:04:45.828582-03:00","gmt_modified":"2025-10-11T19:04:45.828582-03:00"},{"id":2602,"source_id":"23881c8f-99b0-4f44-b028-71214875ed11","target_id":"cd64d2da-3060-4341-bc99-bf3e3cdc6bb1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 23881c8f-99b0-4f44-b028-71214875ed11 -\u003e cd64d2da-3060-4341-bc99-bf3e3cdc6bb1","gmt_create":"2025-10-11T19:04:45.828973-03:00","gmt_modified":"2025-10-11T19:04:45.828973-03:00"},{"id":2603,"source_id":"cd64d2da-3060-4341-bc99-bf3e3cdc6bb1","target_id":"92c97570-f17d-4276-ad55-a1c1701c81e3","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd64d2da-3060-4341-bc99-bf3e3cdc6bb1 -\u003e 92c97570-f17d-4276-ad55-a1c1701c81e3","gmt_create":"2025-10-11T19:04:45.83146-03:00","gmt_modified":"2025-10-11T19:04:45.83146-03:00"},{"id":2604,"source_id":"cd64d2da-3060-4341-bc99-bf3e3cdc6bb1","target_id":"b6059293-5e91-42fd-ba47-cbba2bf2a0bd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd64d2da-3060-4341-bc99-bf3e3cdc6bb1 -\u003e b6059293-5e91-42fd-ba47-cbba2bf2a0bd","gmt_create":"2025-10-11T19:04:45.833666-03:00","gmt_modified":"2025-10-11T19:04:45.833666-03:00"},{"id":2605,"source_id":"cd64d2da-3060-4341-bc99-bf3e3cdc6bb1","target_id":"6f4d5bb7-605d-4811-b933-0189be422648","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd64d2da-3060-4341-bc99-bf3e3cdc6bb1 -\u003e 6f4d5bb7-605d-4811-b933-0189be422648","gmt_create":"2025-10-11T19:04:45.834044-03:00","gmt_modified":"2025-10-11T19:04:45.834044-03:00"},{"id":2606,"source_id":"cd64d2da-3060-4341-bc99-bf3e3cdc6bb1","target_id":"95b63857-b689-4cc7-bd9d-2d12dde67ab1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: cd64d2da-3060-4341-bc99-bf3e3cdc6bb1 -\u003e 95b63857-b689-4cc7-bd9d-2d12dde67ab1","gmt_create":"2025-10-11T19:04:45.837197-03:00","gmt_modified":"2025-10-11T19:04:45.837197-03:00"},{"id":2607,"source_id":"1dfa5f8d-02d6-461d-acd8-86796c07b12c","target_id":"cb66204b-cffc-4bd3-b34e-08c3596a6e55","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 1dfa5f8d-02d6-461d-acd8-86796c07b12c -\u003e cb66204b-cffc-4bd3-b34e-08c3596a6e55","gmt_create":"2025-10-11T19:04:45.837585-03:00","gmt_modified":"2025-10-11T19:04:45.837585-03:00"},{"id":2608,"source_id":"23881c8f-99b0-4f44-b028-71214875ed11","target_id":"fd5eb682-e6a5-4f10-8159-2441ff91fc8f","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 23881c8f-99b0-4f44-b028-71214875ed11 -\u003e fd5eb682-e6a5-4f10-8159-2441ff91fc8f","gmt_create":"2025-10-11T19:04:45.837951-03:00","gmt_modified":"2025-10-11T19:04:45.837951-03:00"},{"id":2609,"source_id":"fd5eb682-e6a5-4f10-8159-2441ff91fc8f","target_id":"6442c983-6060-4086-8841-40e64fab059d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fd5eb682-e6a5-4f10-8159-2441ff91fc8f -\u003e 6442c983-6060-4086-8841-40e64fab059d","gmt_create":"2025-10-11T19:04:45.838764-03:00","gmt_modified":"2025-10-11T19:04:45.838764-03:00"},{"id":2610,"source_id":"fd5eb682-e6a5-4f10-8159-2441ff91fc8f","target_id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: fd5eb682-e6a5-4f10-8159-2441ff91fc8f -\u003e 9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","gmt_create":"2025-10-11T19:04:45.83918-03:00","gmt_modified":"2025-10-11T19:04:45.83918-03:00"},{"id":2611,"source_id":"04e0e8aa-24b8-4489-a98b-8950c038b4bd","target_id":"345ea698-0a62-485f-bf6d-768a04c9075d","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 04e0e8aa-24b8-4489-a98b-8950c038b4bd -\u003e 345ea698-0a62-485f-bf6d-768a04c9075d","gmt_create":"2025-10-11T19:04:45.839583-03:00","gmt_modified":"2025-10-11T19:04:45.839583-03:00"},{"id":2612,"source_id":"b6059293-5e91-42fd-ba47-cbba2bf2a0bd","target_id":"5cad39de-a7aa-46b2-a3a3-c94f286c55fd","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b6059293-5e91-42fd-ba47-cbba2bf2a0bd -\u003e 5cad39de-a7aa-46b2-a3a3-c94f286c55fd","gmt_create":"2025-10-11T19:04:45.84003-03:00","gmt_modified":"2025-10-11T19:04:45.84003-03:00"},{"id":2613,"source_id":"b6059293-5e91-42fd-ba47-cbba2bf2a0bd","target_id":"f3d44325-ee3e-4617-aadb-1c3260914fb1","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b6059293-5e91-42fd-ba47-cbba2bf2a0bd -\u003e f3d44325-ee3e-4617-aadb-1c3260914fb1","gmt_create":"2025-10-11T19:04:45.840456-03:00","gmt_modified":"2025-10-11T19:04:45.840456-03:00"},{"id":2614,"source_id":"b6059293-5e91-42fd-ba47-cbba2bf2a0bd","target_id":"b5899c8a-6913-4d65-ab4e-96f795f69132","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: b6059293-5e91-42fd-ba47-cbba2bf2a0bd -\u003e b5899c8a-6913-4d65-ab4e-96f795f69132","gmt_create":"2025-10-11T19:04:45.843155-03:00","gmt_modified":"2025-10-11T19:04:45.843155-03:00"},{"id":2615,"source_id":"71368a46-16c3-4602-ba68-4d27bfb1cbf4","target_id":"5de91925-1faf-4cbc-8693-a8b1858ce719","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71368a46-16c3-4602-ba68-4d27bfb1cbf4 -\u003e 5de91925-1faf-4cbc-8693-a8b1858ce719","gmt_create":"2025-10-11T19:04:45.84614-03:00","gmt_modified":"2025-10-11T19:04:45.84614-03:00"},{"id":2616,"source_id":"71368a46-16c3-4602-ba68-4d27bfb1cbf4","target_id":"e867ae88-c4cd-433b-b934-c346bed960f0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71368a46-16c3-4602-ba68-4d27bfb1cbf4 -\u003e e867ae88-c4cd-433b-b934-c346bed960f0","gmt_create":"2025-10-11T19:04:45.850491-03:00","gmt_modified":"2025-10-11T19:04:45.850491-03:00"},{"id":2617,"source_id":"71368a46-16c3-4602-ba68-4d27bfb1cbf4","target_id":"ddcde63a-026c-4468-8598-0f68c3f831e2","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 71368a46-16c3-4602-ba68-4d27bfb1cbf4 -\u003e ddcde63a-026c-4468-8598-0f68c3f831e2","gmt_create":"2025-10-11T19:04:45.850845-03:00","gmt_modified":"2025-10-11T19:04:45.850845-03:00"},{"id":2618,"source_id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","target_id":"87135262-dcdd-4bde-86c7-5f8ab7093ba0","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6 -\u003e 87135262-dcdd-4bde-86c7-5f8ab7093ba0","gmt_create":"2025-10-11T19:04:45.855464-03:00","gmt_modified":"2025-10-11T19:04:45.855464-03:00"},{"id":2619,"source_id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","target_id":"489ecb06-bfd8-4cba-a07d-872ab24a78be","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6 -\u003e 489ecb06-bfd8-4cba-a07d-872ab24a78be","gmt_create":"2025-10-11T19:04:45.855875-03:00","gmt_modified":"2025-10-11T19:04:45.855875-03:00"},{"id":2620,"source_id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","target_id":"682fbec6-0c11-4d61-ba09-a85229bc0bbc","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6 -\u003e 682fbec6-0c11-4d61-ba09-a85229bc0bbc","gmt_create":"2025-10-11T19:04:45.85623-03:00","gmt_modified":"2025-10-11T19:04:45.85623-03:00"},{"id":2621,"source_id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","target_id":"1bedd8e7-0296-44eb-bb04-5642908597b4","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6 -\u003e 1bedd8e7-0296-44eb-bb04-5642908597b4","gmt_create":"2025-10-11T19:04:45.856587-03:00","gmt_modified":"2025-10-11T19:04:45.856587-03:00"},{"id":2622,"source_id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","target_id":"75ba66c9-b3ef-44e4-a9fc-9b5bfbc28569","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6 -\u003e 75ba66c9-b3ef-44e4-a9fc-9b5bfbc28569","gmt_create":"2025-10-11T19:04:45.856926-03:00","gmt_modified":"2025-10-11T19:04:45.856926-03:00"},{"id":2623,"source_id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","target_id":"7728c04a-42d4-49fc-ab0f-168ab5c0b62a","source_type":"WIKI_ITEM","target_type":"WIKI_ITEM","relationship_type":"PARENT_CHILD","extra":"Wiki parent-child relationship: 9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6 -\u003e 7728c04a-42d4-49fc-ab0f-168ab5c0b62a","gmt_create":"2025-10-11T19:04:45.857422-03:00","gmt_modified":"2025-10-11T19:04:45.857422-03:00"}],"wiki_catalogs":[{"id":"7a77f0c2-9104-48b7-8043-0ca441beaf8e","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Project Overview","description":"project-overview","prompt":"Create comprehensive content for this section focused on the tg-ai-vibecoders-summary project. Explain its purpose as a Next.js 15 App Router application that analyzes Telegram chat activity using PostgreSQL and generates AI-powered insights via OpenRouter (Google Gemini 2.5 Pro). Document the core capabilities including real-time analytics, multi-perspective AI insights, automated Telegram reporting, and responsive dashboard visualization. Describe the target audience of community managers and developers, and outline the key architectural components and their interactions. Include both conceptual overviews for beginners and technical details for experienced developers. Use terminology consistent with the codebase such as 'Server Components', 'OpenRouter API', and 'report generation'. Provide practical examples of common use cases like viewing 24-hour analytics or sending reports to Telegram. Document the mandatory AI dependency and Russian-language interface. Include implementation details about the refactoring progress and code savings achieved.","progress_status":"completed","dependent_files":"README.md,CLAUDE.md","gmt_create":"2025-10-11T18:38:14.781252-03:00","gmt_modified":"2025-10-11T18:40:52.621818-03:00","raw_data":"WikiEncrypted:0MI1/XkBoMl0lTbK6t0Cn/+8FdvqrJ62ianMLvZj02dqzTho5arqNtbUziutSzUZOqm7yOpCxfwhmmzZqG/lBD3pMVXunyKmPUgiOnGRUOB/qRJx6YedHJEU5gnRNVs5e6WnAbuR97SP7KM7BzHU9XDfOjWZ8llML6QwmMfWooPn385gpwaeP4YFSAjqHdropPmf/3Z2i2LVso+Z2q7aolRCSA0I2FUTYHIWYtDn4rXMYb5IfOb5waz2PpQWOmmKvWK8MzqhS+YGoxpxT1bLmLu7y4ppb/C5G2eSIudEnosQmCNh3Ys1aAk3/ZLb4MfZD+d3MnPqOXLByxqUDU7A9h7d0X9bM7sLjPcu+szG0k5rLb2hM+r8n6GFHGfKkUsFAKR0TjjaNLuRfA01zGfVZmpB6AVy2Fdmd3ReucbRkPAJMyxRlz+qMzE+GLWbfdkr9oNsd2NV7zlfvrqwixLnA5+rVw1FM+akseDyVOgoe6s8AfGsfXfL0k9gsrwu/4NwK0mYtQhlpoaqICOaVu8jbOjy0Zcpf+GykeBH2vR0xpXydbbryU/ToTTm36fiNdQp9yIRmh+dp4585JcIcRu1zRhjxXnDR6rhTSQIggbmJzQVBpTC4gEkTdzJRW8N27XPWa4RdLD5EnksMb7G2eM5TcqWkBF3GQjxCMHFIL3vWcDXr6HKqE4ZNv9jTE7mhDG+wTkej+AZnV0+qc14WI2vhN6sfQVMtfyIixywezPLeZWfp0mzkJ1mYGdYEkj5B/J8+Pj7wAaufzE5DLLZ9QCWO0GGJim4y93v4XnZfnr8gBFjC5+3RnjswwTWqnHqISklQqt4Jl81P/oHbJTSr3c5gEi1V6+ssf9TZdOtDhOylatNtqPUM0b4RC5rpGy7EJyQlcCRIMXqy0M8yjQsvln3S5NDrkGfoigpGvvLtIsUSlQ3VprmgH7+CwSPBVhVcUfRQ8CCnX/5deKmq9gZhy7/pncTvelhlDSNpAkB23LN2lxksQSKNsj+7Fu7wclf1zDVhEm57Q1Ye/qzxXwEz9nmQ2Sp+FkegWnCAsyk6aeXgD3el7MprKVbP2Ruawqya6Lng/36jEMELacVUgZhN03nMxK1X+wLp/YSfYeKd6whRfgKp2ZunPo2v31eJ16S1l7kUn8qYSJuPsrn22JDLdnl3pCZIBljSo3yTeKq7cOuObU8QWSLjGyQTC2J4Wb4o1sGYiTy3MgeSsLJJ/iSjqOkp+t+Aq+/t6KJ0iLJhxT9zf3wuweTgGW/w/bpU5aGw+E0cM1IMZ/rR4seUrJBByfMcvC1/1v4hL00NjmVRnsU+DLRj5iEPSO83ZH4EuZMknv1E7sP6zI51wEuRYeeYIJvxkBGyPQ2F4HWMSO0S9S1k8XwZWIdguAFvJLjieyOan9A9ziDb4BToGqiI3aawnbMuT84IpzLzc+/aGJzDQSyOkOuLzNLMX/2Nv52P1CdiGY24iaxWyfCTVk8mHBGYZxH0HLmomDbsiubHMiDPOGblHQzWUGIq0TuSfi3adSVhAvs+ZWAPUf1UHUYuN/+Y3InZa50P7+fWKeUqO4BnnrE2pQqGmqEYx2h1jeNe7hFGRVXyfflQpUlsKB9tKONbeeIW+HjQsGKELxCHkbpE+9xSBY0jFSumffEaQL1iZVuF/Jn1ckXbVS5yO1QxcQ9hmg/NNTbiECUgo2T6Np13aeMdVTXM4JMv6VYCOjczFRbaon60JrcJVR8fG+GPWSa8Mvw1Q=="},{"id":"e1dc13bc-9fcd-4e76-ba9a-64f9d86595cf","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Report Generation","description":"ai-report-generation","prompt":"Develop detailed content for the AI-powered report generation system in the tg-ai-vibecoders-summary application. Thoroughly explain the implementation of the unified generateReport function in lib/ai.ts and its orchestration through buildDailyReport in lib/report.ts. Document the two primary generation strategies: text-based analysis using message transcripts and metrics-only fallback mode. Include concrete examples from the codebase showing how message data is truncated based on LLM_TEXT_CHAR_BUDGET and how date ranges are computed for daily or historical reports. Explain the invocation relationship between API routes, report orchestration, and AI service layers. Address common issues such as API timeouts, response parsing failures, and payload size limitations, with solutions like structured fallbacks and logging via _logOpenRouterCall. Provide technical details on error handling in both generateReport and buildDailyReport, including try-catch blocks and console logging for debugging. Highlight the 676 lines of code saved through refactoring deprecated functions into the unified interface.","parent_id":"d5234fb2-3f55-47ab-861f-49c3096f6167","progress_status":"completed","dependent_files":"lib/ai.ts,lib/report.ts","gmt_create":"2025-10-11T18:38:37.445292-03:00","gmt_modified":"2025-10-11T18:48:33.219554-03:00","raw_data":"WikiEncrypted:jU5FtZ6QaJEPE8zTUuUxbOFl0O4uB3v7KWeHyN0E4YfnilaS6FDVmVkU1PdigSCwrszf6T3vSwwgYqNZCFBJSlRy7a2yfN96otdcAiEmnyhCmMbiPPjiI+jmFig5srlxBlEnPUh586+IZlekCm9i7a0wJWmKz2q7bdFHXiuCnJfhXqJGGbUsdo/mD/YtGRpYwXSFMslHxQIdJ65IJ5Gr/Tx01SvMgzI2mypZy+6fNrZ8ElXrkzVL7+nx/dPFEYE1/ooYogqkS2XKo3vEM142fK3yq5BwKiY4GOrZ4moLa4MfMeOGEY7R33gLoEmamczsUTaV/j5hgMmGlVZn712NPSSM/lwpCF6HnK7v7VCPJKipld+WiK07u/D5md5OcuvM+NfpqrFm9n9MyU2zgMAAYveW23rqFhb8KQdl25bps4DD5EKV6J4x+RiH5Wv24idnkEKo1Ix+2bilvycZE9QECEXteR3VxGEvI4/yBh15G07CoQPWowcxbzhYqIA/t3+iqLxtxum/+PJdLGPudNwsXZbOQSuti9OcpmnpUARTlDHGipwhDGlUuZ31i4TH3VlgFvFIDdNz/CaWiUGgD8rarbxQs1OtqFIg7yq2XhwHPozLctWo9/oO5WTtlBPTvSZ4/jc2vlTA1frqywJh3zSriWl6yusNHGtyRe3MMHcI+lnj+L6RqWAPWL7m7z9H4moN1XHh3o00Ux92OOjbJ/DkqjZxvjzu1n93QFn84lhxsEmGRh0CGDcrfjJAXvp5TcLoMkN9iCYs6qAA8VIMWByqXVAe/tS/ycbQ7L4JCU1C67ebaxxBuZueGKGO86mXrMA0UwriHu0YxH9y7XwV5EfnoAjYkYEhAyccg1x2PdbKGyYO5itoRbg/gpt7t+X5cATsfgVpBjt9DE7lOwsWCbreorakhVRjb2XBn+78/H3zwDIelzQzyenXBbCxDHeY3B6Q5b4B63WFemUeHnuJs/jni349fgLPDWUyIW6MB5G4Bl4xEithuZyxE5F2IXdMtogQJ3Iyb/3/QzT+xtp99FMlT3o1yc8bAH3p23gVx4eheh7lyKsHL34UpzNKUY6lQf3Xh8z/SDDMoX9PrV1v0ISUvGG+MZRbypsnAXPXJ8Ti1VmAnPxDgIJ8i55KvZ+qPYsQj+O+u8Rrq+hWzuQXbKQE6qB+3dfqvGLz6L8fLcSEKZ50kmuq+aB10IIW5jOg/5VFsjYCmXXHXJkurscVCHvttKy9YQx4kI2VBKEO1c/2960CmVkFjn+77DPI/CD9nYAr9ffLFHJA5bAbdhx9zf3dzkc1NlouG4bPPj/z3pjTFGWyMDeqR+OWeS3qWSu+wj6h9mGwIxB2mMqBLiPuX9XYgnZSRT9WoIKWSsKdko4ZgVaOD7M+6t4zBv9iKz2O34WF2nt8iEUQ2QEHFJJhVd8rH8QbeaaG6J+6GZEMTPZgkwS8DzcHULhbwY6s+vtka1Qe4xpciNDPrX+8r9+b52CHxw/L/EdiIxGDXpi7FE47yrttfWmNh82VQyO4Bzi7YwPCnVXsRbn6NHfmtxY+6DqXTTK+ZkPcTpuDELxM6TjJYmTYDQSIy0BpPxuB6Msh2zklAOCdM7OVvnoMHZL96PfJILWzKE1eJQFYvJcIw1gEaiSHJZM4M0j65qRyd1C/NmZoKPk2WAriHnCVkvaL+tLo5t8lxox4jhbDqs6wS/pXRnTQgijHSjk6sjGUgbiOkXiT24qIYd9kCbB8hCvjMCzgNxy20UxsfsbS32odXnDD0xNIrBich8nIy6dyBWMQL4MUThwqxYIdpWVeuPsQ+bSBIQ50y/DnHVk/FfvlXJ9MgIQ=","layer_level":1},{"id":"603fdd04-8e0d-4640-9982-851e10c7bebc","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Dashboard Layout","description":"dashboard-layout","prompt":"Create architectural documentation for the dashboard layout system in the tg-ai-vibecoders-summary application. Describe the structure of RootLayout in layout.tsx, including the HTML document shell, language setting (Russian), and navigation header with time period toggles (24 hours / 7 days). Explain how the layout serves as a consistent wrapper for all pages using the Next.js App Router. Document the shared visual hierarchy and responsive container structure used in both page.tsx and week/page.tsx. Detail the routing logic between the two dashboards and how search parameters (chat_id, thread_id) are handled for context preservation. Include implementation details of server-rendered metadata and SEO considerations. Provide examples of how the layout supports mobile-first design and accessibility standards. Address common customization scenarios such as adding new navigation items or modifying the header branding.","parent_id":"4b11e8bb-04fe-4d5b-bf5f-dfd8fa2b4019","progress_status":"completed","dependent_files":"app/layout.tsx,app/page.tsx,app/week/page.tsx","gmt_create":"2025-10-11T18:38:37.619967-03:00","gmt_modified":"2025-10-11T18:48:43.338811-03:00","raw_data":"WikiEncrypted:rL6JaAWnwczCsZW+uBgt2NEtAHegjFDe5nzHldDkUt8ziqGD+FdMlJTEOpuzrSUwkkcnAmfF6FBs2Y/Rr3i6gfhFO9Cp0V/DlcH8Pn0S6NFY7ae9m3dZk6AkhGMV8S2LkisvROCo8vjxXpFgB3usDH9Fhhy7f532Byqh48ZY6xT/87Eugcf9jFJ+MEOggq3mbUv3WBSaWsVg3xVWAEIsqxhICa3XjfDqiVl6Zv0Q2Ucmks/mnWuUGbiNIg0iYjd1DhRDLJR0r2gvuohyVaX2vse8ZTDPZGXHOgbQzfLMfIS6Pq1qoTAFh17Qptfd9q3rOvpjV/ye5WLaR+ngIoTu2BcECL3wEe7mCaZuOhPRNAhDNPTqx6nTt/kz2q85nwxw/bDkOnJ8XAI2q+0uExvSLOWxpBrgCkU5VdfI7KXE3y1TllmIC/0lQYdluEdGESLghHcWZtoZ+QsbR3gtCN/1TW5wflyG/Br4biHjAy3eqQx+MkA7yM6eTLp4gvDrTB35oERSchpwFxVOvUMAF0pIg5PQ0RPoSbwMpY+VIJQKmLklHrJ6l0UQR5K6hFDj1Ll4JuCE/hN/dH6R6u8Ev5lJnl7XGy/NI1u4rallJGMKdj7FC3vstexYXfEVHEqXiEoSb3PV+v5tE0/TDNdNDFe1bXMon07unu3y1Nj36S9XSS9kC/awkAu6XZkkcHtiae7Y+VhH0m2c5uI1DP7hVkEMFXR+oEmFlLQI7I9y58UsclSaiXG4uWaIDVNmZMWAFFMgkkzR9IFqkWba4cp9mZ8Hwn309Ff/t75W4UkoqQCwtyB1ILI6wxOjrudCGl51txc1dRAna84FSjv8KdANkVFE2dNP1sHIzdbasRsj8Fh9e6oxPdeFV9KpgrQHQuYhKS3nXmSaN8OIjIGns3ZwlRjGQKcVK9bG2zQ90pqpmFHCyml07vYvbowQo14LACWy1Vbs9pl9gJJ8CwooxFabzjpyNP0llfGmJpLauP2TPxJTGaWiGZCAIH7MODCrgyA5dUU4CKjSWIsQP1bHVqUqcT0DQh5GPSw3p9D5XOkqhRbcCYPIgYglwYO5QkkBj/t3yWutKRv4KLRgOmPWSveHRdmN17Gm+TXtfvi37ImEAJ73+yj64r6IByRTsdd3n2a3vnpRUiI3fnnlhwRWu9JjfUMUx77qdf+12fvr+XYdjJUEmo1QQPj6g19uevzjQgseKrMj2XTHRztAj+y/NDgyJQTy3t0MqFTzdasbgN5fIIFgM9tvO/9PcjjTZ829yHyK2kS4rv/DREBWNFB31P9XWUOS2XjI/a+qMXrHQ4YVAW6lmLwJkeU4ZaGPGhL8eeN7FysDCVS/P09mQevqor7bddYp+pvWQbLNWSUY9IH/gPmc7cI4RsZlfZIeods7bOEQbEORCmCy/vLZGdzfIFGt6XkaVtqh7LNkZ/1Sn7icsvpob6gcf2iTSTbszvVow9mIVX+xv284nlQ1goJtqsJDx7b2SFpDeGPTEHCat9GpterER0+m6LuQNWa3WQP49p6jD3K9gWcoKNPxp+7WiR91k/hkk50aWdlXl7sbcMkl1xQnrgy/AIMLu4YG/MwfBGoiiNrc4O7tsRI6MXsssfxIabH3PQ==","layer_level":1},{"id":"705c16ec-9f49-4e95-8bde-64291654b9fd","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"API Overview","description":"api-overview","prompt":"Create architectural documentation for the backend API layer of the tg-ai-vibecoders-summary application. Describe the high-level design of the Next.js App Router API endpoints, including their responsibilities, request/response patterns, and integration with the service layer. Document the routing structure, HTTP methods used (GET/POST), and query parameter conventions such as chat_id, days, date, and threadId. Explain how each endpoint orchestrates data flow from the database through business logic to external services like AI and Telegram. Include infrastructure considerations like timeout handling (OPENROUTER_TIMEOUT_MS), error propagation, and rate limiting implications. Provide a system context diagram showing interactions between API routes, lib/report.ts, lib/ai.ts, and lib/telegram.ts. Address security aspects including environment variable protection and input validation.","parent_id":"a14d18a3-9e0b-4a19-ab6d-4b13dbd25e00","progress_status":"completed","dependent_files":"app/api/overview/route.ts,app/api/report/[kind]/route.ts,app/api/send-to-telegram/route.ts,app/api/topics/route.ts","gmt_create":"2025-10-11T18:38:39.414428-03:00","gmt_modified":"2025-10-11T18:49:51.286788-03:00","raw_data":"WikiEncrypted:RBbE+6AJAzmeZnwy5AoVFfXFFfyX3vOo9ewVZlYgKLbg3cw7olwYItwZ+kzTIYwz68OXmRLBtSv7suFEepk0LRFUmuGe855yPVuo2WgqoU0+uxCksIkp8K6Qs2lFJ8tp4VX4Tf/744vK3ARcrax1Dt/38UCEpXham5Of5A/ML9be8cWjX4/Q7WL0jSFy5aVZqTCgJL9ptwHyDS2eMIj+YjfIHWb/fCcxBJ8MHr7JInB2NsFBpyIeSbju+yVBwrIP45CrVpZUdPzPYvBbA9MaTHr/2wR2DQ0PtEMdbDT1YatsWCJBon8IcYDKoywkCazprsatToHYTLwIdeoRUXneJs3nd30HO0ya5XSIxWvQd2AoNQxAaTdy/9KUHmgl4DGGX2JDYnhc9O8j3LjJ1tdWETv7HL/kx5gIqysdam8fukZlgdm9HVTxP7g8R6GNccYqMQzFSlgDVa7km+9PwDXq0aRCvGvLX5hQVbw1z/5IDWloflSoRJI4W+NlpoSND+MnpTPYscndYZzky9NkAzq3q5n6tcmwyNYVpwDv2DjnLMF9WTytg+8Z2HpAgJENgpDf2IYXu2U75g+gDdjgmVQILRP/bg45AyFCTaYbSrQRNb3dDHJaXpua/yUZqCvbsVt7uQRATtJ56LzCWXZaOoIK8tOYCCwEenelgeT/eZfLMz7cllooJhr7+rODq5YSvb1VbRZuktPXeMPKHq0wVjggBdDTFaXcUimKLJY8GKOdH1ACri07Ez/LDaFniedJi41mPOWnlBbvJyZCLkmOdgWxcoOzMBIc8QTzeoIYPKvBFMNUlCfCik0RrfyxyxofOX5LEaL+FEQDs4bC5fDErF0Qmb65BlSPhRZAedsTcSJgW1jguUQZbFeGv8QpoYns/ajbWZ5VAK2dP6DcTfTvj97C+8HYSteTwvuhb7UiTKdjEv+pxoJaxYWdXdFsENG12kTTPtO+R1m+ESVqxo32Vhclbh4CnO0VZxEW2kyMEDulkjEk/cP8L3pLVadVec9TXw05JTRyt9U5v1y049jczdIu7DHUTFpU8lYx4MgXNJsabc3WH337t7Xv6hIsfLrCP6kSMXBZsGLmMpE6RE/EBeg976H649WdvCEeFTsQcbvo8Ox6xRZpGjoBryNDlNaeOXkaRtnE4tR91vcnup+8eQ3qDXJIIbJlZ25SH0A8XLYQRKA9HIF4qSYumyIBCmOq4f9eXLKh2TwOuQFj++DsFk/dgjJSmSdlIUhzCObTzEKXADGn9aRtdRCM8LPPjeZchIsHu7xKZpbrhwVYzjOdJrtULwwVJ8TeVz54mXbUis6jz5iKeugwYcL42gByj8axRNngmrJg4qu9Zx6bO+rggGhhHzHjs/FxZAdTqNPc4mrTs/F8h+YIiaOtcdt+uNWfxgAYCVJlk6/mspA+MzP/aCIkKLzUhLKz5lCoBZ3PtPmwmIep9VEMdw7txTePNDw94/z9sai73OoSehffzLO/B1u/2gq/uqfE/ixtJWDD/PMLkEI/oKp9HoFZqE7qMPtqKWtMID5oExyKoJcup578MwUUDJwag0iERVF4/xl2axnQLp6k6VMAubIYaixRWlQmKZcYjJ6tFDdoibO+TXb4wuIacQDreu//x2U2tOXY6cH7e0G2+2s5SB5om//ngziO+YwS9pH8h99bV61ZxUKMcWROaj+oV1aIz4ES+UZmH3RWaOI=","layer_level":1},{"id":"81ad1449-36de-4b5c-8640-ff3607fad276","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Overview Queries","description":"overview-queries","prompt":"Develop detailed content for the overview queries functionality in the data access layer. Explain the implementation of fetchOverview function that retrieves core analytics metrics including total messages, unique users, link messages, top users, and time-series data. Document how dynamic filtering works with chatId, threadId, and time window parameters (1 or 7 days). Detail the SQL query composition for metrics aggregation, top users ranking, and time-series bucketing with date_trunc. Describe the data transformation from raw PostgreSQL results to typed OverviewResponse model. Include examples of complex query conditions and parameterized WHERE clauses. Address performance considerations such as LIMIT 10 for top users and efficient date filtering. Provide guidance on error handling for empty result sets and type coercion from string to number in PostgreSQL COUNT results.","parent_id":"fe6999b2-9acf-408f-991e-bc78d67b5960","progress_status":"completed","dependent_files":"lib/queries.ts","gmt_create":"2025-10-11T18:39:03.177613-03:00","gmt_modified":"2025-10-11T18:52:07.890913-03:00","raw_data":"WikiEncrypted:H6T2AXzIpd1hEgGaSv3O8hm2xKWFzVrn5oFiQHxAC/Dddv78KXRtKCcIDGqS649WNFOk9mEQf6O+46uYEA6tnV32VKdToD8z+OBOtahKIH6odDwBn8zjr0XwWVPcmTw4b84RHoTGVKVpPiBvBc7GzbYMiKwAdJgUAquw1gqtKW5yOFYeWEo5phK8JzXK1nzPndT/FNuwcMKkz0RDYfKuV9c4/Hl2SYfH0Di/vo2L6LswOvnTsuR1Lw7XLKH5d7QXyKPFch30AaTXnWw9L7LkNTqk/yzJnjkVhn7F9XiVaTSPeX1VJraYrqFmxsFGjsNQq3vS0jpAttj1E7Yv+cNRMrxbdtQqDn8avKWGaCD32VoprCnqMXktm80oe8kTYVdOzcpicAH012A82qbgyD1FAUeRLBRplNc+00y3T7dnP454hd+H3KcNNb7CzIvjRedtWpOL8RjumjOb+V12we4KT0dMy2XA0EDbtO0scUQY7WAIqA0JORhUBA9WydjkUU0nyj759YT++C2UBTvHPG+qT/i2BpVw5Y/V1GIupkrUfjFfDhum55FW52/f/X73792sbEhDxdAQejd2X+77jMzpENdZnQ3dWiJ2YYu9/kjzC1/dYJV31HVSAL0xx4vMWRthUkZuWbu0p3ZGnHgBiZcXhX5ZEcCLzBR3HIEuyjNcPqRgitOVk4cPP4kaPTDvyfmZzdUnf9DRGQx3a0ZmLdY8ZYxAavMrR4rEsyJzPfmoz2TAL0ZXSn4cXrL1e4JxnpQL40BzrBcJ5aASkuA7VxPBg4fFrNXHpucnTAPmvdJLPfIJQXSlAI2SDnjR14B/FkEZq+fprufxB5vW83ILr6/gx2KBWi5QNt4n8DcYDuhQRXHa5MbqH5DWuJhKMIc3MDUr0HovD7D+nHkm7XMzKvtVBTol9CDyhJXvN+xGclbmg7XPLSPBV+KEx35CQLNcfT5m9um+z0IgcJocJf6ckq2kuyIUrEhNADU12R+o7vvd1NSQGRi/MtSRzC0jUBszfhPvNIe59H2lYN04rcVV2KN1J+CfPpiim467DzrM04iaZrHNN+a7LXKRqIsrSRrkJvGiZZhZvZ3y2sIm7VZXLhZX+DGfQZAKq5Y250Uu4T/GguIFQtq036NsIg+5XkzVkm1H/zV9gr1qkDttRY6L96MqN6CIWl+Qujly12jSAv/QQebCxO6bH0NQ+D74O8XiPBr2/HV3jarSYS2iHoq7VrVNAD/pdZZR6K/oXrmOqXrO2luSylGlhhQeCnVOqBCHs5uPBwS9fjclnk4sAg2x7Lor6XQDNo1N3JG4Mba5PfcIIHHnL0D90wOepjXx7Jfda7z4sAKZ7MRplQ78ryrxgEBDVP6pqi5LdXYFlScpuclWDNL4HhFuwqTNt7Ie1Y3YoZyR183/iYj/YTMiXUOukqOTm7M8dszLYZYKQSqV4h9qTPlhTF+HIlq8SUtMdgoo0csPPwpNNz9zm+Q2yS0mPBgBCduzDgQvkYIknveEBoGExeKpJn242Yy2OG+YDFzehew5","layer_level":2},{"id":"3f6b0885-195b-4468-b7aa-d69d0d475abc","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Overview API","description":"overview-api","prompt":"Create API documentation for the /api/overview endpoint in the tg-ai-vibecoders-summary application. Document the GET method, URL pattern, and query parameters including chat_id, thread_id, and days (1 or 7). Explain the response schema (OverviewResponse) with totalMessages, uniqueUsers, linkMessages, topUsers, and time-series series data. Detail how the endpoint uses fetchOverview from lib/queries.ts to aggregate message metrics from PostgreSQL, including filtering logic and time window handling. Include examples of successful responses and error cases (500). Describe integration with the frontend dashboard components and usage patterns for real-time analytics. Address performance considerations for large datasets and caching strategies.","parent_id":"705c16ec-9f49-4e95-8bde-64291654b9fd","progress_status":"completed","dependent_files":"app/api/overview/route.ts,lib/queries.ts,lib/types.ts","gmt_create":"2025-10-11T18:39:04.000591-03:00","gmt_modified":"2025-10-11T18:52:57.844188-03:00","raw_data":"WikiEncrypted:H6T2AXzIpd1hEgGaSv3O8p2CMinNoOSA6kHe9kxzCbHLcYTbhCl5PskCHv7H+JNO7uefrxi2SqNi9PRoa+QPxcwp1rcZMo35BeRCrx1tsheR8+310aFkLeBT3XqMybe764l2O6kN30sKXAKG0F+cUej94tVLcozmT/b5PzhGu8WnTRE48USRsfMhVRul0+25Ko86GB3Ksyb3pNvQjX7CDUK471oV8O6etArJcN3Prew93/tDYJfbBGX1AI1Sf4NRXTzzkKDPWHT0htoV9IbNQEIFaMDJZovC+x82GwrkaioWQOboOb7psZeP3cNOiFg+1SDZgsHdEHHOsM9WirxMlDW6xVrzy9kgmjg/t8xsGrZCcFNPdD4SYFv98bB7iS0Yg5Y4iCzehv9Wi9vWNKPA78OaFw/6P4Td0q2mP8tFu+VExRiYkXNcaSe36VU6Iw9VcSTYzpZ/GwQOKAGPey7oN8kzBajxRHB62t/h8onBbMtSAHvuEE6xF4B2cd4mvqKCLjqK5vz7uT5xJzBRgtC8DYqtDhh1xyAOmiza5jNqYr0+GKJlVYrVLI6T4513UT1yReAdS7TkzAZiz4YS/7evwnMO3/nXj+p8xrzCMQhHcfy5+XMiA/JBt/3OdcfC36ySRs9WTjdAa3848hU4joJTeHttyPhLCnSUgpqFA7JnbRKBL1uNzh2D76SUeB6DzME7LIlHZY0VJ2B3m19sSaXWE4REzq1n0d/pp+7BLHut7iUtG1hZhoSsw6sG4tQH45UotI2vV9XAOb6xMyZ9ohqYa6+dpa6tvDTAWvAO8FQSN8oSvq3wC0EBjgA6arDiAjGUQjkCci+X5haEH6oa7xqvKgaZmC2gadTXlES66LY0GTfkuq3U07IL0jfXFM3LFODZa1fe6ShyJxwhb7GXbUpd78mFO4/s5E+euUXkYNIXAazgJJsbtKdedZWWaCk6jw/OdavBZf8Y5bmiz9vVzQKcXtu/NVUjx36H8zM+mJxJ/0N9XsTdaoLb+8h3VPgQjGz8SBOFL7nVMLJ0pWamqGr/7ciLFMcO1R7HGhKMJ/5X5rmrpi312DjXICPWUeWRJe6pJKWv6+7CLqsf0oKiK7qAQAkNPSSjlA+wUqI5wAaFVNKWHUI7cvn6TrHlJaiYxLHGedlg+4MvYxmaW1sSZ6Bxo4X7d/B6uhT2sSzouRtdueOkaZ33TH1wW86hNKY8Ia66+zdAX299d+GW9nZndancnshOJzYXKDU1nKgRwcxls0v8pX57hVEflnHTrA/A32+ePF7TWvi0TejsJNh/DB07F2B6/p1aB3wCycX0cH9nSNdwdKaXhBYt+iZuxiQGa9WfzRAP4WW8m6RKZa0phgHGtsTouLB1MNpdZWT5nyOLpqk=","layer_level":2},{"id":"056881d8-c203-47a9-ab41-3a5a7e80e13f","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Metric Card","description":"metric-card","prompt":"Create detailed documentation for the MetricCard UI component in the tg-ai-vibecoders-summary dashboard. Explain its purpose as a reusable data display primitive for showing key metrics with optional accent text. Document the props interface including label (string), value (number), and optional accent (string). Provide usage examples from the main dashboard pages showing how it displays metrics like message counts and user engagement. Describe the component's styling approach using utility classes and its integration within the metrics grid layout. Include guidance on formatting numeric values using toLocaleString for localization. Address accessibility considerations and responsive behavior. Explain how this atomic component follows the design system principles of the application and can be extended for new use cases.","parent_id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","progress_status":"completed","dependent_files":"components/metric-card.tsx","gmt_create":"2025-10-11T18:39:16.161315-03:00","gmt_modified":"2025-10-11T18:52:55.082628-03:00","raw_data":"WikiEncrypted:wqMZoWM7JzuUrLNEmTF3PEQ5T6cvAxDz4+4ZZ5wnCdp3Tpn11UjRO3en262KaeW6Gc8AF5WDXbBL+r8Ju4IYKyuavaGUnWavgxbhYabDUeBAdMl3mYtydaZq/Nvw2IFW1c0NAzYN4JWP6Iy2sGGNzWr3M40MM/OcidEhG9QwXUbXVPsJ/TIgCzV9SvRKJGS85Us15tam0NgA70Qy7xuxtxAnWm36C5LPsG9tMW2R7Tc5i0pTJNqA0tH85t66z4wOLqz+7BWPF+TycKzViA2HuyrFsgunKbNU+8aMRKivxCTW8+BXUqc81iNFl6NV66FtGDfk0SE8tz/W8G8CI5Dc7z/sCoWEu5s1jBbsMI0l6ZqA9WKrrWLndC9zR1NSgJbwL+b9isJPr5SJaROGOkyNHu0STOb5WY3McEHjxSzsAAqgPVwKfpIKALWFcFbi5HXOaYXH2sJ5kliOSxS/zn74HRTJsF9Y1fxPS4qiR9rIUTn2oAFG6rdjHOEaLhu08z0mNpzcuJy9kiUkGQmJP+v64/ca0dBimtAAWPMTgXfQh+dbsEbDNMOCYkcjAm3zx6LRzMaYmfDAN1eGER2aArpCEU9vV0RKGw+Q6px1L9GEUCTYMD7TLc0A6cYmRIjmo3Gxtf6bp81l8eEHAI9ZpQgunRR6oL3CKdZpLdtd85aIGL7moszYEbzz/fatI2JQoOIB0LztQxNX6E/5mLpvbYq3CmsXzsdwiSXrb08wb2jwHI9SJ3fqnDvBjC9mQ3NWKvudoF0ekayoY8a6x6i6OxZ6Sr6U9OdDrxcIzM9yt6s6lM0KrGxqGH6RsFs4YBw//RIN8qSBHQdaoRxo38cTtE2sbOO2W5o+lT2Rv/mOb+6DpUM/quWEr6uTZN4F+obEFvKo7+pHiv37ZliBxOMkIcOi1VqVbZYJgRPgRaTwtGVaYs6RrwqaZ/fNNcrOnFK6qrdnWHrj7wgUWsVmOVJ9pwcdPVl5O19K5JDGWuMqLpOTgkCCxXhaVO4bcMZw98L4sLN5Ve587Qf/EeWdYqB4nU/7luVqw8Zx+xZR1mXUIbl7Zj+srHfhorV9K2K+B5SMpMFKLJz277Lwwcd/cLucD+0crENIRAeEUWsPZQqItspmW8Td7+gV3tipyS/CGIqCAXiyqagUILTapQRMp6r+CCjPAx5PH2u73bFHgHtOH1n/+0W6ziWlDEr+dDZwyTzQ+gV0ovkKo2vupGbod5txLTELdRsZFV11Ene6CD0Ic9MM0n2QUCKNor/TK4DE841zUq5pDtd49xdkLkg2XmQjg8eJwIYfD5l/TI4y67TzYSFIte9PRrv9kFO+ApOiJ9bP4POdkTVfr+0rk4t3CCReymat8TsfUo0obdjWeqITnegWY3jiv6JmcpjaCDqZT0Qly9HKRTsb2A47rMbtCU3qBeUwwvKOoIgjPIkAc29XIyQPu+Q=","layer_level":2},{"id":"9e115045-fb8e-45c7-8ba4-fb0d001346f5","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Report Building Process","description":"report-building","prompt":"Develop detailed content for the report building process in the tg-ai-vibecoders-summary application. Thoroughly explain the implementation of the buildDailyReport function, including its parameters (date, chatId, threadId, days, persona), internal workflow, and error handling. Document how date ranges are computed using computeRange and computeDayRange functions, and how metrics are fetched via fetchOverview. Detail the message fetching process with fetchMessagesWithAuthors and character truncation logic based on LLM_TEXT_CHAR_BUDGET. Explain the strategy selection between text-based, link-based, and metrics-only report generation. Include concrete examples from the code showing how raw message text is constructed and truncated. Address common issues such as invalid date formats, empty message entries, and rate limiting considerations. Provide performance optimization tips for handling large message volumes and strategies for graceful degradation when AI services fail.","parent_id":"4f1029a6-3e39-424c-9f21-e1b862a6f287","progress_status":"completed","dependent_files":"lib/report.ts","gmt_create":"2025-10-11T18:39:18.821553-03:00","gmt_modified":"2025-10-11T18:53:38.688583-03:00","raw_data":"WikiEncrypted:ncgUburcUGIQoFYRn+jCfhSpDbyKLfuGGY2wU8antk8bU4LQfLz5DIBTBo88CU+3ymjz58gq9FxAydaa/K4fT4G39W2Q1MJSapO7Qx7vQPrvk5v0FhFO2LQYGDUJJkskb2hc+uDbvWosNHT42T9b46Sq4lww9vOqh63saoQVotYI/dCYd2qxqWDLnWYYvPcBtE2spr6x9G2WkKsTlNbPGN54Q4p5Ml7SxoTku4qdVGXQDwi99mYNbtwqATZhGZELr/LAqgLPz/ll4NvfAH6y2ab4iWeA7PSHtcc4ZnEs80TiFTgpdF+ZP5FWFesCQP33v5WFyVk55ZwYr9R1hVC9aiLX+waKJQXFGWVbj9NS5+C1He/nNUJIQzVFqGi4fNIvW2vUxySZfNi/8iYtohwkE5HCAtJ1ZRyX1vFrHddVvXnDweaeZZZR+tPAl64KvKvpxFCA5GFhtEtH9Ll0HP4gdL86EqFggRknkvOztkpUcLXggyWCiN4dZ0OBntLn5mqaNxI4Y+qxqRUksWv+PLlPC5+iPrEUFYrcb1NAYlBqzzsCWMoQs4E1kZUupbGhuFjlhihaGwSYoN5sCAbKfMmpC/17qBnkNGDBKaZD3EIDz5sjVKcg1HIXBXBwEFd4VP2LwGIarOint06m71typk1/rRIx4lbUBcmbOP3wHzR7Yj5fWc0zPAS23g1YU1UserSAw1saRKBwbjGqhw2ktLlQyl1C2vw+Ft6uaQojVg09ujIj7t0yaJlS7xNSA4Uf88TqXuFLjgyZlmE6Kpp5SamFahPfirztfXTBwD/uOZ53uwvliUq4foAi/8dn3i0PSQWlPSUzRQbN0eyfvxHNJtdDHjNL2A18QdzBwlObFevcHAQseT0wMAwpOXr27jOddRgW0UI1MuHb9Nr8gONqtNoTvM1EiPTeaV1D0UnNhN577DG0vEf5OWCdT6OMz6maxwN1jW0FFybjs5Hz2VyA9mIoUpNKjlVS/wzlxpWbgDBm81tAd2lzjg6kTM+O3zw1J4btk6Xt+53cV15VtzLU4o0WCrOFpcOGhHwFkh3XUxKvP/SDx4WMebTDP22IYM57WK8w9H9dwHFo9UXpJcEkKt3qTIpPVdeBx4NQL5sYZs8nidJaS6ZKYdCBoIkXLEORWpyJXqidz9vlgSX9rnWlblAANnHPOz7bbLdeCq7J7oG6grmOZ3YRYu51lHkasyU6kLUsw4Ivw+mAYotNtJjtqfOavO7yJWFTHbhWlMhgbp5qsi1aP+PVmpQ4pz6suKWrl4IrVanCoCH8mdMemn/vi0z0IEtXcTBShC3+xWXSwmvIO0uHYP2mCoqkbQvkg0mmOgBdw1Q5dk3qiF0Ft0LNF6bvGJ38hqBRVpBjkIpvklOR2byLKX2Qp6Wd02h7+wHD5lX+aixFXsUlgBJvDp91PTz9ZvMiTHdBjvUB+2eCwEhvEe/oCPgD2zODWQNl0Z2P1TcPEQXtMfeO7xkqtHahoPqL+0Z9SZJmRXPIUL722+1aqWTwrKSIuDH7GI26xWDpt0DszdUTCa0JjXrVBMnxTFprbuMCGiJdt+Zghl3//eDKJx/27ZXzPf14GDUPoL1t9gwX7hsqXxEjy/tpN3hp3THBSuHvE5yOoW0F/7EXPObcwIVf6vdh+L7Vo5IafqHWH/R7vy6YpeBselhJ+KTb0TedJeShs/VdMtR7DWTaqLf4kCU=","layer_level":2},{"id":"9eb59823-1c68-47ab-a318-6197f28087c0","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Fetch Messages Text","description":"fetch-messages-text","prompt":"Develop detailed content for the fetchMessagesText function in the data access layer. Explain how this function retrieves raw message text from the database within a specified time range, optionally filtered by chat_id and threadId. Document the use of COALESCE to filter out empty or null message content and ensure data cleanliness. Detail the implementation of the LIMIT parameter (default 5000) to prevent excessive memory usage and manage large result sets. Describe the parameterized SQL query construction with proper escaping to prevent injection attacks. Include a practical example of calling this function with date boundaries and chat context. Address performance considerations such as index usage on sent_at and filtering efficiency. Explain the use case for this function in feeding clean text corpora to AI analysis pipelines.","parent_id":"d462a166-b222-49be-b685-56af271d085c","progress_status":"completed","dependent_files":"lib/queries.ts","gmt_create":"2025-10-11T18:39:19.815011-03:00","gmt_modified":"2025-10-11T18:57:51.627669-03:00","raw_data":"WikiEncrypted:7J2Z02irw7WK4JWclzBtgi2BFD7USe322do7ycaVAGmQsegoTBWSMOgY/FMF84tqJIeHBXCZHCQJTgbvi1z1khyRS5xzTko1TqqEe8eLckJ2htD2xwYpLVvoixqOj7JY47ovhuYreH3CgVV6psIJLpi61pwnMby5w5LW/XuUgUSpT+An2y/VmCxG09s6lQAjqTqHuZgID7PpA7k8GOtoUElpDc1PhMTTxM3DuiO/BvvwCG8gA8Fx4VQB/hHdQs3AR2d/LmK8OzvGs0qGrW3/KhGzvU4AkAIMiuj+pMb/oZk2eCpNtjd9dVtepFLh7q0ufOR+HVlVln01stOaKDSoMqvAktAxKcPmoLyk0CybGh3pCoByq7znB4a77FGeoMQ+10A2fAKsc1Cf7mXBcqqFGG60WdypztVxh3qx0TpzzzLfqHlYFVpLc4k0dq940z5J1DTH+3Duc8aon35WpBOMIxljWyXNJ+KL05V2LZPrrcEG8Dj67owQrDrJpfEi1J/W8fW4wbsHZ8/ooYfCOotjvDtO+rJRUndQcRVB/beSObiSeyg5Vm71w55AA4Da88BHVRcOqJq9lMRhwBxh/uOfF/S9lN1pTggYSoHrR2sogCWx8sAYyJhoZbP0NnXij7ePxcis4tU6RX7jK7Yas3Ker0j07b2920E6iheTzRJM7reGZ9LCjWcI6nyqrXuXCqU14XRWLFRpFrynp7VY8Ml4JRvAht8C+ASyHIoLBpx9pXS1e8bGKxXQErAsGEGpfJSVFh4znDDs9aG9QYT59nNmNCbsU+xMt2I1kKnyWdYummvuVJHyV0BFJ6j0epgVbbndfekravYn6kYHCKQqcxx8eN1IJ1d8JrXydOyOBuYO0V7L8l9edjdZmrZ0BU5I6Qpy40FudOC9SGB/qbu3lSIABeCjXZrmq3Mq+dSTpAyk5E3XE+FH79Op0iQ+Sciju0ze9lDNd32y8l6BXyxZJwQKDWh1Jywumu0rO2gEFLfSGSQtOYcH2Bp+QMu38eZvH1dx/GlQQJ8jKgQPPqlDdUQ+D10fDxvYlsGP0/37CHxSTdefJgYmKc8v135BnDe3jgJMO64tMtWOaKPKsvl5aqzzmQ7/Y/0hKntdfv1Taz9Pt0ve0RtA/NQBJX0dFA+qc/qGOqX/x+2SoHSjnQIFJij9FYi5RsUjendQwSkz1RD0G80tL4fGm7tU+cSqsle5zCqOTvahfOAnaipCBZh1c0wcmTxM0lF8xxY6PtCXc2gfBJIj/3oOw0LNuqB3AhI14FrIoVP0FNZlRzjisIgVhoHw7XqhtxZfN4uYTp2dWka3ZF3c0C/PldfzaF3ZA0zuC9Vj1bEMGTB49JSryqYLXUzUzK7uPy/+8R0RnmhoLykELXmy9n3Le+c2fFcHdeODGq1d97MD2t6lphtM2Eniyd84YCKHTxLxxc41kQEaNBr8cD8=","layer_level":3},{"id":"2d0300f5-67a1-4a55-8cc9-78ce9fd3f104","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Generate Report","description":"report-api-generate","prompt":"Create API documentation for the /api/report/generate endpoint in the tg-ai-vibecoders-summary application. Document the GET method with query parameters: date, chat_id, thread_id, days (1 or 7), and optional persona (business, psychology, creative, twitter, reddit, daily-summary). Explain how this endpoint triggers full report generation by calling buildDailyReport, which orchestrates data fetching from queries.ts and AI processing via generateReport in ai.ts. Detail the response structure: for traditional reports, return summary, themes, and insights; for persona-specific reports, return schema-appropriate fields (e.g., monetization_ideas for business, psychological_archetypes for psychologist). Include error handling for invalid parameters (404) and AI service failures (503). Provide usage examples for each persona type and explain the fallback behavior when text exceeds LLM_CHAR_BUDGET. Document integration with frontend components like summary-generator.tsx.","parent_id":"7d1ce1e9-8164-4429-ab2c-f9b899be913a","progress_status":"completed","dependent_files":"app/api/report/[kind]/route.ts,lib/report.ts,lib/ai.ts","gmt_create":"2025-10-11T18:39:39.12194-03:00","gmt_modified":"2025-10-11T18:57:50.321475-03:00","raw_data":"WikiEncrypted:ncgUburcUGIQoFYRn+jCfnwKZUAK34W6MnCaR+iIqOEzeioZWHB3tqqqsvhohVfQw+KwFimA/FldgSB4cci97ralDREZm4NCDo/z+I91u/kCJ7aN+zeiotVey48p/+LGG7+/FSto0wC3Q31OeDON1YYxu85u6qxbsnT0p2OkJhjQkiFb7xtxFPzegnoQs8V5mCE3aMPfYc/DSTXOLjmS3bgWR4VvALojEBIzoMAvNGsnk6VRHPIuwmisxY0bMTt1x6S2fKTD+BN9QosVndju93bVQ3rUXRmyofcrGSBCp7JP6QDMmKOY2mbJFoDSwNfAKnxm8xb8ibziS5xZaOkAsm7dVf/6GXs+AXC6SLsBpueRYerq6aJFq10Ulyyozr0U6rqsYxkffGzK7PfxB1ZlMnThJyJ3Vkw06YVUQa+7JJprzEljANKtP1IZLIkfCDZbmL6d5vKU4c5ItFmcNiqM9EgeaDKkG8KGSy3nZMVk8bAIJ748P5hU4JGbPok6kwhmQVrNDiUDEILmwXTzOCfdHRCqaV1W3GeqO3xYcWto/0dMfjBszKCButSd7iuxlLvvJZUoHuIsbPhcfTz97tKfP0yeUi2PNOkZlAWx1REgKeRbkr1IPmR+5c6/gAHZW1JG4rifJx86J+ynmeF3V/hQJtExOYJJRgDRcbOPLbvNmbNhDrephV3/PUSN4UCXAo2MgV66OYm07TcI6JdywgzAEC5xkiYPrH4aHIhbTd4EnFvRjMMj0KMCDm4MPhQ6goIap9hlsib7T5F3I5BYETDnFZIiTA60AAPZPFGByVKpBo2EVfJtIkfmqcjEGHp4bfz2ch7Lrt4og7rP8OS/CjI1b0SdQbQDsUSwsBx5I9HztZFWuqOdGjRkTKl517MmoqDsiMr7zJUcf6EetZrnZv7hbf92AU2IlGFsWmpIfEExzfslExspZUm7cbpTN1HpaS0A4RLLjyk6N8WwNzsTIYcvsJaJElfouRX3Q97eAmc2u7xSTOFYmZEJ4K5YXD6BfsumNOwNJUrgyBM5lZBadMgrTloJ2CShlDh+6kGpwEjE+zTPSKucb5Ge8RICIYFz/9FkkQUKp3SOugv3yLlhC8Z8Ct86B8IcSedcast+qD7rNqy/ojAEGqVi80DyA57C+/AcqwWI2cY3tRv4GLqhvdyVptAl5DqSppMBqKSGTqsl6Sjzf6D6A1GBfc+kypx5kkzn8LWjuDfwwY3/KhK1F+lGY/yYmdPDt/8ZFmvcHjKoUTI8l6OXkImkha7LWD30hbXlVucbvVrpRqyEHGyEY7aL8i0n0idgnWqdVKm+0TD+12cZz/JPeL/gOJ/W3fESM1rcY3ahxm7LWkJ77xwkvHEEWMVxkVRajJvaO63mmtqEu43LKT1+KRyn0wP8wEH85OSH5u5oTy8krfNA9wJ1aDFSpAJzVsJfLRFdzCjyYR/a6CJq4+D7VQoIyp7xiLSwzRUUYNkFM6MK5E/cJzPha6/TYJkjClZLUOI8ney+0C+V+/E51gU5idzFXlO0x9Fx8SviGTcC2z2wyo5QqNeTCP4rMIvVIah8d2PmRxscy275nIOECxgfJ8+VJQMagmfUfIP0VjPTyfT6Dms4E6jWVU4NkU/NrFgBpKz2sxb7Vva3GPgKJOYtS8u4K/BAqWYya10QROWi1beuJWqhqseZzjP2BdEfoBB6EyvrbzjHp5fpCk4=","layer_level":3},{"id":"ae401a95-eb43-449b-a9f9-987527b220c1","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Business Persona Analysis","description":"ai-persona-business","prompt":"Develop detailed content for the business persona analysis feature in the AI report generation system. Explain how the business persona generates monetization ideas, revenue strategies, and ROI insights based on chat activity metrics. Document the specific structure of the businessReportSchema including monetization_ideas (3-6 items), revenue_strategies (3-6 items), and roi_insights (3-5 items). Include examples from the code showing how getPersonaPrompt('business') constructs the system prompt that focuses exclusively on financial aspects and revenue generation. Detail how the OpenRouter API call is configured for this persona with appropriate JSON schema validation. Address common issues such as insufficient data for ROI calculations and provide guidance on interpreting the business recommendations in context of actual chat metrics.","parent_id":"374a319d-39dc-4f05-9312-344b401fdadc","progress_status":"completed","dependent_files":"lib/ai.ts,lib/reportSchemas.ts","gmt_create":"2025-10-11T18:39:49.68546-03:00","gmt_modified":"2025-10-11T19:03:53.462954-03:00","raw_data":"WikiEncrypted:XjbjnOzjruoAEvpn/dhFWytZnlt3xchh8B/iLMpsjRuPrnsr7VQ4QcAg6rFDDZa2OI4SPLjTvg4fenv2qC2xn7KHq8wDFUn5PBhrL1bNQZxmKCGKt9csi8ECyfpysXVfd2LiNBZjsU37f3Dkg2KfMpxaHwoRzF3mtxUCXJki4sWU+3Hn/7svYcEF1A7bXZpJBRiT622pJc/+cNIMjjDAxWYgbs4IndYY8Rpw1hk1evwTxSbZyvoCzi8I+htb/bscldVc/lhVhYYHDK3yYVxkHT53LVV19IYFjoTcVngIUVkBm48d+ukxmq6yv4qzPpaCOuqzMTs3osTR25YfSJ8b9j1z4PxWP9n7mJd8yiPkhqgwuSOm+23/rD79EoTSuQyaBpGpEZ+d7M0FltPC5UGA65Lybn9qhJhqkFBuIrqd8/zixNI4kDY/HII7FonaQD2HrTOxVSeiWzEH9yqDlvCO68TscqT4T9SSIjts6vWOUlFtP60WRUfU4RZ3n1gon321PoTNUDv7/Kvdtsy/TZfaOaR0Dm+f+tP8a/yBmBreGNCuxweBAcyXUj/t/ikZOChFHfKGT/FQYI1G1RwXC2LlYeeZJ7OBTS5WG/IhI/LmqetJyK69givt4CKiHwp06egrANR6K2SBP10VDKs4riQwLlWJdmsCi9zn5woPHaLiD/Y3fJ2GTXBye3AjlGFkT1ayLAPL2FrUvxb8rso9VP6avZaK3hpoGSLvyCtTWxnqxJ2Rd1PR4ZMtyhyrRxbClTkobO0GPwrF4BIltRMU93iw1zKwGFRJx4VVQEEBIpkzEradFuYk6dkUyw5NOYQK35KLa5GOxJ4HD8t41dzeVdD180RGi2AVXgI7MdXQSZnh8dOK14cQ3tn0WvCzV+JBUQNLcpc4G6nCuRDmln8ygrH2ztnJIDSroXRp6kXlziZF1L8aOIYGpLqOgtPooOyAHJZDhsa/UshSYHbDjc76qE8dgjbA4y2PLa4AT0Z+gArbk3W/LsCPhuhQ26wzb55ePoErzzE0kLPBFe/rjlt9wd4TOMUlI9cTugwZasl555G1rDmbgk4d+sEixHMQrsy1NFd/B9AqW6GfZn5d9+Bh28cso15KJWKditRTyn/jP4qqi7MgwgR2+SN8a9NkE2gpJyGAUEIC8Ssf1rFnnNoZ1oZPJy5f5N0lFIgL6WeY2PGTjvupg2Qdo0qFgf1l7fppLNLvhNQIR4RWpG0WuY39q6ln86MwVfaiWdhq9EpaKqlfyRIooBiZg/iViAnOoJpv+pDxZEMCV4+JTya8aD2jWna70UUphRt4D8INYssovQyNr4XyQVFEGP2NUeqcdHGLO/1QiCIWnzGLAfJfazR4KlyVPOdCNqKo6CR/BK8MAlVRYilbDowMZnff+lSDPh6aLhfrtTKeBqgEsM15VUxZnEH1rd26Cyz7z6f4b8S1M0kZr7f2j1HCBkAl4SbXPh9Gp3NDvJryzpibf+RdIGj09JrDlFcUqN+TTFf8SKJn1Dr/aKGv4zwuvagItPox4yCt3QT0","layer_level":3},{"id":"6e68e136-dedc-4d74-8f60-5439161a3a04","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Getting Started","description":"getting-started","prompt":"Create comprehensive content for this section focused on setting up the tg-ai-vibecoders-summary development environment. Explain the prerequisites including Node.js 18+, PostgreSQL database with existing messages/users tables, and valid OpenRouter API credentials. Document the step-by-step installation process: cloning the repository, running 'npm install', and configuring the required environment variables (DATABASE_URL, OPENROUTER_API_KEY, OPENROUTER_MODEL). Provide detailed instructions for running the development server with 'npm run dev' and accessing the dashboard at localhost:3000. Include configuration options for optional features like Telegram bot integration (TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID) and debugging (LLM_DEBUG_VERBOSE). Explain the purpose of each script in package.json (dev, build, start, lint). Address common setup issues such as missing environment variables, database connection failures, and AI service unavailability. Include practical examples of the complete setup process and troubleshooting tips for connection timeouts or authentication errors.","order":1,"progress_status":"completed","dependent_files":"README.md,CLAUDE.md,package.json","gmt_create":"2025-10-11T18:38:14.782403-03:00","gmt_modified":"2025-10-11T18:40:50.158983-03:00","raw_data":"WikiEncrypted:qfgbutC7oyxR6nMxrwk1ODnNMBEQ3/sG78fQT1yXWjspqw7wFsgcSykO0UmGZY8QTKN7XNoRj5gLcQItLpCOKXutiG+6VCjcMYiCHQKLTKFUB+XxuxAVnHRgYD+ox8wEWPDXp6n0tF3LzmQzAK4WvvFmL1AYyoHozimgdnlQfIab+KqAFkfXbPdX7h9Q0la3sLAW4yWecC7+7CSFdAyAdBmXcFXRqBP8N99uNtUfq+Gcxi5mif+1Qe2I07FuStKQaf0B6m4t2lr+AbD1VjvIdLqucpl3Q/nCnegR23bROMkymV6U0V8yKe3koj7OG12MuAtfzjpWm8i2JFvicO1MO0/7Sw/nJBsD6vA9BlxTn0A2HF1kmbQV1W6uHfl7dE9Ht4VNljkybFGaL7Xt45Ux4SOBxttCc9Fsb4L6JZ4fBWwF5jZS19ZKLLoG2PuH9JGDXA0crhN3mto5lIGuQMjzqhMKEBA4ynlyyxWl5NZ3ow7bP9K65e86zqzBv2OxeZbnXJ0NVt6YmE7DKub3TdWvCqAb6hZRI9BpCJzrR1UytAyUpMmAB5ytGfUDBS+sdKpJaNoDauPM63VUz353p7dhQKAEPwxLXZ0YWckbb7SMRAhl5BiAtl76Wk0qgTD5pjPKOSSXdD99f92JFoER6vo6c5C6krUaM4D/K+6OVC0MeQR9mKKjsaej1HHkD0zHkAZDWYC2R7+F8BYLtDNPWVK0ygmJ5o3hJQEsNb30gs/LcaLpeVHIoRqvGWHBs0kYcPIf94V34IeEp0O6W1Oo6l/VQDciTxRUVIoeEzN2yHQHYJCwkmdJzWPPEKiF/JvcLbLPK5D/c4LYIbFr+MyfJywiUP+rLk+5CGdcffiT4/FFfesAefHE/AyPaH3ERlblL82EqW+BMyaKp/hqqC2FN5EdrUxnnxt3JdGp/s2OUj03wUmfGrqe1EBa7DMXa6O626e/M2fyz/oowODLwFWyPzhmPNvfWy4bksD46v9f1keHY1iCBhxAUeRRDzVqY9Q2Sk3j4v4Ohy+7U0hVWGvNAlipda/Np9FdQYUmfLwMj+UWYZiaTg0ra55RfYvCo9mdUd6DKjHcleHqGkf/jgU0l3tf4diI6d8abddJ+LoC5n68dQR7jMfDafaUdWxFK8K85mLeTnl6p5q72A60Ybj2EyKmUug+b3KSYPBqY0Tu9JW0fTVtz0C4eAlcuWjyy5rU0GaK8/buUGJMIneaQwYmv+7mreYUUhFNWBLZrFkk0rjHbyA6Nt6zmEtwgH/qs6OCff3nUC/GkqKpZEPTNU3PqDgBslqPolaIBOw+HX850ULRqbf5UuomjxubmK51CwHNCYVrd+JClztpjOUrp7yOl7llx341+YrZlmRSPCmd+s5i92N7llGNUY74mSY3YmY29x0FTUhMgZPGvzGoSfBgHCk/McJnB7uRK3oeLI13q73WxVAAUSsjNaXqowNIeaA0/kIwhY6UC5HqgkHDOS4j4qFnb4ijhoibDvQ/gMHKt5qeU5WtTCqx3YsbRnWsBy0Hq3XGW+GxGZxcVv1h/FOfESUW64J3IB8Moa0eHc9mqgqTNq/07aWy8+h/pgcM5Y4EjgViMIN8qJIct30kiz3cRHJ4cXoBbXTwRw3RwhVzUdPRPivqSRaWzNg1DRmGTcQTZWiE7EJxu7mtbjFlR9hQ8gWyVxQ6U6oNpK3LNH5+aoG06f7i5U40tdJ5VLnJUmiEU71t6QmIo4QxKyINoLsjs5ykCJNqb6wr7RYLIykYeFPp7vO+0FRTa2Ors7Hd592ytY1IYRdpcnyc/6vEz/3QVwqelG2Kkh8fTUsOd6AkC2agv5k="},{"id":"644d81c9-a251-42d8-9144-4d37ae4d82f8","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Schema Validation","description":"ai-schema-validation","prompt":"Create comprehensive data model documentation for the AI response validation system using Zod schemas in the tg-ai-vibecoders-summary application. Detail the entity relationships between different persona-specific schemas (business, psychology, creative, daily-summary) and the base report schema. Document field definitions, data types, and validation rules such as string length constraints, array item limits, and required properties. Explain the implementation of JSON schema validation through _parseAIResponse in lib/ai.ts, including error handling for invalid JSON and schema mismatches. Include usage of getPersonaSchema and getPersonaJsonSchema helpers that dynamically select appropriate validation rules based on the requested persona. Provide sample data structures for each report type and explain how they are used in conjunction with OpenRouter's JSON schema response format. Address performance considerations around schema compilation and validation overhead, and security aspects of trusting external AI responses through strict type enforcement.","parent_id":"d5234fb2-3f55-47ab-861f-49c3096f6167","order":1,"progress_status":"completed","dependent_files":"lib/reportSchemas.ts,lib/ai.ts","gmt_create":"2025-10-11T18:38:37.447602-03:00","gmt_modified":"2025-10-11T18:50:08.908736-03:00","raw_data":"WikiEncrypted:goCWmwMCkz2J/D9plR9Yuhi4B2Hz01n9Iqv6H0Bq2UaR+dkBL9PlQ9zlIcC6GnVYSvBY+xfT5MORtipG4xUNp2r/53b2ZVi9LdazbwqCxpegPoteBBBM1ChJNlr2UPwgqf/SyEYNboDqH3nTNaPwBksfq3Nv8vzyiZe66tlFwB69WtHvl9lx4DPHkrWlqDFwwVkD/Rj56yrRhfDHGvNBGHZuaF+jSKLIqgkQwvIo488TD2wYv4nJeFs01N8fja+nKXaZL3uvPEtmcw+qgAlq/bTwmbqR/lsMCMszanQIqu6f0/5S6v0Oi4JjAhbrQxlL3x9DKlxn5TBLhE2+EOzp55NAbNzFQ5DjYFnp2Do4Ca980iC5qN+fSZclUCNU9VeZRS9U9EUOlctZvR0bDiemAXcsIGOj0q6dMCNOWUpLJOW1uKFMgL5B5YM/jCpmUIBzNoAxDJyaz2F199zdeSErhv3qOb9gc8EFPtT43y4ZvAOn8mlLJaoDVlW6e0wmUF+n4K9gNkIjF3EgVBhzpyrWSQa3hv+sCAMkyPjbmfiWYMgbNaEHGEBCKCZAz3Hwu6TFEg71Xp3JcPvoNk3bliH9YO0me5+HVi7QYfEtYQIB272nqeZF9ECg5S0TKauckB2/jq+mFZ07lRP/tgc9UeMTih7nQR9xW7YloRCZiniBUNtq9qqnq6Jo+E1YWbv56fWmJ68P1+wInSQ+QEhRwrZrAZ5FyKsa5e7E2SMI5pk938Z4oIqd4DAy/6KgazgiNY62gUt40DAWfsLzC/bg23+7UxMXfvvLc5AEyNyfQJ5UKE7FN3qxjWYj/li78VXJlBnSNILzs0dt9IJb3lO5VpDyqEwtgp0vhyZzoWfhG5w/k2h1NMNeU4DDVKEBOH8Yjbyoq6mlW8IbT/ibJMDmv4a8Gu9b9AjVjuKQGNIAOUF8CkCluX5qNLpkGfvvbHndeQGCEbjLwowBJkI6jtMzK1YNbSey+3mb07SxTLz/ZvCqYRWxGoLm/6fZzFZF9Xx64xpyZ+rzyi7P0qYWaDXmsGyGtWcZzTdvHWdz9Vmsr5OaWTUINOIIuf7ZAZ9LFOYKEEcRTLF917xXlz4LLZMfDoNghMMhz6sv45FXrssuXeM8nfEFMUJlGTpO1+VB0SgiIFv9b9Q2I2OuuSJeGurTTRoDF53azq23ROLVKCg5EO2IDGCqledw0g2xJqGs9XbvAIBcSqX9Z+egrr2c5RmWbcmQOR1iP/RNf72xXR3WP6YzTk0ASCgSB2PuCSjtf7zRysCaw8WElN04M0rEpvI+9g66wJutEPjc2wTO4gG7LaH4zErHX04h2WqUPCY9UJ0WJTMaHjXdl9J2/XtJgnPWCyc9M2A8SchRtofB2OZEBd3sesUD7ibSU0VCfWIncJfWx+rmeZRxapJ2HWQ9JVtE4lVlGdgJQ7SS/N6kNrBAbTuKjO0uN7LYTtrsJtlk0CNYRhpFMAP334AxRjfVL/zevVTGgsshAi0sJuC+B8EGNH8NGctaps6z97anO9yM+PWXeH6Cyl2N7MDLiK+SVS8XMMS7EV2fOsypqLc9PMV/bPwiCUsCEx0py7RLfA3knvXSYV47XD9JFr0qLaPQJdfkxQ6dD3NHc/iygBY6tdLwDlu0eEsQ9E9cPU1uVTXk6VNa3QaXV3pYWSHxfiecvqKqztSX3AvukSSHXoPEv1ChxfflnMFk7wMvP12ZtleecwTCxvmExW3+2AYymG/9b8gE5uJohLHdTU6NQGhEglO/XpHG4Z09mxG7sgkMhffRYCQKEuU9","layer_level":1},{"id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Component Hierarchy","description":"component-hierarchy","prompt":"Develop detailed content for the UI component hierarchy of the tg-ai-vibecoders-summary dashboard. Thoroughly explain each component's purpose, props interface, and integration pattern within the parent pages. Document MetricCard as a reusable data display primitive, TopUsers for participant engagement visualization, AiInsights for AI-generated content rendering, ForumTopics for thread navigation, and MultiStyleSummaryGenerator as the primary interaction point for report generation. Explain the composition pattern where atomic components are grouped into metrics-grid and content-grid layouts. Include concrete examples from page.tsx showing how components receive data from server components and maintain encapsulated state. Address responsive design strategies, CSS class organization, and cross-component consistency. Provide guidelines for extending existing components or creating new ones following the established patterns. Document accessibility attributes and interactive behaviors implemented within client components.","parent_id":"4b11e8bb-04fe-4d5b-bf5f-dfd8fa2b4019","order":1,"progress_status":"completed","dependent_files":"components/metric-card.tsx,components/top-users.tsx,components/ai-insights.tsx,components/forum-topics.tsx,components/summary-generator.tsx,components/multi-style-summary-generator.tsx","gmt_create":"2025-10-11T18:38:37.621965-03:00","gmt_modified":"2025-10-11T18:50:08.905278-03:00","raw_data":"WikiEncrypted:4Zqjl5aZEo1Vv5NKBpebTgX1jjoPS5n29jquVJBvwKD0eDm6chm2QL5yHN6qcmauctqIEeHjVZgx0+U91tD0y3itEd3a4QUCQX5xND+MmAfvVSCozUBco4vVM0Y2v7J/ZdlCPyL2CuYh4qAlRC5aHMdJVp9pFa0B02crmDixgkXqa+7PqEShFOY7TRuJ8EmMZJF+Fie3xYeRUdxuumjtK1JWFoWuncJ1m3su6xJ/3bMBDE5PxxoAMynmbg9dftaeOFwHdgCuPyUt/S9CJP2AiiX0asamibhHyTDQiTs7OAE3y2nXOc39AbZ5tJe/jfEzSRQjOQG0wSfXhEfDQEapdqSozUaveWHjeyVsBsl+qJrFmitAPJ6U50S9h2RadK2Vd7KfGFbR48o1mz3i2BOKRCP3oXrhczVJehToNpscNKN1FQ5rfNvc/Ovzoo5xjtDHQ3N9dqZk92rrXhpIDMGdy4WWOefe+zGEth0pVV8ylOigq/A3Mm0U+bv9Yux34M45G9Jcg7LbVpXDOu+FrxaeLtOUB7HLFeTKctTXK4d6RMJchlPBqBC788tbWcxg67JgIiEijsRnA3RMAdDljR2iSv/tIZJJBBwlFUiXywFzFkQju8BMouavPUeIA5S/8f+YhpqjtVz5NjXC2TcHuvRhKfbJGMQlt7Vx5cNZNQpgzSvY2/aymvzVs9LsSI1w3jcoE8YFmg8Vv6kmJqxITRatu07KKg3hjwKKkFwxQ8mLkf0hLGOWadzKjWr+ygFMMaU+s6k0VXpNBruMMpgfF5so/EK/x5iF9H71spgQ/IMQAtlpij6uK9Um3WkvtQqE14MZNAzOpZMJjqWmjQPJGKXCefp45lYX+7tGR/3mtm0boQmwO4Sen/LgKIZLZcWbwVcBnrOcCevGFN6T+sJja8IW8qS0NqxOdSiPVkd6gKC9OEhjBG0CXi3pjc+ndc0dQUykDDXvmQv9uf3X7xlOs47NALCIouBASVyQfMrx0Wh7NRCYT+2zK4I8BUDhVi1DyHybtj6yV/HjUKNGhtwYC08EJzzXLpNTNx4STj3r9cRtL09fpUlfCvYM5EmsGZyMTn05rDOStUlZhZhLrt3m/y8TbsBAC2gMck8m5LTIBGk/VHN0QrofNl7NsW982IW4sw/mapa9E4SBEmmxokQB3GiLEfze2GoCNpzsnJtSipurRtOadfVEk6oZPjjH8sWiQ/1E9/HYG2bXgdx+0a6XvC7OZWZSKBy4BKFg1gWaQBqlSQHiIf7E5NWvIQWiPq+eFojuWF0z4HgG42L0vakuMLj259uIDGr7TNbvAYSofGCZuJ6mi9LIRsjh//BsbT76LmEutrW2BxNBBtpWUp03mebKJKMttsGIkS9tSP3S2TWS2EL5XoJtXBrxAThfYtnJnbp9yvJum8rbYvigP69YSjpznCBw4itY1jk6mB6BMJFJ+fY2zyBxrQ6cHPTwyA8l3EqWIjEkOi3DP6OtTmxhtLwCtx7BKSKmWwHTxU3Oe7T1IL/f5oUi2625xSGaVk/hj+dTI/gLKd979gqcdYYN1Ybn300gpRz7Jf2xBjmgyZK4IjysWL6i+/KsbbT1xsNc1BA3Vufj45sxPc5/d7iYXQRuIR/vrNLA9IzZpOC90wFQlrJOlri8Ls/cTNj6hz+OVMAgG6jXjnGPUG6yR2FQNrb9oFvmJjATHVEdQ6okpzktPN8l8k7o38ToetdXgiNFoteBFNZGSNgOb2f0TvH41AybVZus3/fqJSKt7NAz+9BZlvU7C4cvl5P4wnxj/7Ta7SCxfE1mGKPs9nv7rerbGBUqhY3VPSsk97NMLR+MBAk+p9EFogbEi6KbM0Nl0jWI/Dhk1D9Yp1yiE33FaGydpYnqVe64mxNWwWV1EZCbJjiHsTwQUIcNmWsu20LN8EbeX1M8iBqhR+rdPmKm96IaXY6lzAxnba4OOHwrH+Gjft3yVnamSkVdISLHYwHpG4SExWEXQRzR4hzAkY+P8kMS2AkR+JEPizepw/jOsdSeLbpZEIyEVJ+b1Y6Zj5Uqfvo/L6QSa10b4vWsYnMX2HB5sUMtbQ==","layer_level":1},{"id":"fe6999b2-9acf-408f-991e-bc78d67b5960","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Data Access Layer","description":"data-access-layer","prompt":"Create architectural documentation for the data access layer of the tg-ai-vibecoders-summary application. Describe the Repository Pattern implementation in lib/queries.ts, detailing how it abstracts PostgreSQL interactions for metrics, message retrieval, and forum topics. Document the connection pooling strategy using pg with the global Pool instance in lib/db.ts. Explain query composition techniques for dynamic filtering by chat_id, threadId, date ranges, and time windows. Detail the data transformation pipeline from raw SQL results to typed domain models (OverviewResponse, TopUser, SeriesPoint, ForumTopic). Include performance considerations such as LIMIT clauses, index usage implications, and efficient text extraction patterns. Provide examples of complex queries like fetchMessagesWithLinks with regex-based URL extraction and fetchForumTopics with subquery topic naming. Address error handling for schema mismatches and database connectivity issues.","parent_id":"a14d18a3-9e0b-4a19-ab6d-4b13dbd25e00","order":1,"progress_status":"completed","dependent_files":"lib/queries.ts,lib/db.ts","gmt_create":"2025-10-11T18:38:39.416383-03:00","gmt_modified":"2025-10-11T18:50:55.04758-03:00","raw_data":"WikiEncrypted:M8uljGDGJ//mcfRJly0hh2/mWMVZAXEARazEIIgMSV/8G+jMwPh9oSNvazSAisv5/7CxRabfSULuPn76iwpIuly+pFnBD/I5ZOshFjSu/2EFSje4INyw3MgiETZLi1oonxEtTQ6jrVOHejqaYjLqEfmi7Xtmycro5q6pZXghRjoH/tgnHuIGmccGr6Jorbl6EGzuj1zPl+cNoNcdBIRuNhr+immbALHrimfH+Sf1VyWajArZyiMFPqlY5D2yCsv8r4UWqNR2HoLnNx0sOEryV0XmEtDXjabbo/rPZF/eNSLMegfw5GT4e1e2IXdP3VYSad7IvXJ8pmaPV35zT4ORgt5yPIVDHguCmqJns901v7wfOlmWN1l9Dji0OTXKQ/gOwZQ/g6+PzTVDRsKylcxaDDYfZfM1KcxN3FTmVPJobunZ25xGF0ZWWOaGDWjkLRHKhT3z27cQRs+4yHMvvrZioMhKuwUcvkEKpp7MsSZj81NRx7SjcWI8kyJDx+QQBcG/VHaNIxb2EmnWQK4EVxwzZ+qMAKAX5TTaXzt/JqC3dyadW8m1qsfo81wLfHYg40ylG2D9FCLGrGqTBBA6KN/7gUDTG1JxlrMnldSzWoOjKNEUtW+LlAkwG0YdaYF0Lplw/BADrcyPptF+UslkAlGgmnF8qvXLh/7vih3QHOUW2ArsDPhX/2gXVZ6AAvO0LCvgWx1ArLxXHJy37nnO6wbC/YcJSLTZuCUw09XENeZ72dkWel67kB96QalHOb8dKaWwQ+o4SXcafDDJAHWX5FUNbQ8d4zBBHZccTbhQFSOHe12i2P3DawG2rR0CnywcX6GpPAUmwisfXnzOE75Hrcvo7DGqMiwdBqmIDNPHgGRP0m1znMswlBNq19zVgci9QtBhK5xV5Kjlvo8IIJotvJfeTgvtm/pD4ChMBW1GF5G6GjVgIjoverb2LjEqbktxQq5nfiGPFNoPG+PkAMQ5tTgs9M+R/z3z2e5rgLk/k1DFlcPiu7Us6yV5SZiSUtVAIMNG6AA0nv64BeJkxSyXnbKKvVeoP2rMQdSPPP9AJO1b/35wzJ5Ta5Mboc0xNT80Ji7zqfrEh9mdlS4c3W2M4fx9wnpELbZV1nKSr7A8jibHIP+I2pQ1O43VcHnZ9ZWFfCa0rrsQKLBQsoghm7z/91XQvRbquPxv7JnnAv3r6dDC3XUxG8MZmp1wQPPNu5rHVLWWc9hWQfo1gGUXNVAXKORYMoolAwsIeKF4iU98Dx0BgFqVI/3OHhEYCwjFsWixaklZdH6rew8ePTDken6nbJfFhH/jV6lu9VGO9/XsOKLIM7CutKTM+BNed/8Lrt7TaLnnkY6eIWO8q+XDrl2/zM7C0mPOiAttzXQnS64Y3TeSOERh+odzyvtBckuthtL5wjwegRe4f6JGX9/Ghm0JjVwkUX8036gfv0i8Mwpnc1CGnKUc4R4R/BYVN4n8p6HOxkGZoQZjuLUxgS+4J9THtK3kuJOw20hPEXU2OQEgLHT2kYhyKK6wSz3bWl7tfvvMp1/CNN6nU4QHJke3FV1odGtjpA1Ovrg9aoqoTSnwwQvSYfGhTftIbEyM0U5BtRxFrvoreNr4755PF9BXsmrfJvaRVwec8B5A8WTV1rM6lqbc0shC0ImIaqNzJnYzbwSsjO7AwuOEhmPQNpLIn5uCRvr2jw==","layer_level":1},{"id":"d462a166-b222-49be-b685-56af271d085c","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Message Queries","description":"message-queries","prompt":"Develop detailed content for the message queries functionality in the data access layer. Explain the implementation of fetchMessagesText, fetchMessagesWithAuthors, and fetchMessagesWithLinks functions that retrieve message content with varying levels of enrichment. Document how text extraction filters out empty messages using COALESCE and handles large result sets with configurable LIMIT (default 5000). Detail the JOIN logic between messages and users tables to enrich messages with author information. Describe the regex-based URL extraction in fetchMessagesWithLinks using case-insensitive pattern matching for HTTP/HTTPS links. Explain the data transformation pipeline that constructs user labels from first name, last name, and username fields. Include examples of parameterized queries with date ranges, chat_id, and threadId filtering. Address error handling and logging practices in message retrieval operations.","parent_id":"fe6999b2-9acf-408f-991e-bc78d67b5960","order":1,"progress_status":"completed","dependent_files":"lib/queries.ts","gmt_create":"2025-10-11T18:39:03.179448-03:00","gmt_modified":"2025-10-11T18:53:46.320986-03:00","raw_data":"WikiEncrypted:IaaHBhg4aKVK2Z27STIpf2evMZlzhWdf8mpeeaaXNrSrwkGi6w+VP0N5jGgTIW40nAQCQ2oj6adyz8wxKA0cgAD4Ga1KvECAw45U/l2GnAJgHbl7BdFTER1JH+Ic6E+LWE11Hb2stwpD3iRSMpax3F2j9z8fapz9Q6p4MO+4DAU4p3JdUZLJqtdlP2TtADud20mwStOtup6ZkzXU0oh0aa9/woazn3GCw2mPySgmBZCOZK9UUNiBl1myBONVjOUr6B25T/sK+ujscgVjkKaSr3NEhcgULZqPl5IVcJsF2zz8lR7gwnvg3jxvQjRMKIDFCd3GR2UWE/rPNVYQeMIwywENnc/dNwONJHH5R8VWe1pWbFnx/g8vKguWe7mXB5GV59GHO9C4sr0aztg2FD4JKoILGu7R6LlDQeqPS+mkDGfSC5S7mZJc+1c186QPw9NaIXFxYANsRGzdKnvCApogJwBbZSHV8Ll50tnrWqbobixwKBOU3Ms+pAQfpXZ8Y6xkhXxj5zCHndW8daupER+VMZRMNAV/k5JkaymUPnt3pyM+kGw0aXmVVD8wjgshLe466mIu7vet0WERhvb0BH4Rxa0xCbGRtk2fQgUyimkgxX0AKN23oHaXx/YwgY0nenrwAVCybBg+dHJ8717bIS7PHLLce5Q3ze1OQ3uDRyvnbCzaR1b5GhFIq63dl4jfFvdVGGUrxg5LiHg8nma72tp/zHdySlAMg5c6hxY+tpeLEHfm3BRX4hd9MTlMevtTnTQGPOyzihYrl+j9Mj3pgyoaNAzugbvLob4SJ7DvJn/OWeNV03cYI+aw1oA3uCpSli49IeWOiL4DotPrybn1a3o/kyuoBQzy6fug6KcaS2uwJxqwwn4MKSJCE0BYOCvyPaou8pAgtygiZCSip/fIznb4gFgwe41JjdIlFJP0rWqyDx8ZWQZiVRJU/Yc9sK9k38HFiOoh99JTkEiVasM5ld0B/RCgOqa1lR+E+mhMOQ9C9t3obNRdxqhpRLkmLfE0W1EWVlTBFQ3guZT4SAPE2ORxNZpC7V3gUz9dxvpNd5aQzMS1vwhfFrtB1fz5OqPQxgHyPn6Wq35OG5R0wXatrh8C2lHu/o1deozao6YDcnDpvXwT0XN8yV5OMw0tHcu5NYJefRQkBpPXRazJM1+qI3Ub9nEd+dq51RTsmywHRIDchaNsRPmI4kuqjGRsedzPgQyib8K8tzlCbvgS+6YAQqqtQ4OheLPccvgxtcXx7GDIJl2r+/qOBUllRmJC8wZeHAHXm4r1uPY+u5kbwFdUIT8I426ajdGcLDYKCQKsdpdizLkR7phLAUjFskLxEk3oJoMtHD1J15AHqo89v+XyJ56+m4LYHzyB/KanqZYQmjlUVdzanmJQqIzZ4vntC176+iWJP5ydj/o7Nvl9VLrhWCA15jsq9CJICNpi7dHKg+25+fxJK9BpUlxvcxkj+IDJPHUmhIcjmOKVr8FxPkdaWKkd3dDe6LrRbPCD1I0uNnHknTcWm/GBBiIHcejXXwp14+pw8GJ474gF8yYfHgFGFT+vLVO4OveXj/5XEfcNI1/uEN8=","layer_level":2},{"id":"7d1ce1e9-8164-4429-ab2c-f9b899be913a","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Report API","description":"report-api","prompt":"Create API documentation for the /api/report/[kind] dynamic route in the tg-ai-vibecoders-summary application. Document the GET method, path parameter (kind: generate, insights, preview), and query parameters including date, chat_id, thread_id, days, and persona. Explain the three response modes: full report generation, insights-only extraction, and preview functionality. Detail how buildDailyReport orchestrates data fetching and AI processing through generateReport with different personas (business, psychology, creative, etc.). Document the response schemas for traditional and persona-specific reports using Zod validation from reportSchemas.ts. Include error handling for AI service unavailability (503) and invalid report kinds (404). Provide usage examples for each report type and integration patterns with frontend components.","parent_id":"705c16ec-9f49-4e95-8bde-64291654b9fd","order":1,"progress_status":"completed","dependent_files":"app/api/report/[kind]/route.ts,lib/report.ts,lib/ai.ts,lib/reportSchemas.ts","gmt_create":"2025-10-11T18:39:04.002115-03:00","gmt_modified":"2025-10-11T18:54:32.789853-03:00","raw_data":"WikiEncrypted:ncgUburcUGIQoFYRn+jCfjyU+fmcWRkEmLD9T+JX5pTAh1Rm+qkiE/ElYTQN2EzUFm0MCiTcYVTGBArvcyiScjMZlg1Qy4N4T+GADCe/EDD3oD3fWkEEqhin7gCBbyg7yS1pJgloIeuMrfo2WunT5J2cKssKz32k6QOjNIOBEy2Y38MWVXn61eusz588m5iJ26F6j88wD8JWN/vQEzTl+kxuolGtLb4DIPIGQnc7GvFWONP++7k1akOdv8H3CklZoNotXOG1SEJc6wKRSh7xZR/kEk6u5okqaOMGSTEPuZrGGfsatPMP86fqhvskxLw+2LiTTDfYTR5cHy78VqB/MINPw8L2yvpcmT8vgfttlGGt5L9ry96D62GEGXAVNwVJ3E9oDiYhApz2ISfavNRO1gUSs63ameuhICsPT6ifNbWuLFaNey7AgGCEs4fHxPgGORb2OdsdZtgmX+mHmzh2Wmjavrxv/zbidGpJ5TJEGfhJBe5mLI0nVgzKJ36jn0H8YXFO68b9TVNXsHpXvpEQ7x/WG+NlOa6tYiU6gssUHkHbdgAMxtN1Sd8n74sAnocJrnY125DYHa9RCQ5iNeVJWnJFurTs1+sAubDJx8IPoW8+c3IJ7gQycS9FXulDH3SISJjCA44JGAUqWZYVz7JXIVb0yoskO4god6CmIhF8HUWFT2+GGVi8aCBC7ZZAepwDKm0LEZiOfszOaIrJ0YsINffV5NN3PYydFSTudKVT4jXIlyJcYCkFNufK/8EyAPJpxOZtGTX7JucICKnoidtQT9Gy7/Gio/TlrdWI7+VJAc1OobN8E+0FjvvLUgrkLYtiZqujtABouR554b0s+4L+u+nMYhUocz6XpvQjogEY6lEhPaqRoyI5WrpXX/2PrClwlRsGjs+zAZH0oPVFd+sVR69rfbiYsKQmsN3jHsPRRFeeTJpEPF+BAYQKYubfpliue4qSB1uFZcHWtogpekBBHMDuWOJP3mej1mH3xrnHsd3VnkHEtA7pGEShTsJwDK0PCD8MFCSORsK8sPYcHr93r1lOpcdIBXjKtdqx0eLPpKb7aarYAwbZ2vdSRAuGbCgthvpXRIaNVQSIGUfB1Uwwqvyc83pq/0SWRa/pubLIPv4K9fwbRDG4Ca4ImYMKUf8Yi9ZPRBOu/WFfD0pQqIemp6sV7WBUxPAiSMShlb1KEth7hk057IjEUWbT41gYRTGkthyIrUl14vvJyQ0/vQG6ncjghxr79Cfhc54tK1eNfjDvWqxtQpXORPGq4xhtK7QSvh8Fyh7bA3nHeP6l8JVS11iI1sNc79Lve8kw7wtRZqijDlvWa5UxJ/xXc+lBVTCMi8XJ0nQ+OrsGI43yGo65xUhDjNJNpKFndvEaTxJdr/FLNNDZIJq/Xw/FiUPgXykqL+UkFv4XQGwtEszxJzGExgr/GcomI+qr+HbCMwOc6YAzktpQpg3sGad8VllXwXElcjNiRbsJj+f9Vy2mgmm1JakgUP/xbt0/nX4RqD167tXXXuEMaZgTM+5AxHYGQOP4Ffk76TAq8AI++RTgnrL+okWW4L6KjxsQGi5jaJ3ZM/4uMTtiXquV3jabDMS4WjazMAZT/gLQM36tvxONrSq/DA==","layer_level":2},{"id":"0ca0daff-512f-484b-b6cb-3005c8968713","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Top Users","description":"top-users","prompt":"Develop comprehensive documentation for the TopUsers component that displays participant engagement rankings in the Telegram analytics dashboard. Explain its role in visualizing the most active community members based on message count. Document the TopUsersProps interface requiring an array of TopUser objects from lib/types.ts. Describe the component's conditional rendering behavior when no data is available, showing a placeholder message. Detail the UI structure with ordered list display, ranking indicators, and right-aligned message counts formatted with toLocaleString. Explain the CSS classes used for layout and styling. Provide examples of how this component integrates with the overview API data in page.tsx. Include guidance on data requirements and potential extensions for filtering or sorting options.","parent_id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","order":1,"progress_status":"completed","dependent_files":"components/top-users.tsx,lib/types.ts","gmt_create":"2025-10-11T18:39:16.16302-03:00","gmt_modified":"2025-10-11T18:54:18.0122-03:00","raw_data":"WikiEncrypted:gHCYsRJ4ZU+5fMjZbiCJ1RjSvCVDEqqpyiLDZfY3I9C2g6IQZyzzK/KsCjK+VduUQTlf4/iDqL8kQ/3CrS5RM3v6gyDG7Ie0ApTrL5kAMj9FZuhcfgoubyndTl4Lj7heSLWjJL5LyJvyoJjJuIlDrlcEQ4KkpSw3c02ozX0c1kE7fMT5/A8M7sO1PjTzEfufQPh1X76WGUTlPmKz8yKUhxk3WlqtJuWc7jPGB4xq3ueVB6TpDMi9PQumtB91Ix3mgmfoYnf4tIILGWYJvkWH2jVkKLzX9dtiV/A5i2vlal+6wBO/ISFk3JxKmI7XoBzl76FiRkDL7bJpv4f8boYrvqpUXyNgkx5KWTMCCtW9vVDDEUxCfVemdiRSHvfeoc7hpM+tUN+P7Autrm5dEfpJ9wBKqEieVgSMT6EwcbpasgUsPfHaTjf5IRaisoulqoYkF2jX0lqix95Nd3IsZ7/Sms4s0h74W5ZrZk3A65+b2sf0cro6u4vSTsWI+O+yMQdUgH6OrMxEidImJ+/dYMPpktwDPcCGCPnc7IcHDHfaccUFzRCDiJVHJSuiJ6EP3Z89zqMXRuA+9BrFHiuuZuf4r1vsMLpTp7fk2Q7rR2rBVZ7RiTKLQvrIiMb8UPHvtix1W9vDaFj7d2txWmmTf2eTiVMj6EZSjEgpyYPIrfIy7XnTbci5AON6qBGjd3Q1aSxRfeA8Uo0sPzvZbsrbmMQjrO4QiAauwBbdUTKkZz36O1chHodqoc12QhiQmFctFwVeABeCbDnok1zDVBuuCOSINVhkpzdDC9yqPK+DNrpOmrWD7wPhpiCpWtpfsp4fcPBCiTSzIuex6gny2rsC+XuRKUo6O1WIMd9N8BV1KzldObAwGcwWGvUoe7Wld5A3lNcZc8/uSpaJpXS+r8MoBxDEYyuwsAjRd5BcPBoagwKguyTK/cJPcKsKmpb20cMoTUgK0rU6mHtFIV17gU+Df4DWbrmD6sLbZIwStbdrS+0oLKhwfBZmZrx8yDDL7/TCG2DKACA4Y/TCVLMdSLfZPtRor6WxHS1xiHRyO3BaXLkGVozAK/5o3GDqvzz5/AcK9RAmAWVG8bkwLrModFdh0y8HgUb1h8//8qCf3dPvdkiytHBofq3liy7O4XOF86C/24nnvfjMvlTEmRFzZhqNJdXsdRlIdWBgYUI2LZDsAbC0PKasmKerewKxqrwmGLP1xKZYNL/09qei5KjguJwqagt1J1fAggaRyiO9OcnSQ2ZVBShbfV659yixjqhq4134VUeJSBj6s5/dsaaCyCpEobWzLOnLFa1DYug37npo2wGMd291wiYb3EIkMPiX+xuu+ZdHGlzB2r8wTtT2IqSRk9q9eCXw0khqqw5mYOSp1ZbT2PWmnACxCbS9YM2vkVU9UutVEKM+uba6i1V8fvwpEFUjcWvBQ2EUA53QDa+tqo+W4Yk=","layer_level":2},{"id":"374a319d-39dc-4f05-9312-344b401fdadc","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"AI Report Generation","description":"ai-report-generation","prompt":"Develop detailed content for the AI report generation system in the tg-ai-vibecoders-summary application. Thoroughly explain the implementation of the generateReport function, including its parameters (date, chatId, metrics, persona, text, links) and how it dynamically selects system prompts, user prompts, and JSON schemas based on the requested persona and input data. Document the integration with OpenRouter API, including request construction, response format configuration with JSON schema validation, and error handling. Explain the role of getPersonaPrompt and getPersonaJsonSchema in customizing AI behavior for different personas (business, psychology, creative, etc.). Detail the _parseAIResponse function's validation process using Zod schemas and error recovery strategies. Include concrete examples from the code showing how different personas produce distinct output structures. Address common issues such as API timeouts, invalid JSON responses, and schema validation failures. Provide guidance on configuring OPENROUTER_API_KEY and OPENROUTER_MODEL environment variables, and explain the purpose of LLM_DEBUG_VERBOSE for troubleshooting.","parent_id":"4f1029a6-3e39-424c-9f21-e1b862a6f287","order":1,"progress_status":"completed","dependent_files":"lib/ai.ts","gmt_create":"2025-10-11T18:39:18.823607-03:00","gmt_modified":"2025-10-11T18:55:06.79837-03:00","raw_data":"WikiEncrypted:jU5FtZ6QaJEPE8zTUuUxbOFl0O4uB3v7KWeHyN0E4YfiIdZby0/GYihBxH5G738gWD7njwn6aC3uQ0evJFJcizUHLRPqamONCFuh2qlAKCWYyJwevte7uI6jqAJbJsRUaL3WE5p/KEw+5EZnmtFsrQ0vmwLKBRb0oJ1t/wMof1v5LI1DmDB8jSQJXGO88NFjpsUbyXr1CGDNGxik5jHU8M0PjELMcoMfwe1jkkZi5x6jPco5lEntn13N2WJGJDiskpxjJdPGM068Woy3gqvNcFSZR0rIkrEKTUQ7V3iMiySik3tRrxF9UVHLW4dfLFpHHaQYyRfLYccE+I+gfk66PEEGEv3i5o1BXPNmykJv82bNROmx6AczOOILR6hj/+DKO4+viV1My44YuiGdlnquSng7TQolg8547m0ju+ZtnSMAMRliWoBmTIt8B86Y+GWshw/zJHqpp3uI1GLSXFYOMcAL2gKNKQzLCa9SQ1nZg3ykx0DJDslbHxUDs6ctuO+Y4TjDU7uXbE3edwZlbU2mtY7uWqoDu0RhfwyOEiVMVLuZ1qipQa5LVeDnMP1vtYpE79qejEzpFG4gAqmjF4wabtatNwMO2XUmmeBsOPUKwoP0v2qKoD3SN7kRyxTBmkjEA+6j1kfK5QgetyLW3eocWlwxmv23rLQbB52XADIKZPfsqLDyaNl+u6lzf7u8TmzmE/IFeP5l6LVbtHfw77HVAf7J6MvpmFYmShmgCrQstQFbMRVBDksKbJNMw0CSDZLd9QiSDgJnNAvpOxTvI4PFfDGNqByKYrqV3xsPg63A1YOUV6Ovo5mMNJnE6EQPqpVyESz6SY9mvvzxHu4PJBPx0uXm+3uxE5/MI0u9XBANXk6oa4JRcq133du0QNt9Ifuyf8BbLeCvMk1Vuo7FdI2qDo98H1EgkTTFZBnjzMElYZag/33PlL9adXzHANUO4HEDuuAqSEqEwmlfnX8MnNddZRilB+krVa94JarrDXLT4KzZiM7bKfPAkUacSmi7MOIGSeyGppUE4Ud2J/KuxvuNHuTyAL78xE903fxwtuu9inpBunfDSEeGa+wKAK/pKi0YhrKCDk0dRoxMXUWy69SHhJzm5okGOq4txTRpJD6hEe3M93ERgHFSK75ENp12qe4oyJeNvw5JC0HvGn1hbzrLSGLGPIE7D3mdgID8bdPTDg4nJa3YwBJCBS/PgCYx+iKLI6whpKmL+hjR0Mq86xqBORRzgN0xnlrvb721gPiSVB2DefEFAlhnp3/fnNKO7vzeqQdxfar1+30ErCntcY8/mxFcA2oairy4TuRfQWuHQuQpPhPiyHDkL1OUjFh5hw5fxbrQMpK3LLMmYhSnGMHCqqCj8upGGAYwnnJlMl+YV9C4zZz2mJnUdXtZwQmE1HHW4noYv1lrPkFaAOGZQliEc4dBZpOvPXTvXuK50g8vAOlygrXNXP1glgCSlZg+grto11NWE+uDpkjCVGMtJBgqxFajS4VlRYYPx3dnWtFX7+4n8r/GYSBjE+W59UAGPGq4Xqy0fSm/8Stdxpk1KpFELTDWuYZD0ffKt7xgcz3Rxxg7ICaDQefBuUrNTQunLqL0X4+s/f+FZYH1o6enXDM+tvPMQULyJIy78sP/DMUAMMfXwr7eUs/O2qEFGbqtZbFjEQGxJ+VwBeGkPit32bN0U5k1058CEo/NK37w5XpUBQ4dUHPiny53MHh24XNsheNUJmilB8uy2cbPtUm2RoNMlwXF4w+WwQySPBN8NlNUyRSh+QJn9Q6ATtyVr5DBcciPkZAxRuPiiz7//M6MGl3M2jMjI3JGrA7DkBHwkPV3SGPPMc1s8gOwzvAkVJ0OiMgJKYRa/C2BQBfKfuk9+r1v8FOy9udIAAZcIjl7bE75HFpnVYIAg8i6cD4RccRgyHRnUWIEO5aj3s21kgZ1G2ZPcQ==","layer_level":2},{"id":"bad7f5d0-1c51-4b73-a99d-7391324207ee","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Fetch Messages With Authors","description":"fetch-messages-with-authors","prompt":"Develop detailed content for the fetchMessagesWithAuthors function. Explain how this query enriches message data by joining the messages and users tables to attach author identity information. Document the LEFT JOIN logic to preserve messages even when user data is incomplete or missing. Detail the construction of the user display label using the buildUserLabel utility function that intelligently combines first name, last name, and username fields. Describe the handling of null values through COALESCE in the SQL query and the fallback logic in label generation. Include examples of how threadId and chatId parameters narrow the result set. Discuss the importance of this enriched data format for contextual AI analysis and dashboard display. Address error logging and performance implications of the JOIN operation on large datasets.","parent_id":"d462a166-b222-49be-b685-56af271d085c","order":1,"progress_status":"completed","dependent_files":"lib/queries.ts","gmt_create":"2025-10-11T18:39:19.81632-03:00","gmt_modified":"2025-10-11T18:58:35.961817-03:00","raw_data":"WikiEncrypted:7J2Z02irw7WK4JWclzBtghW5ryi3cwQgkV30VOgty+Wu4Sr6xpTqchzDi2/kPXbZXZETXOSpYZ6D4Xol9FGFJhPSXRa981rT+64Y0ZlojpcKeDexThNoO4HQyjKFG4XwPPi3S1t9s+kYyOEjWXY493TWf7bTlZKbhlcmRWaKV1Tbat6APnevPvHxJRQYqQKsavkO2mFTnn4GnggVvMdjSjWezYaPwKXW9VyOwHf3imC4lfXbK6LTRNQJMJi/3+722NRvJ0oBXeQONWIwJOoUhk5VRL4Hs5HJofXBA7K9ZKyZMUurAVwiqmOCJ9rhhYkhyPBnfemlS6iLvWZ+E+nozNSZE/CkwF4vCWE73+psJIHyqIdP0lWNgnvIVVcwUDr7XNbwNLmXoYS9wVBOxp9F6R5tkh9tu7ChWdcvM36hsMoYvysNzUh2Y52RHYpYGdR0Dn23UP5NnG/lzDOHIdXLoIqLzD/ybJEWJ9wfS/+7i6DUVtf+f3WvhbknK/vntEt/WpL0xGufxrLBt0oF/kEoTBFtz8grNewR8eDwy9vuKTheb03xH9GH/V43k+5TVj9DK97bGZZd8iBnlS99PI68G4LPK/rA3+Id+RhlESJzWiNXUCgwwuwcVYVid/g/gqxkhZivjEwje3mBL2MjGTBq8nguxxbnk0mzvoEsuiJzy2a2dOQJs7Fd+Ukt0WRVLcwPRw3HBq0vr/XxuJnNUUUXoe7b/ofgscOp586itzGhjBEY3t2nRWfeegkEpbRIezHNuF4wEKAL/ViuKNfbFcxxq0mT8F/AGhLfE8LSDaFh1TIajsEy+dwsFwz9B8tPOwpsr7gI/+Q+qWjrPeX2OfSnEbUMikxISq9uVxBXRXWnPimFUluyrZSFHf8R8n3Vy4TruvGXu2zN80JB0Yf2EWK+P294/8Beq8CqYLBBvG7clhjRw42y0bfKLnU42FwbHDLhSjLrwP9SKMcbsOkWN19Fx12hMsMgJchg5X89VxmmmsBmpB87sKGj8zPH6Ha5y99GZuTa8ehtE2rx7EdxSi0M/5RKoolVU3G2fVKh6TbUWr6W4BCd+u9bGt0XuU2mw4VpvhYPgtE4sa01WOfv0YP7jx0hg7TzSRjEWWDEA4lEI69Z+wUxJcLMiXNNaxZRZlQ+mOUT3czyJaG82DpVQBJnFxWvgmrOzwwo5pqJMFLsPqR6EpCT/o/ON0kk2vBn1wDZGqb1QmXNPoxFf+WDW75G9zU/mths5Exv7hUtTgP/rlOPpMjszmw1eVHilqoZG1ouhRwtUHcvgdK0OdlyAka+dwrre1yQwLnDtfG+D/PAQop65pUanErp5lymnSR9VzVOj6V1xyQSLESdsIR5qp4gPWh1WtreOmTgvoiivKHyvBLMQv7NsRL6fmVmIf0Ll9DeyvQZEx5ONtT1ICp5ypWeGditsAQJkGsbLqwX4R1RTnBQfF0BO0omuCaIe1qF/98k","layer_level":3},{"id":"496fd1d5-71ad-418b-883d-699ebdfe73b0","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Insights-Only API","description":"report-api-insights","prompt":"Create API documentation for the /api/report/insights endpoint in the tg-ai-vibecoders-summary application. Document the GET method that extracts only the insights portion of a generated report, with the same query parameters as the generate endpoint (date, chat_id, thread_id, days, persona). Explain how this mode optimizes performance by returning minimal data for quick consumption, particularly useful for dashboard widgets and real-time updates. Detail the response format: for traditional reports, returns only the insights array; for persona-specific reports, returns the corresponding insights-like array (e.g., emotional_patterns for psychologist, viral_concepts for creative). Describe the internal flow: request → buildDailyReport → generateReport → response transformation. Include error handling and caching considerations. Provide usage examples showing integration with UI components like ai-insights.tsx for displaying bite-sized recommendations.","parent_id":"7d1ce1e9-8164-4429-ab2c-f9b899be913a","order":1,"progress_status":"completed","dependent_files":"app/api/report/[kind]/route.ts,lib/report.ts,lib/ai.ts","gmt_create":"2025-10-11T18:39:39.123885-03:00","gmt_modified":"2025-10-11T19:04:19.705359-03:00","raw_data":"WikiEncrypted:ncgUburcUGIQoFYRn+jCfkgNiuMQNIktswxIK0KCD61kjfR9xZP2rp6ILUKIv1To4ExZj2zujuXYbJ4KHb0rhSxtE3iIrxhEOFn034iDlj6jOLu+iI81Ku9isLsmtncvyTSpIiWCh8unpKVDMY993aHg1ckgvl0STfAjpjL4YJcbCw2dC2FKZyVyVCjTgyrG2So9iah94tG5kT2g3SSER7I0Lpcdvmgw1a0y2oQnbgXIUg5YyfyK5/8HZblYOPhDxCo0obPAHtW5BV32cPaD43wHRuBJiKID94pLkcB2RwIcvsfVnkl4HYGbd+RiYzglZfEK2IoUluXNvLac7OXbRcWo72jKKetY4r8s3sI3eiEAQcuBdbByqtSrfhGELIECleCvpUZZ0L7CRPLZ1T8H7SBwXjfUi/6CtOOofCaxS9mmf3BujtMoDhn8mitAhfHxJBRgKzrU/DK3Iyeg2o1Diw2Wilhev04fwEzbnI7gANQIpKUJwaXAnlZgP8jHV+tuFBTru7iMuhrwRpgL1E0YjsJylF1cUwyMRb2craHb//RwjZX1z9tP5IpXAV4XokAxLYrWGsHZ5gn2mQDW28sxMOHHK8uICRHaoOsr/U2AEkY8NR0EpLiLIgaTmjNNS11uTrYm44L5JclaprCIBhaQWvFWlKxUU8vu5Ufsh6+80k6uhxzru5VEFfhfD5xJj07n9Zp3DgvPJstModjPP5md7BSAWd6443xrEUjPeGeQFB+Ga/RbmW0++2hYFsCxUCynaDNZLM/Xez7X8MvHWeldB1HC9X+7WcWm0inkxtfQUDPehpxGbZBizdq/EHb1v/566B0A35cDZtJT+eaijP9sff5XC8Vgpf2yKhiIFwtkHadfD7DXHrcgiLCnIiU6n+LPYd/Nd24ZliKjCsqIjFZ26y1Tu9LuzvB+9PmLtdGFaQvTZtIJEXeUDJv3ojqhfmb0ugiQ4+23yRa9JCeOmTk1AIRVdgpXHEhR7KHg6jGEfTEvCZeDOSB0jBguN+ga7Q+ahYtaRFH6a/gL6rFSgxuYwwHzZPcsDc7s74xo3TYPwJllT19gKNCTf5IBf7OiMBbI0c82ZHuIOvobbHCUvugUQXBj6tfE55zjhi7wUmb3P9a4Cx305voQTybv2D6FABSwdteAm9DbeLxdfmbWVAx8l6Lii9hnG2TpuuRTRq/tasdH16JOuliLrL7S3XHXHWQ+OVedcinGK+BfGgIG4sFQ36Gc1kAPtn+wg41XFXvVup2ArdBSWXZYUcY6S9btWhoGyWJuaFIWMzsKPY5ZQXIPQIYon44KI/Zi5fEqvCLYOKnw7dk9ngIHwSB944u0E7+67HyOrt+TpDV66rS61sCcA9EESIFssqprwFABqFB3FfW4YFbMVqZPoU8aTcfnFB2wMfjK54n9P9HMIoSOiHpeuTWAv3grZbKVCLWmJksQJnudy+BDdz1PJh4X2mbTHKbZbXeHZTathLGfGMCGvATHs9FbJBE1xo6Ce8LY2Yc/51meG1EELf5EFo6V15BfYmL//3x99pRZBl/6Oh+JIKdoY8X+nJ/XiGV8s28k4KBttVE5w0lh/HKYgBWA8HI1LO/GWpCqhYS4liBM1H+4+tlfkak0mFtz/PZJzJUO8BMiJMer1Hsm9zin/7WBajGXrfVVrVAYOvlm6GZrW+cNKDEPemYGtCnOZYhA2uNzDz25shQ=","layer_level":3},{"id":"df756b9b-e430-4ddf-8bdf-749cd65618e6","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Psychology Persona Analysis","description":"ai-persona-psychology","prompt":"Develop detailed content for the psychology persona analysis feature in the AI report generation system. Explain how the psychologist persona analyzes group atmosphere, identifies psychological archetypes, and detects emotional patterns within Telegram chat dynamics. Document the specific structure of the psychologyReportSchema including group_atmosphere (50-200 characters), psychological_archetypes (4-8 objects with name, archetype, influence), emotional_patterns (3-6 items), and group_dynamics (3-5 items). Include examples from the code showing how getPersonaPrompt('psychologist') creates a system prompt focused solely on psychological analysis without business considerations. Detail how the response is validated against the strict schema and how the analysis helps understand community health and interpersonal dynamics. Address common issues such as identifying toxic patterns and interpreting archetype classifications.","parent_id":"374a319d-39dc-4f05-9312-344b401fdadc","order":1,"progress_status":"completed","dependent_files":"lib/ai.ts,lib/reportSchemas.ts","gmt_create":"2025-10-11T18:39:49.687247-03:00","gmt_modified":"2025-10-11T19:04:45.720244-03:00","raw_data":"WikiEncrypted:XjbjnOzjruoAEvpn/dhFW0oJhpb/3HzuGgimDzA0ZGGr7PECEf2UdulofIHvgMZvAdJXWz8FksocOjl6JvuoXHsoQD+Q0/xflo6ksZEERbF0pop96W8aBech5bSnugzxDAFlxwTQsNK7pr1bp7Pf4j99z43wh21bCihrY9SLR1/BNvyDdwgoDMVYlKOpakLnZOT6xTqwfxMmQSHq/zSM+ZNUSfuIIcwIdWXUq3vjmEjACMelbN6SsIJUBTp6Bs8nh2EIHIU/IbjEIf5P0alD6fUhlVAysorH4tBr12DZNaO7ts5qhKNX2lj6vMskFn0szXxmLkhCgQSgvfuXCtAObfpau4Xer4PHdpT6GKM/gXdzUzqKEu7IDHSx4Z1790CUVC6yl1OVzDmtosa0WYaJITuR504I6LRjddCJusE4xm1uE9/QegCpu23fkFJHnoHnePL0++WA2hagj/pYTxJx65GY0kVyTME1rHmYxO4IqXenJnu7XvJOuO5UAwC0kbDqQGGL2T5ZEoglPQ1ajOTfEpjeazDqRTxdARYyGhQi3arGjJFXuKZ1RLxbenluFh1umMNA4jeYG/SvmJ2bjjltofNGE2udjK1XZsj2mRQGejeDDMHnMA3owIZugHlOVW6Fo9IKIzt70i3HRiJrLrc83ix4Z7TTz9v4AGaj0GASz7c80ZiaVaWT5CJ4nf2TJu8DsJlXDzQyDPgfjLZzDBcCDR4r70nSGtgsGq4/pgSa3lcXMY5fmYs8vT1g2ESBXQiLUR0+DgiXbQy3Qs5sqLyyFZfIa8p5lbovadnaXlj8mX+FsC3GEt86UuFpyyybYc4moLyQQCkEo81yQed1tOEKDkYIOHBKzCiMFxx0DKtgYVWoQ9GJeGr/6K/t5ly5hEOUXLZ1sPUkJeTFTgLuA6sPfqVsifjj7EaS8iimWQAWdpE2svFNaq+R5DfrgUYuLBxx0JsFyZy5QhAlYrq8YuEWF0wPTdNPORomqFkxelr4UsCEKBMSleayzXIO6DfxOx+2xt2dUeu+tyzYcigc43V1d7WnvQLcX8JqZkdV+GnevETwbv/t400Ty2MP9v08LSp6Hp6MMuoF9eZLYL1x2ipd1kzsLd3I0m0Dja1xyfNiVXYFOk2G9rYJuiT5KaflwuwSwIsheyQ5GDMNqUww/zdkNpMyQe/yxCoc2AY1VWfR4V60pOGZXCVbJurdD2H7nydZssrUKglocCezoquIS527j1YCKUTtiG2t58BoZeqJVXfsgkwfoFXPzMQ00BO6Rx3w+eM9bzwWMR2a1zeXeQNSW8wGPI9SarOhf8/SbBevlHFf5bl6nCyoa6Auv30hkdW663gbCCCDANE3s6j+yKdfsIolb9XigJJyjDwxshZh1d2hSNu/JiR7Zwrkg1rzobh5P1VRGygnF+Nfqv2CHQippb1Ls4Q8MPpiOLqBwvu0KKZcu4d8cp8cz9KZI8F3eLH13tAAhWISGa20W+1iJWphXhemYGsP0CZ8UE1SnHiN72nF2p/+yT4sCOGwYbeXC/H+yOiSYmqzf+4HXD+ET7q//j/hB5taWNZpct3s39HhDth5MYj5Sq4VGGLOetStrSpDLLZuHkUBqaesfM4Kuiu35KPQwJ+nAd3vy3bU/3pcWg0AqfcBJ75bfZC+dtTdnKms","layer_level":3},{"id":"1ee11ae7-b261-4d5c-80e8-ef11052072a5","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Technology Stack","description":"technology-stack","prompt":"Create comprehensive content for this section focused on the technology stack of the tg-ai-vibecoders-summary application. Detail the core frameworks and libraries: Next.js 15 (App Router), React 19 RC, PostgreSQL via pg, and Zod for schema validation. Explain the development environment requirements including TypeScript 5.5.3, Node.js 18+, and strict TypeScript configuration with module resolution using @/* path alias. Document the deployment requirements and infrastructure considerations for running the application. Include specific version information from package.json and configuration details from tsconfig.json and next.config.mjs. Explain the significance of using Next.js 15 canary with React 19 RC and the implications for development. Address compatibility considerations and version constraints for all dependencies. Provide practical examples of how these technologies work together in the application architecture.","order":2,"progress_status":"completed","dependent_files":"package.json,tsconfig.json,next.config.mjs","gmt_create":"2025-10-11T18:38:14.783081-03:00","gmt_modified":"2025-10-11T18:40:57.094751-03:00","raw_data":"WikiEncrypted:w0CkdCdnXCcvlN5xOpiEhEX3U68GI0Ngj6azFMJo9xSXD5adKnu6Qo1t8CLnFs+ZP+IW+8SVWDLlYtdgYFwxhCyiuIs69J9N1zez/KjzCbxSPz9/pGbRIkjwzaJ7Aaiwy4eo0bQNRF4/xxjA3T3cCcgksmgOtZkVnCRRGCSGztmsI7Boe9EZDE/g94vUzx3tRbB7NzWql7Ymdttj4iWKQVsOWCLQH1i9eS8G8Hvpq5oYdeOB61NFLD7uA2VHbLvSoIkSRRSnRz+5eZKZzuHS7lTp4Pe9uybSJ3nH4fsk40udgPN7qpFZjX2Vd8hmbpD4EN7p6eaYIqDn4KogwIGptAWLpyKRFkKzJRpmqVtqkotiHfPba5n2UkMCgQbiqV5sXLiRCMlIDsN251WXv4FweK1VADrrVu3adK3Kb6cxPP3Fe/5dwIjwzWE8j/ruq8GDFvqBQt6hhsUHVpXERZa8+MxXKAFdcLGntPuHcjH+Z05UveBn2AdpsscD4wSG+PuGG0jSmNKhGo0OSY5SNY+nAUkzHCy02WPq4UzueFDBhSz/BvNG+GMN7g2wx+ZrgvVk0Ns1B7I/cmuIu6I0Yc/WhdnhdtMMIoiQi1fiUAZHX5iGSaqsgUBMgoOJUlx1IqQhuLu41SkEWOIv+T3LCiIwx2jq3r2TE+XgUN3PysXjd0Ak5UcF5qtdJlMkeDqHJYGUKATC/NMWkJb6JFXhzg7Zz3OG7hHk5W73+xt8ovC4NVivz5rm0wb+dC9h6zjdQgX/qNTwnKJKJv1DEZjBhg+/QhzLKkG4mXK86Yy+ys3FP5NW+o5GlZPbj13UCEWRaCH0OF0ewiK2Evvxu8AT6hh25nFUIVU7unFzcMfmLlUWOfqCH6Sp4M4ddks8choPf6F4r3C1FJPSULmZYRFB3TRjJ5E+ARWwJcw3/8jsAQPRUhoaXOzec4B9jRIuqT0M7mzeo7y3yN5wovuuGzqBG+goMZa1DlSz3VXZe+uR8FkJL25ZwQ26+E2ScLfXBYcOHRHYD1C+WU3EGBQWpnnp1IPPZha2LInXZrXuiUg69XuE8fWqLufCGcvBWqFpIm/ZILjCQZmlnedHanrCLDz68gALqHwgVP4vb0UiXa72fHe6CqIHXqGDC7M2qvaMjHY1syQsc8G2T2/gLiEv7avocUn7cJoFrQwsr0ZmwP7aVxnaT3n0NPai0oVe2W30VwmQwDHT0i5UweACxjcpiJXs21HhNfDIATg4v5vS/MXKATz0RKgjg/5rl8brjFhYFd3P+x0gTCwQTW2Lul/swsXShxEa70eUB36RT5ZPson6ujdEay9zX2N17LN1DM5Cfg5T0niEUEpvkiSB396iuiTJdxqEUeeVXxK2GVdUWxLjA/eCXnIi0qxw6zRyIbq+7W1SbMRKRUSciYnHA9jZojeM8B43tYTUjZteyWdaJqqYHp7rkArBTL+DcfdIIZM+2LM5DhqB8/gdw4rz/KDxglnRWFSyho+xiCr8ONZ9C1uMZY8PNJEoWt81/7HCOiMt3+f0xpeQLzxhf+8ljSoqsFZl7a/uq9j1GEcM5n3GJ8ZKji+T/syf3p+jgRxxRz4vPe9xtaq7n6guaH022oJVh/DJ7vmbShryM80dYOG90ozxGS8N8ME="},{"id":"a09c5c73-640e-44b0-9b54-d49d7b60e513","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Prompt Engineering","description":"ai-prompt-engineering","prompt":"Develop detailed content for the prompt engineering system in the tg-ai-vibecoders-summary application, focusing on the multi-persona AI analysis framework. Thoroughly explain the implementation of getPersonaPrompt in lib/ai.ts, which defines six distinct expert personas (curator, business, psychologist, creative, twitter, reddit) and one daily-summary mode. Document the domain model of each persona, including their unique objectives, stylistic guidelines, and output formats. Include concrete examples from the codebase showing how prompts are constructed for different use cases, such as the Russian-language curator persona that provides blunt, realistic community assessments. Explain the relationship between prompt design and JSON schema validation, ensuring AI outputs conform to expected structures. Address common issues like prompt injection risks, token limit management through maxTokens configuration, and maintaining consistency across persona voices. Provide guidance on extending the system with new personas by following existing patterns in prompt structure and response formatting.","parent_id":"d5234fb2-3f55-47ab-861f-49c3096f6167","order":2,"progress_status":"completed","dependent_files":"lib/ai.ts","gmt_create":"2025-10-11T18:38:37.448241-03:00","gmt_modified":"2025-10-11T18:52:29.309957-03:00","raw_data":"WikiEncrypted:jLB9r4y2lG8K6C9DNsjHlPN+LvCmb1jWVTzzwMGO+YYJzWXGjU7s3gmGbNRGz/2JQeh/Wb/DEtwNgPqKiq7HgY9cAYl2BoVh3O6jYTgoasF5/uglLO3VBSjasYFrTt6h0ZSZu0b0Lw8QlrUQz2J37YT2MRzVTAXZ5mMqgerf8OkPKWyiJCMd336IrMVYJjY/KDSkpIXg09hFnvJjwmtJFf5Oz3Ia1Vlb0Vc9th3dEI7Mc0RexxRTAUiQSkrH5UyhMtBZhkJ4+AgFD0HW1TNUCqCQ3/ubrPnH4i91x5YW9KtQI3oEDZvoDL2iJHVuhRPTQ5WdA+ikzhU13Tu1zb5282ZBT0Hx7wBvhLP9JBSrUdVBmCWw0O74A43E3EWH/8U9W9bfJ/fC1CDOfVhTBKNFepiVAsf/BfjFkvMQKbIHSIuaurQNEIb7NP4/2h4G9KxYLL8dU5yqyF6gJQ268++eYMsuxdSX/Y3sb+TtRX5zCWS4gJ6f5ZdHIBTxLIk9pcKlRs5kaSHDuK0USlQ4GR0rPnrJ6SPYJjbfOI9REax7/E5qt0cqwH2HRe0fkD6itXqAmcuAgBucXUc/PQW47KMSqYqMA8StJNaWnlLTu4skBWwjOuzjCnSG9rvmD95B5164bKRqjg0WaM2leD5BZBvh0ArSkdQ/I0I4k3+pnMQIL2OMEToovZf/HVvSeC0+QYqp1w+TJAVspUc6fVwVFN8ZZq4oRKErLCsXcQOTiLky/J4gja3wnD1SmyLDmkvrlMYrHfzHX4T7m+gHQ4xvlllHoOmC4Ap1GjjedFwPojQZIKcYoQ2u0r5Rhlb45Pl6JqED0mGewUFqcxN8MIJIFvjowFAeWVJKek0Hf4UrAa3PRLIguZbv9vWf+u5hCl6nebCr4MyrgsT6uzW3blcIbIgA7QCLZBT/TGnyZtco+m5ULSRKleCDskmeUvSOX7moKmngmG1xUaDCCoo2xXj490lkcKE6siUmHEc2dDsAFCyj9beWRKlvWXk0/85Bb2Kmlw6HTmwwnkPFh8PdY2QAKHbAmmYpDfxu+IVeSZGH/NjR6L5M9z5T8XsYFaK8rNmyca3H0h2JJs8RQlvfRCiiKKZw7H3gM7W0d1vBOvpXdYJ6s7/38sXyuGHTEjDKqa+GjzEmwhOHRyn48pLHWLpPpCWn8xXQzutgMDMu5aSt2Ys22VVLntRaes09DAOWWbsmdtZnDs1a3OMCjMqWhie/Ne7QxeB0ATaJSAovPd5B9Rf/Rm8QryZf4Lf5WMR85hyfLzmzawJYa6/fK/F+goy63rC/TrzreGtYmuMjo5XNdZv74oub4zhyrbdPqy6wokR04S2VYgHdTRox234qkLVxOLW2OufaWzz60z66CeI9g7opMwcumQYpR2hOmaUe0rMl+8yIWnYmbZPxX2nXtX4mterj7VLxoeN4utaGbOIMIF0XOKUAKzOHF2gQttM+fZv7wnI3nh1oOtsDNJANpiEt3efrl3J4jI/gqr58jUpyFLtxim8RC5pXDoVfuriFKvBE8WVGh4cP2Woir2XVmTindqMaukyeKj4PIYar481U0pjnjvMR1S/baNy6B3uWGrIWmxNg6AvEIscXzQiFSd5ZsI9+/UFfB6jKxwEe2BDpNSZSdQPX0/a7/z+tR3zxDIcSjlS23PakNt7bg8+bxPn+HP90+D8SJBMGqPRs3bbfWP/rH6aBsVTWLf154pcT+OBlqhlHJ6wXiKuGh2L8PfWJpwJm8tlAQk46TSf6k22lt20cjBpEKzGgHNDVKUN1oLj/mSOXAxaA5m+N60JVBQY/PH/glw==","layer_level":1},{"id":"b26e1dc7-bf05-4d7b-be82-960426646642","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"State Management","description":"state-management","prompt":"Create comprehensive documentation for the state management approach in the frontend of tg-ai-vibecoders-summary. Explain the separation between server-managed data (fetched via fetchOverview in page components) and client-side interactivity (managed within MultiStyleSummaryGenerator). Detail how React's useState and useEffect hooks are used to manage UI state such as report generation status, loading indicators, and form inputs. Document the data flow from server components passing initial state to client components through props, and how user interactions trigger state updates without full page reloads. Include examples of asynchronous state transitions during AI report generation and Telegram delivery. Address error state handling, loading skeletons, and optimistic UI patterns. Provide best practices for managing search parameters as application state and synchronizing component state across the dashboard. Discuss performance implications of state updates and strategies for minimizing re-renders.","parent_id":"4b11e8bb-04fe-4d5b-bf5f-dfd8fa2b4019","order":2,"progress_status":"completed","dependent_files":"app/page.tsx,app/week/page.tsx,components/multi-style-summary-generator.tsx","gmt_create":"2025-10-11T18:38:37.623643-03:00","gmt_modified":"2025-10-11T18:51:18.60544-03:00","raw_data":"WikiEncrypted:29DQGcj0Xkj5ar8OataJBBxhchc25ft/oSjDSUQ9oFMqkEmznfs18jsO8Qk/7qxOyzmw6WXtqMjp5xg7mxI4VX5lOzsNLkcz/EQexrEkoMo5Swubm+WrBJwI2l83fjdz+c28yt1COxvTA/gNUwAxFHTF4IjE9yja8htTvpdcz/NGUpVyZOhq1l8mpVJyoakBP28z0mDBrs8ldb7HPPOQTfBFZJ73VW54IxM+iC8kKcQ7911lFa5RPO8dwaxCM7+x4vq+JeD6B+pG4J3aG+qvnQusk/kds8EYk9FmUIJRA7DFLY/3t6hmAYwYzq6aETbgthErsh5hdi/MiE+LoEmM0csRBruaeXMqYYoXS6jxeVG1pjeA/QpBs4Fv1mVS72LCePu7JG2ZyKhcUmx2lx6pZ/Z+epggsYOnsId0WwN2XZgy4ysIN1p2at4nHQOHgQmfRLDwZh2tnRPsFC6mcRJM3Jd0+z9iYExpzPEITWdmuyWQokzP0cTeQVc8IvjfUZP5IxS8b4cvctbh9JHY1xR8nByaRwjpbfRyMhTTuyviCuENAYmmfJ0/qsEWTT+DgNvK2WWLrKcwFf712qO65kDp7PIOfxPMXrB0m9kyBpIaE2v2yfjzstRsGC2uNGwMTBvdULx4gi/MOspZaQAqLhCdCwSsuORWj98G+ZXz/I2XL+QrAsZy4+AIP8u0YkPGXll6OZi+8s5dpGERPzwMEXFzRQbOvII/rQ/do9+VTbKqlXI6fszAS1CPSuYy1R6il+3YgIq5KRkgjRcTUNS8wjF/SAlObZb4SL+ZLq2ICPcaf3wPeWJdLH+2hrzdMoelygsz0sU5bxK4L1HY7tLjERtuz0tTCQ1Kbj7DoFKjfuXAjZkrsDTbjCaiMwQWTuEPej6MmGq6s0VCQkG27hOX1181IgLY8dSdX+FHNrCrO/i7t0iRuv+sbgo7ywyXFs8F1ws6ez0IBvOznpdAggWyDq5g5EU14hQm8wbqzgBUEWk8KyGNRkCSNX4rkwcXKlt7pZpboHCH3wtHaII3Vb0kT4IuSVdGhxsc8EYQuw6kSC11wIOfKZ6n+ulIEE9ya1mJ8rFCZbU/gaZlHfXw/ZgXthSrSF56B4A+k4j9o+ex7qV2bne9jAMeHmWBvwVgtNM3Klq481RA+NTTpzkwkRZ+OSe9bTqyCbRz++2J3kg3TcWrYC+szqVE7qTZIT+EJ66VG3VBLE6LfVL8VEcbUbgRriHXPQe5ieBeew+K2tfjyQWW2JVqESNt6lGUWwZ/IKqY4u2iI8tOWEwk1QNL3YmcyA69hScyQpO9VgDhpAS4fxVeP9p/0WC04BB0I3mEig0EWGW+r5WA1uT4LKwActQ0ev8WcWbX6xRS9R04eZ+SKBR/WNC+lK+iwWjdBVHrRxBT9zjCV1m6zccUG163RkMoiGR6hYSVwJxbaGwVHGjP0l/iz3LhG2t2rExMrb2ixWj+Epy8IqTIoBrZyY9orkvrtc8niCVVxhHZmiKS8FsmkVBACFBEaIEyngdwVIGf7rBXMVRj+dWg6XT3n/jvPHBLfPGpE9Vty0h5CCq3e25H3s11qMfco/0HT6dYffwHLxNJqBfP+2Dk76HzZAwcvas69hPiGN9PN5C6SFJJzDF434Dz1pJqiYO8ZJcyeU8t67br/YqRHEcSDcRaQUV/08YF3mz7Z0vhCaRcA9xOuOiA03Nk2Du/OKaEgMXqaKzX6DK+mG3UDGshRwJCZeTTCqFDBYlskosgunEkrBNba7xNraAbgHM=","layer_level":1},{"id":"4f1029a6-3e39-424c-9f21-e1b862a6f287","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Service Orchestration","description":"service-orchestration","prompt":"Create architectural documentation for the service orchestration layer of the tg-ai-vibecoders-summary application. Describe how lib/report.ts acts as the central coordinator between data retrieval, AI processing, and report structuring. Document the buildDailyReport function's workflow: date range calculation, message fetching, text payload construction, and persona-based AI invocation. Explain the strategy selection logic between text-based, link-based, and metrics-only report generation. Detail the integration with generateReport in lib/ai.ts, including parameter mapping, timeout handling, and response parsing. Cover the type system for ReportPayload vs PersonaReportPayload and the role of Zod validation schemas. Include error handling patterns for AI service failures and fallback mechanisms. Provide a sequence diagram showing the full report generation flow from API request to AI response parsing.","parent_id":"a14d18a3-9e0b-4a19-ab6d-4b13dbd25e00","order":2,"progress_status":"completed","dependent_files":"lib/report.ts,lib/ai.ts","gmt_create":"2025-10-11T18:38:39.417097-03:00","gmt_modified":"2025-10-11T18:52:06.489117-03:00","raw_data":"WikiEncrypted:vMsgMax61wW2sTWhXd8DH2Br7KgHO8+G2ZtIOX7axW3oHyO53DBAd7GGbxuIjrhTzsCtsoPU796BfW1ZEKV/DC8rlv0fexMykH6TsdSbdWwq8D8BFv+HQpOz5ojpvdBEnPUKnQ4oYreM2B+n+1nw2oCcLu2ZqrJJDWeo8R8hhsShAndt6htRLatYLQLQGAKdt/G0BvhbW7suURZoYRld1J6/Izf4zWJ0BkSzmaxpTGpyAUHg/VkrMejWmejIpCk3L/6Xw+ecxNNvs75SacM8lsVODJeRFHr8iE6ABMUAhAVLVpyfTefQ8ryAhMaiaMARStMTgZ9YSh7Y6L8Tn7OiPuvMbbuDXktsf15gly4W5zHCKBIJbAnE/FvY9b4evZOF+midjS2ZPx15aJZysHuxMaht/afnsFiTN6gS+pOhV5GNEwRuyl4Qr71U/RioeHVqLRZW8WdQGsqHjGKk22ZfG8i604leXgg66HjtoaMWaG+qG1jTyPoaHtvt6m8tNX9Cv5d7tCdpHH6PpfG//1HEr0ItFiCSz/HxY91dntySvaFrbWPeVO229xqaHm2a0HxHtk6J44z0W9BScRth9DpH56Kb5sLHpd3tewloVScLNnb2+Ldn8uZa3MXmYPqk/SZW5QbvSRD+F4HmRmmon4XaOGjbMLwlG8pPXbmTUE2r5xRO58GyKSdnhP+38ovnf7kFanYtCLS08575eBx5f/DAZHz/2GlmPT+9kgtNxXSKZK+SITdKzz3FbZiyMST2JmUGH1ujYSfFmNCQnnj9dA5MwCwAzbMHtqtkn96kFhN365ZA6U0DgJP0PX4TvrSKI2v1c5hSX1wcjB3vX154N9kQzcDFAgNDR2MIhWePCgxmA7vHZ69jgebcg5u8EYEHnUjrnc7l4rx/RRQccYDKWR+oMp0qnDmj1McYDpm6MkdIUH33YyCZaYb5vl2bSJKMwd6PcKxIjV5Lm8QZiZzT+YKkMJrcNo/PHCpPh/HeYjH+BodYthvf4Q8tz5Rt1JbO6Y9WiFAWjTnLU0z3Q7i6Fip+/jK7Vq5BTVg4/7fsRAoly/fecTr69/D8OUYkUJBZH0jTzXA7WD6MDW0unlljXGDwCg1uTcN6Kb7V4IFxUlnLNvXrJsP4Z+SNYBKDdsxDWLHHIOeCpm2Mc8sobL0NoT4jy1JPx9xz5XeK2VXxqLNuuFEw7RcRPWOuvy8rrqABYsLT0u+om6Kq7i9KomdlfgE2VhAZUCAbLDyRBojmw55YBR1ZTRSZ+CkRhRlzvi7QXXo21fz3SqHgAap+kETgT3CUBp0NkGzSEfCW2MQbyTscXosRpMnq6NBjeDjO3mCuh2liwOVoxo+ogKPVX+B5CyBJq01SJVOx5s+kUqMQcgpVXarjlXp8xw2qpWIDkiFr1xB1lZIJSGM9A4wDFWLGJjpZzjjBMn3jxJTEmNgt7u0imMIf9wOB7QopA67H6n3UIHRRecP5FFkB7NCNoKIsdTDT63EMqf3jC9ovX8lVjHHrKYd39RWWZXQbCA41pnL0Y8uFc9Jiq/6xPmZTTRTKWS1uKym9G4q9yIAa43lq+ROsbiMaO70OnbQc6ZKvimfB/Mawc5nBQXPRHyS6iTKS12dlEM6JB5hOwXVRbv2rc9q/+L5UyoC9tMFnLBIGXwE27y68","layer_level":1},{"id":"82ab88aa-3e2e-4098-aa34-9d55f54da4ae","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Forum Topics Queries","description":"forum-topics-queries","prompt":"Develop detailed content for the forum topics queries functionality in the data access layer. Explain the implementation of fetchForumTopics function that identifies active discussion threads in Telegram groups. Document the SQL query logic that groups messages by message_thread_id and counts messages per thread. Detail the subquery mechanism that retrieves the first message text as topic_name for each thread. Describe the fallback behavior when topic_name is null, using a default label with thread ID. Explain the error handling strategy for schema mismatches, particularly when message_thread_id column is missing from the database. Include performance considerations such as the 50-topic LIMIT and indexing implications for message_thread_id and sent_at columns. Provide guidance on how window parameter (1 or 7 days) affects the time range filtering for topic discovery.","parent_id":"fe6999b2-9acf-408f-991e-bc78d67b5960","order":2,"progress_status":"completed","dependent_files":"lib/queries.ts","gmt_create":"2025-10-11T18:39:03.180378-03:00","gmt_modified":"2025-10-11T18:55:05.119778-03:00","raw_data":"WikiEncrypted:3vc79e0j9rMxBUkunUPNO38IqrPZ9MXZZYaKN6f7V5XHP092tJvxO8fulfdSKbJ9bw2tAc92J9p7hgFSYwmONIkPz9ENufjWgfOmvUkT8w3Cc+V03HgKp0CmXzUcqwnh8z09jp5wXGzZWiN/RQ8RsuEANuD91+RzCBQsU2CzSpZFWC9C3OSR6TAzqR7HjbGNTTGUlA73cPGdS8Yvj6046V6KsiUKn8PFxfEtAjGhPhBO+OKcB6ZbBTW0KTsKOg8RjHMPYIofD2TORCeuDe3Ek+SQdnJcla77F9Gd7yFJtYFHl8LhgMkGVncr5EFVVHs5V3HAJRzwYFop1uCYYweiU5ASoIGk6KfJwNw0l5TvhJ4LtvRPVkJXzMDKtPC9nxWQ7sWEA3ES4MAP8bzbVVY5gtAb4uTjvq5L1Jd7qHIr4M1GpaZZdJ1/ZCZKVuazrhOcSV6q+0eR1qN4yUadAv74U5Ios2jqToXaYvUuW8l534Xx8afHQdxgHIP7KvdY7gmuh3Cn8rS+hfKIv/N+ZU3nFVWTKK2ZUYa+/lIH5qT9ziUIC2yexmolFMAI1MwpG/QVRNFmt+yxtOCKSfsUBOYhDu74Kbq8LtaGWLtK5xoWGcQRh1JQweTR39qkBedkWHEpxCVUsdXPRJxTDVK0h/9cTgQjVQjF10XRiZawl5whZe1XA3JCbKGRAHjdZq1DiMVu9LoXMpkvKapNtV68DZRh9JVUukZDiHWrXw8vLzXeMLnljCKMG85SpIl0uy2rEJfTsOugE89QtHJx23FijVaApJyAqsEqYKJ3dH0fCDbyPn/YZQZ7HKAY4P0Ra4/guvSZUsfV4VP82rxyIfA4hKihtSI1oakr48ygkY3CjVm8a/muwo3mS8aMU6YvhTIw8/6HCeNLxDvgTcOTtj86+P5YvIDt9Mjk3GD8fFD/bjVRp/vuAg5IkN79YXO3iPcWxEFBjSuplGerC9CYWMjrTbKMn144jBme+PO+LAk65QCZRrfUH3cpsBHsTUstKKRl/jyHdrRkXMXqLUBMhy29YuC5cJ/EIPHw5cLatvucxCe/ezXUxGGzkA5Dnr5Bdc2tFUIoOhYSkT5VtalmFN77LrbpdEDf9okzBeot4+VWk1SFKZ2M47Xr0qplqmcJuI5Kiyalv8QljH5sWhJ+SQ6ktnZGoNujg+7ncPX3Jpswnc4IL5vYaTtIJ7qoknsxZ6W3MgyxdPMkx6b0lVBtHDp1Q2tjCLhEQc0cpkHBxrOc0V6SBXWNDvgBbCVPlceZe1MCAIhACOmDimgMh6cQWAm1tcNpEysuVI67LQCrTSu3gSfNyFQM1Lfh3KF8uZ2sC4P+0zRF7NJnPDhUoadyZkrzUnZ99dBgKl8A5WKWgeRv7pURnVM8bH6fQXTUU5HCmwejcitIbFLmfjck6Cen2rM0DT0pHW4jMFpy5OCbPrcydftPxpJH66/fWn6sK5DcaHyM27D+OefqrUlGYNfML5NSMNweM40Ol/P4EL/vJL4AL6mn/ntWgXA0KX62mrIqOyoEIt/m","layer_level":2},{"id":"470e9df5-6891-44d3-a476-651836170b64","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Telegram Integration API","description":"telegram-api","prompt":"Create API documentation for the /api/send-to-telegram endpoint in the tg-ai-vibecoders-summary application. Document the POST method, query parameters (date, chat_id, thread_id, days, preview, persona), and optional JSON request body for pre-generated reports. Explain the two execution paths: using provided report data or generating a new report via buildDailyReport. Detail the message formatting process using formatSummaryForTelegram and delivery via sendMessageToChat with support for message_thread_id. Document the preview mode that returns formatted text without sending. Include the response schema for success and error cases, with user-friendly error mapping for network, timeout, and Telegram API errors. Address security considerations for credential validation and rate limiting implications.","parent_id":"705c16ec-9f49-4e95-8bde-64291654b9fd","order":2,"progress_status":"completed","dependent_files":"app/api/send-to-telegram/route.ts,lib/telegram.ts","gmt_create":"2025-10-11T18:39:04.003188-03:00","gmt_modified":"2025-10-11T18:55:54.741321-03:00","raw_data":"WikiEncrypted:/lmdJ17ZMRlElr81I4gxUQliVB73cxN+cd76ooPMh+02MBk2a7FSP4U3+WlriCsjbIJBcs1D1bkYzmt2TE+CAqpRw7VMPZOp3c18f5LtoIJa2CkqYKU5r7wp30wPofPktt6Yat1rU/TKyVSIAInQq8BeqwyfVDH8BADWdLUKL+6XLngwJN4zms1mQe+5rhB7nqCe+C4rLOSYrOxqcNv0wu1PQPhfOLDa8DMnfD+e0QHk105Z4B+lUz6Iwh6kHJcgjudo2LGy3z45gm5ib6/sM1QR/YCbExKzn0wkCBWaULorfI8dH/K7sbN4dSTZquR2a9si4WdKsIa2Qs+K1IkzziKXKjLT1YP0zecHotPkaDQB1pg+QfDB/Uf85nVP2WwGDi4BS8eIji51WUWFVob0ShKIwoU9xFbyAST/HRZ25nG6lUy6wmQcfvI1S3htWFEM0zpiziv4VByFlvtl2+ZOEt4dTxZrkY916Oyg6vSFcFz+FX1sHDMTQpndq7+imIax0rFhockcr76/kxUCvNfQLwK08eirVt8irqsYLSUwMAfaqdamGdWBfk0G+WGBRDh6GYw/hfXlPqnoh3v66w3lwVDiuZ+RVjo1V6FFUjfgYHTdDHecWXOJi2b4aMvq4AcY6SkxOg3Zdxb6sQsNyO4ZYvztw1bCxOvvlLPnOKduD9jfjaCRiXThHauurE9n31iHhfLn+F7ETctcQs27uPd2dCWjHSoL8Ado9qjbzSXjECcRpBdb7PI3uOzouo+/eR4v3b61+K4OqUkoOMp1ZAFXHGEyedlW7Nvky2Tc8thD70nCtNhAWpvimQ86dTgY/bb3l2PSjPpQ+BNdrSmyP+oSvnaHUQsIbtKHlS8qEI2JTc2Ck7owzaWznFi5kMPC4l2OysCOM1UkoS/glYgUaBUnjJXYIK+JJuObosEO4J/nePSymBvvEg2eohi4h5l6IkUw6OdOPcXdeqHAZaUCXFviFzTeULu/iL3jbt1uKYMwLsSqxEzdl7I+uCCWm64G9e6Ih6g6Uc4W7+nCcypQAXTjNZxrRGGvN3LJuIeJnn9q3YssEMnf8Se05XKhVc0Utb8KHCXv9Ejw1M3jgfltvtQxqxsq+LzcprRuypyrSfdVyTZOG/rLxSoiPLpZSQo1H881SwsZep+LexvcLwVZqfzF3qt0HKeWm3Duis4OVQftIihpuSHiulZQmdy9t3ecp2C7FvqXuN/ym23NXjW9+emhq3uwRTX0OdE7D+68zQCPtySRVC0YVwjEqjfkPlxerFPxwLshdUhh0M8fda4kCVrr/mb2+iZuZ6Su1tZyma4ES4cYGzihQNPq1qtipWpTWLsVlmRJNtEGAavyFmyaVNGm609UhUsrLzvanOiUnN8S9YAem2eUDDXoRUyhqyKC6yVtrw+17H0IbleY9iVv4iFwksRvxhGG5siPRuSgxY9NMt4KPo2JXw4Wt9NxjqukzH5B","layer_level":2},{"id":"eb9e54d2-0571-4418-b1c7-9fa5a6e56acc","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"AI Insights","description":"ai-insights","prompt":"Create detailed documentation for the AiInsights component that renders AI-generated analysis of Telegram community activity. Explain its purpose as the primary display for AI-powered insights including daily summaries, key themes, and behavioral insights. Document the AiInsightsProps interface with optional report prop of type ReportPayload from lib/types.ts. Describe the component's conditional rendering states: initial state prompting users to generate insights, loading state, and final state with structured content display. Detail the three-section output format showing summary, themes, and insights in bulleted lists. Explain the integration pattern with the SummaryGenerator component and how data flows from API responses to this display component. Provide examples of the AI-generated content structure and styling approach using content-section classes. Address accessibility and internationalization considerations.","parent_id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","order":2,"progress_status":"completed","dependent_files":"components/ai-insights.tsx,lib/types.ts","gmt_create":"2025-10-11T18:39:16.163556-03:00","gmt_modified":"2025-10-11T18:55:59.875642-03:00","raw_data":"WikiEncrypted:BDwKY8aX0GQJg2Tp28KQd3fuyO78FMMq8SAIFtDPMPGM+Mu4WxUk+XVBc8v2u3jmCVRyWmvvh8cnzgKdQFFdz8ueELBrginiyodUcz2Y39GNjXVAZjJxX4poDNgWYNRydwVnykuhNqk2lys+tSf+8YzpbtubvxHCZnPHV6ZSLst+ngigTxygDD6yPFLXrhrn+Hpg+2TAFpPxVfKW/ld48Li28iV5LANuF/eYTEtHStvzRXZnR8l3vETkzCh6/rXH2iY/M/N6rfyXlCW5rO9WbNnLABrjLRvZydvDJc0nomSpjxnzplsSvx3+HQC4d5CMuVlpeKzDwn3afvwNXCVTU14aFvlIlqQyg/LNNYpV2T7Tma+XGreEX6OjS/PDNM0rqq4l3JtBfM9ZQPZqO0arR54ENZg2t+YOCCx+zCi7fo5nWonyy2xtW0SCjV6tU4n7r8mXjschgpfbpBrY4R9VryIdvx4Y3OHw9+PEkbT8jJlCWPS+xtMHW7lEogGkYY8i4UUXMvB5sX7TcLAqujG9tyquJCk30GGj/ZGCUFL60jFWacmwem4jVDand0kt+fViP8SUXGwXOfZskWnkW+HKrha5U743B6hZQATqETPSmy213GebYMXTPvlrAn8ORWw4KemM1bCfdX420CQLtdkf4JkpkqndZ25D/dSdbCHfS6uwfRGyZ38kQOpIEGK7+EOWPD2U5wZ6sIhO3T6CNZq31sPX6bBMqjFo6B8q5CiLHBthspkY6Yd2/u9yx+4bzIxbHfRIlJ0wwqhPgZO1dJSuqeYCd2/+MCKy79UBQTw0qGtuwf0/dKd2InjT6ai7WRwcq10mfSQ6vSxxNRvfW7vwXbQM592VktlDeauugP939UeJMKhkXBnnZAerXom13esK5Y8E0yvV1Do5ZSrglX3BZYprtw/uAruc2o9SUAbesNgUd2h6jZa0F5giixzHIKfsXyAGS3T5iHZ1eNuu/9YlKAHllFnVMM8z7ovJiJ6hrexX4PTgBSi9Hhokb8yEm8/lBShOGGT9VXPsqvOfPI6ZTmQhVsxh9UOgBqYwNpfASlSo/ZufJ+7weFERYffOptgg/8ucyO4vusY4lwItAO8WkE9ey9rVfCa3L6gGoJ70mg/a7FalDQhB6W7Q9RLBUxojrOSchl+QtNO8JxNXaMYuJ97/SxxoMuFnUJ9FF6F3q5+nimSv6R3bquzHcwwmPCJTN5ijIT0g+v3m7r2rm4zUOpL7ab6hv7w1Wyu71DXRkMYqc+1MxT81hnvy2F/2jCnemUlUltxLIXKQlmiYMny4ZP4MRhYTTtEPr0xYtSCU3AUEwWHZ5soi9akrT3/96afFFluYxAmgji9c+5mZgBCKfETMnjOiQ9sz9wktdJXeFRR7h5qU4POr0ie6CLF58LZVWJE84GbMy79T0hiwqvldCuMQ7kzaUUNHcBGcTsbA3WRRmQpffQoXLG9K2A1JBMnlZG01/HOLq5fRTmWeompiPYwPSPiny3YZO5cht1QgAHIbeDvuuGdvbxk15fW1Fldrh7KlDOKwEbeqswpkiYzbBaK8cpDuMkJZ6y4tV4TK4yOo4B6cjj6pJVoOWq8TxK9q","layer_level":2},{"id":"c2b4e646-b28a-4128-948b-c2dce54cd5f4","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Fetch Messages With Links","description":"fetch-messages-with-links","prompt":"Develop detailed content for the fetchMessagesWithLinks function. Explain how this function identifies and extracts URLs from message text using a case-insensitive regex pattern matching HTTP and HTTPS links. Document the SQL WHERE clause condition `text ~* 'https?://'` that pre-filters messages containing links for efficiency. Describe the two-phase data processing: first retrieving candidate messages from the database, then applying JavaScript regex matching to extract individual URLs from each message. Detail the returned structure that includes timestamp, author label, original text, and array of links. Explain the use of a configurable LIMIT (default 500) to control result size for performance. Provide examples of how this function supports link analysis features in the analytics dashboard. Address potential edge cases in URL parsing and limitations of the current regex pattern.","parent_id":"d462a166-b222-49be-b685-56af271d085c","order":2,"progress_status":"completed","dependent_files":"lib/queries.ts","gmt_create":"2025-10-11T18:39:19.816967-03:00","gmt_modified":"2025-10-11T19:00:11.676363-03:00","raw_data":"WikiEncrypted:7J2Z02irw7WK4JWclzBtguHmYcRCB85nwtTM2A3rssjCIFAHp3ViPbne0mTE8bsTUG9m70OZjPR+Hs3E+3l7AIc9WImzwXlA6DIRireiG77TwLO0XE2wcd2BnCR8hzS9lDinPWDKZUMRproeqynxD0fDs64RXTs+JEql8aAwtruBpz41EjIiYg1cmgh3RLMpsDlJzeerBtV7PpxGsUz0qc9KqGRyMMP5m5Npqe4rnug9KRF9qG+km9IWQYyITgRXkl/eQbde7KADB6jMs8bdQYVsszkv/UMQn/wYgrajsOr/EcpEJiiNpQT5fD9teKok0FL0JJRLkIPFOUId/wHs1nhE5f4CrMGxO8nKQujcwlSqeFv0+eBTh6Hu+NHxumLJ60BLXYsjvHIJW2RxjUXYUDTOY9Uu9IJKyk+OGgMvrTefCw7odxZnY3G0HhddCVdo4qBNvnzyEhJHzxx1/+9cL9KaqCkLgZRMIqT8aCIkYEfcZimYaNdrhGBuvs+NniKYwjorsRzHrXeL3T+oPqRB0no7sBHFHVVaOZsaQzLO860YyKUlBGuoRIElOAVQm3NoYP7/O3pm/AIe9V/2AesNfT3yfT4llrqBNQfFImQabAQow+W+KKEJFsuWFU5OZrggGtxHEpq8aoEi7jqLbOZwKi2GEXhZjhsiuhqv2+0J0vM0dYh93i53IM/cXYm3lGKgGvfuw/O0gqrfKGyioE1qW8heLnFLv2vZxvC+po2zMo5dHECmVzX6c+cJczNbD+arCo/Ku0cg3Abe5JmjnIrWzICXNaog5MJ1lnmpoAaSLmzdx6bYQJC7DvktvwhsOy2rM9E+IKMa11WZY07vTupfNotSh3v5RblCpdYsF071/tVJwV/5731Hd2S4yB3jFoCS8nYwvoi/zsNioDgJtaIbivAhxOR1vmUAX6+ACUqchPWPRzsga+FFqEVNj2/WsDiom8jIN5B49WxXFWWHUfFtDJwkwN3Jj7LZspS/Q0z9h/wyEnGRdnS0yZZ9OSDLR/1nUl4O3mlPKVIcnOTnWxSqT7tMobElRMSoko1UHpaf4e+/JaUwyCqhW3AcdPrqzR9bqSDshzI/Gznb5CHAb/UHCBvUUOmBsHb/mwQPSSBTaHsI+vIrowJN9iQXtV28HfGUCB4tNZzupw/Jn0bvU159rSMa5C1IFuna6D7D3f9X4oCw2acqZa3kI//TZc+0b2u7KQrj+WV+B1YeGVqieVcKLUTk6JFa5Kg15fEai5lcbASmt9j/Fh7K+M/6EOUPkovZWDWp53u6yk3i66/QL4sD+sxK/BdcmLHIoKlYRq+QrSPwF+u3oiLyjQIkGmUTgvHO6A9Ec0JAOnPhZAD40lk1PbhAw8laEItjLsAofE3e3TPrDzUydzRZTC8gZuSd4TDmtsfj7UeNsoHgLikHlXHJ0eKU+svABlmZCVjCS37nOpWkG77It9Ug5TBNX75WnEVop3knIvutMcb0Dm1EBAZv5CXl8lNxEIKYRQX6AIlQjXg=","layer_level":3},{"id":"895a53b1-ca44-4572-95ee-f4d72fb94bb0","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Report Preview","description":"report-api-preview","prompt":"Create API documentation for the /api/report/preview endpoint in the tg-ai-vibecoders-summary application. Document the GET method that returns a lightweight preview of the report data without full AI processing, using the same query parameters (date, chat_id, thread_id, days). Explain its purpose: to provide immediate feedback to users before triggering resource-intensive AI generation. Detail the response structure, which includes the base report metadata (date, chatId, metrics) and raw message count from fetchOverview, but excludes AI-generated content (summary, insights, themes). Describe how this enables frontend components to display loading states and estimated processing time. Include usage patterns with the summary-generator component and error handling for data retrieval failures. Highlight performance benefits and user experience improvements.","parent_id":"7d1ce1e9-8164-4429-ab2c-f9b899be913a","order":2,"progress_status":"completed","dependent_files":"app/api/report/[kind]/route.ts,lib/report.ts","gmt_create":"2025-10-11T18:39:39.124781-03:00","gmt_modified":"2025-10-11T19:00:25.69172-03:00","raw_data":"WikiEncrypted:ncgUburcUGIQoFYRn+jCflVznFCoW66154/JjP5Vv4Cijee89Zi0NidyJWov4oE65MxkmTUtQ6YAZEK9zmk3yvxtXA38geGUsK8rlxnUsA3tVs7jdgoDJyxOwnY+LUxv56H9u5IJtIgzIQ7It5j4RyNagjfx1+XkjNLiPaIMNTo7UsxwRt4yu0eolYKGBlvYKJfE9TEjNwd6xtsxk7REkOd6QiTnzTtJGDFd8AJrgg+11WZOKzeMx3jgW4WVoCjFZATr3SSEax+MKdPnkMjBxfBNi5pSxmU8VqnWZODR2CGy7o3O7XzE17+c2WfEz7UoDNfZonDnM1WO0SJtOLVyv9k0n9uagYRoYplQLozndSXbUTFshp9AQyjJxh7+NUV4A/8T4ZZqIO1dqd/jfRZt0JU3Ag3hekGg/axdDlTHKPXxelWCNuwRRZDFpyaQFmtoj2WMvr6vCxdNvHRsvhHroKLkhgHdjIODQEu69hJ/63c61O/ttMD02ADEm7NFkcC001c+qzoZMFvrokzooWE78y38rdE/cPq0anKp8uFQz8HsuhbRtILGN2qUsH/KXA9Zb0MaQ/99CXnJ6Ntf/pFPY9RDKEPD1dnyPC/Wo97P0u4JdUYPCufbK0oEF7pClHG6WnNfMz7ceInL5GlSw68WEjHhSgEtkMiz4iKIlfp6ZyvuBghIf3FE/dFF/adTr/KLccrZsudxHkgbox6FXeRZjLEIZwNoAtgfCdrZsiBC8ACURbZ/t1LWtyGicjHC3PAbT897P/9thBy3c3WNpfUhegx1WFg6W/yEAdO5RrE9i8QkOBiuid6k7JHSsPLkvjfx8ElLBHDhWPxwnhda7GL4aUs+8sXGbGA4a7Wmf20xPC1hAJitjLxfHRjizxAiJksDyANkyolopkrXJc29ANjLDOvUhxvLv+UVCjvU1GeOt6YOIOvTw3chp/G194VImQ+X/U5kW15xy++NfXt6AwBfPpdaivuV/Cwf944VfN3zfd044aZuifh3aU3IQ7VIHIEhm6ph4lWeGmyjs8z3HBlEUbZkG9e99BSw0J2BmxwPy1KaI86yGUL97uGcSqOciNkXmnMtBZ9XmV+cYMCdUG8A7hJAE2vN2YpjEwYbby8iejygdDfWukRE86isrWjzFUeiqN/+BjuwZMFnGRGs7qXaYfQe5Ssg1eeX3SjuasHx//eLmZI96sijqbV8Zg/Msx9HCn1fYXLcHxfu82yvAv8LrnWXrp4RxdZd4STOK9a2YwbKtnzltvrt76k919eCq35XGxsui1BN4A/25jhQjaBiiwmFMDxmpxgwCLw6/rYsoUKkIurYzhQHgavEujhWbcbm7DJgA/A3XvFUKvqOKqQSb/UJhM3ALBp6iP6INUDJ/LDwYCrlwXc+Pl90Cj+DRWM3W0CRVtR9vAi5VTpjF7PSUpRtOVeOiTJ+fO1+ME3kobnC4u6V29LlIHhk8uizMIAoSbTSa2v3nj7VCbumVGQnp8mRcYZVkfX6KfQPywJzaFCMW29vi8M1BhNwF+2u0gHU","layer_level":3},{"id":"bb1b188c-de4b-4c36-b02d-bb8198e4604d","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Creative Persona Analysis","description":"ai-persona-creative","prompt":"Develop detailed content for the creative persona analysis feature in the AI report generation system. Explain how the creative director persona generates viral content concepts, innovative formats, and trend opportunities based on chat activity. Document the specific structure of the creativeReportSchema including creative_temperature (50-300 characters), viral_concepts (4-7 items), content_formats (3-6 items), and trend_opportunities (3-5 items). Include examples from the code showing how getPersonaPrompt('creative') constructs a system prompt that emphasizes creativity and virality. Detail the special handling of creative_temperature field including the truncation logic when responses exceed 300 characters. Explain how this persona helps content creators develop engaging material and how the suggestions can be operationalized into actual content calendars.","parent_id":"374a319d-39dc-4f05-9312-344b401fdadc","order":2,"progress_status":"completed","dependent_files":"lib/ai.ts,lib/reportSchemas.ts","gmt_create":"2025-10-11T18:39:49.688418-03:00","gmt_modified":"2025-10-11T19:00:09.335843-03:00","raw_data":"WikiEncrypted:XjbjnOzjruoAEvpn/dhFW6l7ZSBftko+tFBYT+tTEWD0jbCcIKMzgLnwOfC2j0cmQ9AOsvMFJdzEeRWYjR1pvBePrPLCuvXymbHrpYjEwox2wUlqtPCY2ysj5mwk6jwDfhHCTiPdifVdC/lp8sWtGGqSiMrmJ/g+vNlQ+RlYa79HoIhpGnfPopqe4gK0rwbXTPIiByjqhB9D/W5Z4ms4/M2yZngNPmUtfuMXZWq22pUUrf0CZYr9MNPp+vXBlovhh4pEczQjHhmRoDQpA+rMxeNEo0U7MJHpNWzlF3Nk7RldP/HTRxiDXrpkNW1Y+w9UDyGG6XyEBSlbFI7XSbHRkWLM+rJjUag5m2KRXpOLhE9s+yHD0Un0bMuxNxxMFNqmduLPPGeLxtqsmYYCLRKZEMyF9+5RKxQbqBM0QFcXmiX4K+LgLXv7HItWvWIkKjbzB6pRwXz/xSOdJV7wmhOhLbO+ibQiPXn2jk8uEaVHQv6EackzFsJbRj7xHf8L26iKfBAlF4khArf5dkwo0ctVFLL/btWX3mbMl5GTwWdzUytZJvkhgT3pFenAonmL/pVAnWLw/QLovoVX3aBbwFDvSu8AoujEE3sKxvp/ehcXQbV4l71T6MXsOQExO0O7HB5pC4IpwK1POQ0qwJZ/wuZk+8IYDVxp3Cwb4sx89U9kSEstY29WT/618mM2L1I4HaEqB8kp9cWB+dDIhWij9kHGkX/5ZXnGRgnrPTR6UCzW+BW5VmthkvikbiGvC4rEbHj5X3E5HdCn0vDsL7X1RBigV5GL3+81iPpVwtZCcJmk1JdM0PGvVYQUmOLf75nw02Ckpbr35h8Y/IVmiRrcKPdBUqzZnwz6wAp0R+yqFQ1Jy0GNIN0j3o1L+HGP0gpzOlqt/ZTyg0iguqGlG3khXYA7h2MW1+o3cyJ9fmVvy0BFkd5EmO4LSlFkOP4didKpAB3ePgCgFwsSJNlW/uv6Ig6m+SA3rInzZMddyJM2eKGbwbc7iYdJhgGVFU2O7QTVC6WoKSk5McaQh5r9AEsEhxgNlEajHMBpwEDh2RRl+jhi7xBgkh9obzdSh/lS5916DY0g6SICgVI2jSrR5Gq7ECTBeg+6fgtNZ5hiyzQga6EDquNVC4xhcJfSxcRbbgcIfAX6V/85E53r55UW/llgh6ljWEb1Zu+HIJAdK8zqdFUZgKtNaRLoqIfueRrB84D9TGnPwOBlRAi2yQWAgtRX0WpyLsYmfucG48TmLddpfF8RFF5Z9kbO0LoQ5sz4a4KKtP9NLsKsBdKRVr4n/XN/gyDnlGuDRqcn0oGVQtCvWbPLWqu6qLHN0yqbxVyL0yNEZJvPSvcqSNXntdGGNZ9qWAcw4A+kBEBv8FZb/9c4IjTaS5z5bUqKPWhfevCi4SEDilb3Y+pTRWSltjdU0PCGgWafRmwA7P6eEMeXl4xXr3WDURKBC3F3NckNQyb59Grn4KWYw03ca4EAdWROH1nIyN3Z9T/H2hvUFPbbuCW9dAZmuUaJGmRLpfYIuu/u9A5VlRTp8j9f4IZSjyAg7P/NR4XVJQ==","layer_level":3},{"id":"4b11e8bb-04fe-4d5b-bf5f-dfd8fa2b4019","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Frontend Architecture","description":"frontend-architecture","prompt":"Create architectural documentation for the frontend component of the tg-ai-vibecoders-summary application. Describe the high-level design using Next.js App Router with Server Components for data fetching and Client Components for interactive features. Document the component hierarchy starting from layout.tsx through page.tsx and week/page.tsx to the reusable components in the components directory. Explain the architectural patterns including the separation between Server and Client Components, and the data flow from API routes to UI components. Include infrastructure requirements for server-side rendering and client-side interactivity. Address cross-cutting concerns like responsive design, accessibility, and performance optimization. Document the technology stack including React 19 RC and CSS styling approach. Provide system context diagrams showing component relationships and data flow. Explain the Russian-language interface implementation and mobile optimization strategies.","order":3,"progress_status":"completed","dependent_files":"app/page.tsx,app/week/page.tsx,app/layout.tsx,components/","gmt_create":"2025-10-11T18:38:14.78357-03:00","gmt_modified":"2025-10-11T19:03:28.551316-03:00","raw_data":"WikiEncrypted:rJ/rIw0gVau8jPGqKFBAsMR2XDSFypkKHZQ6YBOgiECOtpjxeTIDctgQDypcHXj7kWhM29lH4ncuB1WibpCOXkrAesZfcY5g3zI8bvApqqbaibPBZsoE4GCSnReH8NSWcV6iTzlCwBiHDqKZc6Pz4FDN6S5uAuE9nvVPM0gLLiNylnewP9sDzxeY0xRAWMDJePYvacFVXkU9Zkv1SKdhztKjKE/vRkHCoGdRa9PCe2MaB0N1ascdvH0Ca8IsLPjY0PEW6K/9T+b0Z0Asswa4asTH9NcZIuuNaJ+psS5kzBdOK+qDwhz/Bo2Z3AKEvRH0iJniP5gG1+wD2N3kcCTbBj4T2pxPFrwGACYU0tNNodnuSDctiHgCDA3xJx+Uw65Vp1m+2fz5w8I/SsVawVN6/dsfPvFJZQfYRrxI17bfcBFHjsA+o3KLmRtBhqOaqgqA0bkaKf/YxQ7oWgg1wH0TEXqIzVX9hFemEtac4bcVKtaNxIvOwBCbSNPjj1oNlvdMqlCmOehtY1cxB6eqWg76Dk7mbPyKsUMNIxH+l/2uEzUvyzGFJCuD5+wSsjBSOl1Jg/pcsC9O3EoRpAgQElX0EFxJXfQ1fMe0PgrhnDWOIy/9njJIgdr9OWYA/TWA9FPMi4aaFpSQD4hpt26Af4ST57blpSjstDxcDTY6sQ5ELkL8j2o0weypxyNwldAr0GiLArWGOcIM9xg6bCZ8XpuLPZfu1bUf+EPjyH9e7ZRWFI+0aAoftq7CLzRzqMy+RJDaBTMBimR2WtDwR/JRT1hYcSLVtwnT4Y3KY1/I2DvkKpuaWZrgxCGXZB8pX2dEO1Edb5gTUCJiLt8Vz+sQPKI9nvKnnMd7Q8cTi6zFWqLcfKyxPszUSJWS+Kgb5GTzq8v/mLVCcfYBpI7qW2oyZk8l1LlKaM1B6GA9yPiLb7MdGlDFESzDfMeQ+SZuOHJQjCarcn8G3zxT3dtgIhZ26YmJ60uyQn5zUm4xOpERprztfiRWRTp1VccIPgGn2iDhw/gxScFaoImLEEV37KvipljYdpgHlaHLAS+mGIUn5UXZfyQr2yCMMJzObT9Sg6ZE1p3LAU6JMHWJbKj8csaB0utZRV00zxQ1ahFEisFUKMO/NEalT5b5y7ZlrohnO7mc6u3wU+RYLl/h2nVu03MrjBryEfsLnGRmbpfaMJcYbViyVZQTgteU3kHLmSMhJIWG3uD6rKracw6tbz/hL5HdPK8Gpl8FYDNX1fy3EKbhqjNjM9paKkkUFJDjwK1yW942AIt04FbPI2aaXEjTwB5I+DNJiP5aCgAzQgjy7mFX1+S4Kw9T6eLPMwdbAgb07Zqis3lsHKDD1liuVi5lYtEaxEgeaaYT2lIB1Hscx+eBn0Dee6UBgUCD9xjLZfgCqqR6dwmZRkXrAS/9IheTfdrxY5YAq+Dnxc4m3rcn5Y712VbEIZzGPx4AqXHyRPKLKbfTaVllgISAuFqOpB3L5DXRMQzzO1o9PTrsP1d7husnL+t58EZmhZwvUTkBpejY3jImwI8pagP8xBQkPsspZFkxlA2U+CbIJKhBtus5Y6UKxnQ9PU9vlqVoq/DbjtphNuu7fvbhZ549l0f6Zm+ot/XeKfI25c8MfvqB18t0W1331EksSd8y/7TkZZ4rblvEGDAoltC0MAcQsMPadTbtG9filpI8mVPv/Ql0eS1cHrxYpR0SmOZjWBhweCG12kkZvGl+DoSV+FhtGkbqTXpz30h7IzRCp8cBpvKl72rDxGQrcV5Ilmb/S8uJMpe1pvuvLN7YPj14ycLS0Cyv5Dx2Jst/XBbAsg=="},{"id":"db0ae65b-dd38-49da-9d7b-abeadc409de9","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Connection Management","description":"connection-management","prompt":"Develop detailed content for the connection management system in the data access layer. Explain the global Pool instance implementation using pg library with singleton pattern through global.__pgPool variable. Document the getPool function's responsibility in initializing the connection pool only once and validating the required DATABASE_URL environment variable. Describe the connection pooling configuration with max 5 concurrent clients and its impact on application scalability. Detail the withConnection utility function that provides a safe interface for executing database operations with proper error handling. Address the security consideration of requiring DATABASE_URL and the implications of connection pooling in serverless environments. Include best practices for graceful shutdown and connection cleanup that are currently missing from the implementation.","parent_id":"fe6999b2-9acf-408f-991e-bc78d67b5960","order":3,"progress_status":"completed","dependent_files":"lib/db.ts","gmt_create":"2025-10-11T18:39:03.181146-03:00","gmt_modified":"2025-10-11T18:55:58.697119-03:00","raw_data":"WikiEncrypted:k1fKnz3ioW1yTq9x1Tu5AM4zYpphnptIvi2IIEI7rjpLyropqzNt7w2a7ZQouVg4xWmGGKEHJZZ05ZYSqW5HANxJEVa+ptJxKaG4a3JTSnCdN5X30zQG//5qynVwmFhIrAoypKO4LlXN3UIhy/p7+xwbDRZCxtb/Q1dXePdG9+3rHIrb+MkuDuSFS9Zq1zeubhmBu25E5izZiBv7wj2qW/dvNzTrkPeJaw+qpGppOo1e+jKq0yborqxbZqRAw1yL3xpL3tfErf8SHnJT3MAkwmG/Z4MiCQ707eKkimYD9If5QGmKUoc67II2XqnLQWKULK15sqDNmt89P8IK2dDA5LUKOtaPnmznCSxQUOLQ8CDHdbK5DaR9Ct7DYyb6rUWl2CDELhSk6Xk2oE7UigfPsNKRiRda2fxqJHImrGanCxfXnHyrdipRbCWSiQxnmG2xfOTbgAY9sDaLqkxCstm1vUvkacD8MMgYxMhxKNDRfr9ifQFOmlLyJjNdQrbAoPxxeJk9vHVhfD3VbyrVv8nXyBO7/BLRde6m/nmNrX3cyABfS3W8Vyq8kJ0DlPSX4X8zb7y5o9HUVXPKxh3ArFKdZ2eH6kXpQz9LWJ++XASV3zqC4csA9fRfTUOnTQ1/NfQUcVwfBVnLbjfwfkN0s5WweygPegKAwn/J9JRVJvugTcHF0l+LPAlv95uGXUi2WHswfbfX2TKP9mbSKLu+M5dwBdnmSr3CzEfrjdJvecC/LUlnap+k4HdW702S0F0QDvW3j29FgPY2pElUu0hVjcJVDANortfie5HYeH3RHvEssfiWccV80gv8cMJDnQBBLGXSgopK+Vf/tpka3Lw7WQoxY+9af/KO8C8fmRsB4If16MGOxzl1DZC/XqmOFnzfVt6L8G4O1tAY/dSzPzr9xoz8sw7cZ7+opl+ggIRm6sT2iTysa/FaPioT/lEgkFU/bHC7IyDNw28dDdV+nDzip7I4TcgZnuoMHrlpWZfxaaE2bft6dWSFk7vi8AmWjAoU10PSLkjQK5NLyJLALNGJLKiVkoc2YSK4PK3wUBqpxF1axpevPnf0UX54W+ODb8Ar8fWqy0qQnl4mtzjL1lXHf8H9GdNHzwbrmmT7A+7DROYVziEu3KIcjuMGTghXOx1X/8RB7flgnjRtX9MRG/r9sAq3PAO9BB/qHCcaUVPz3L3oi+niBmeaedkABX62N2CbYUQut+Vn48sO/kJnEgrX4vx2680ftmyudxiDuNRimV1iYGHb5zkcw3eNsWeKEg4nnYjahF+XvKFi1T7Er+tojxuzHhfme4TC/l6M7EVWlxxV21kCoy2vUxnByYfiHaIzhBv0Cv904B8UPLtTrwGcaUd2rURKJA1dNY0F0rT8QSPFy81tLpdPRDrelQ6UoyLLm9rMXvXMIrwpgZikbBbx93q1numf+UsCa1SQ59y4bAQEImBBM2eEIXEAcoV08S7wZv/i2zvcBQf7G7C7Y4cOIW/Ja3sLujGtbkWBBYNcIBO6dts=","layer_level":2},{"id":"655313a0-3d83-4377-94e4-37cbf4928734","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Topics API","description":"topics-api","prompt":"Create API documentation for the /api/topics endpoint in the tg-ai-vibecoders-summary application. Document the GET method, query parameters (chat_id, days), and response schema (ForumTopic array) with threadId, topicName, messageCount, and lastMessageAt. Explain how fetchForumTopics queries the database to identify active discussion threads by message_thread_id, extracting the first message as topic name. Detail the 50-topic limit and error handling for missing database columns. Describe integration with the ForumTopics component, including loading states and navigation behavior when topics are clicked. Include usage examples for filtering by chat and time window, and explain how this API enables thread-based analysis in the dashboard.","parent_id":"705c16ec-9f49-4e95-8bde-64291654b9fd","order":3,"progress_status":"completed","dependent_files":"app/api/topics/route.ts,lib/queries.ts,components/forum-topics.tsx","gmt_create":"2025-10-11T18:39:04.003945-03:00","gmt_modified":"2025-10-11T18:56:42.809893-03:00","raw_data":"WikiEncrypted:PTv3TTZha2StdLtrNVymn6n0yL438sLe+PYDaShyOaQeUM6Rh5oQZnaPHgwGhKkFzrdC7ilqiAcThNFftqUoyWpybbdC4UXUkKfLXAIE0pHCQ8GcuZEgcncdNkXXO0+YElbFeEDMsV3CwdMBWgx44SK1WsOQ0gFz0j91UGifX/LzHS4KVPqzePGl3gwDXu6GPbf1FGyyOrdn496Zbxg57kuLiHaUt1wMaNUeGaFzvmO0PemMFtjFN5b6L8pIQQty4/lLuJ2hRWFs3eLodTIZpJGazpoRMxVBcAQo+qyglv3i1/RK4iJpuikB54c6XtoG+nN9fJo29dvu6b408lwQzo1ikPHOmd+DQO4Gwila4LvVG4BtRf6bTjdBTT8PI7c5AmuM+CFnbTbOxm7GLfysVC6hdsZZXrXq8LL+chR5qT4CDcEJUvjLYeWlsbV1hz5ebYbuSn3mkmQ/xVumff/bzcndZisj9Zwi5pfEouP+0Ze8Y/KPP4A0pmndZ//+lcmafTeJRYHSJGqbD2EIvRlDT2oqoRfNzuDVZ97ZiyAiV9XXyGsMMt95TPJ19lulaP2uZHualKc1vahLd5uvaR2Zqhi4BU6UVOy+WbQqx41gfAEqVdSp2d1gu9XA75O61im6Xq9N58DleRUEvVfMIGmBnbZIgtJmzdTWxfYUSGmCG+RPVeSLcyONGFYRshgKnJ3YA4iF9OMep9+LU6TJGb0amZvJRknEsM4ZGSPRuVVo4TMwDDIEIyJZ7PGG0a7PDjI/MeoODJ167B/q6GYvjL4X+lhXRVDDdahbt9car3qJyWoLiWk31UYTNLVez6DnoWRkvci7obM5cjuZCP8HnQuafjUsZNvHjw0Hozb1SZH0cOgiBmtke9lOhfLSGP7PL74/cCVpM8Cvvs1az78TF2RXjBv3hhUqk86waNi49YZ+V5FIO1+RVFHg+hLTqyOS7wiCdFa4GnVZHHHLZwHCPZwphF+Zo2NpXhw1z+TCpfbSOxw/33WZn1F/xgHMgL8N8xL71kjk0fDAW4RaiQgMzLhdEkIOTs0DpqCUMZj+6CLoi1BeYZx2FE7kIDjoOZK9E2CLq8I45N8a2C+652vK0+b2MXgH8YFjDi3uWG4djAbX6izsj2zGMFshlK/91MeR06ZD7n68BRx2Xzk9kBJ6usxUDjT2cTzGlOf3AZhQxJkAd1Jfo+HqKila4DrI+W339gfeoDo2+jA4iqc4jlNoDvDCzQlJs49P0M9f/Y1v/BgHh3WijflKrdvbhxg9+ilK3SYAjeAP+xonM3TbVqNJUrp7sliMI6oIm2clD7O4KEgHQfGzeaN5mS7IBlYuQOoRaxeTo4bTmGTTW9LGJDRou5jjddZ0BLoXGLQfSDzjhuDPozo=","layer_level":2},{"id":"3e8e9061-ed53-4159-a040-0a4541a4b450","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Forum Topics","description":"forum-topics","prompt":"Develop comprehensive documentation for the ForumTopics component that enables navigation between discussion threads in Telegram groups. Explain its role as a client-side interactive component for filtering dashboard content by specific conversation threads. Document the ForumTopicsProps interface with optional chatId, currentThreadId, and days parameters. Describe the use of React hooks (useState, useEffect) for managing loading states, error handling, and data fetching from the /api/topics endpoint. Detail the component's lifecycle: automatic data loading on mount or parameter changes, API request construction with URLSearchParams, and response handling. Explain the UI elements including dynamic button generation for each topic with active state indication, and the handleTopicClick navigation logic using Next.js router. Address error states, loading indicators, and empty state handling. Provide examples of integration with the main dashboard pages and URL parameter management.","parent_id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","order":3,"progress_status":"completed","dependent_files":"components/forum-topics.tsx,lib/types.ts,app/api/topics/route.ts","gmt_create":"2025-10-11T18:39:16.164304-03:00","gmt_modified":"2025-10-11T18:56:49.909404-03:00","raw_data":"WikiEncrypted:3vc79e0j9rMxBUkunUPNO83ICxRwQVg9Vz0jTOdVqwNayTxxtVRTvkeO4xcxHdAQrCAnwVV7p+4DsDsrfdtCO8y3O7+ssuGQnjgibTSNjDiGSgH7DUop1lMxTRawF2WiTpZPGJMD0rrWASg8xdsfoijDUm6hqpDOvI1vclCIVcwh2SxM2xuKhy1RHLmK8l9psXpim1z14uez5DCmnWaqE7UErAk07X5RLdM72t/ZPgpyfZGNBGSwvse3ts0vxOJ+fI90eH0nnmo0ZDqKBssSrlPW54QPf4RMJ1dXmXJXkrDUR2HcUp2opQB+iey7bdkBV9C5tyiLnH58LZHJo9BMmGQQ3Ags/ZVLFyUYAnK0jGtgKKTInEtqVRmQ32ANiR0yy+9Leyy0kkzGVgblO2V6XnS7cv6UWXwRq+XlPc7BqoIoE6hagnW/dFRDfM8BBe8TbBZ38NgDANAUqbFr+7pFVv/JqKNasB9xcfOgWDnDcNExxFPrI7XWNRle21kq8hLij0dLDJ1nlLfoowl/8+6uR8W2sWgcgy0+W9zl11VfRgG6t27ROEUZQXI4gGcqHvR9Pey9ORVtXz8HQKIiRdiEq1gAqZr8WNMTbSDSeFxHLz+zN5fx3Vc3rPD9XbMIZP3HpWXlxc/XT6U9beC2uZlqpJDhIpI58+B9UZJ8zwuq3hQE9Ih5n0fZjaVe59IjvUXqUtgdlVPfhLeXaSoD64pKs+R76uEjDskY2XOBlxaoPRaTCLJbFAHT6FImTJeztYmsX4LkkUMk0t5ftBu7ahExZkOC2T/qQcfYqSnu4O6PVksw6tAwVvrHbWb1H9Rfml8TuqeJocsy70L16EX7JxfOhOZRrDhKvL5CRGJgzCRV2t271f8qA8au20Dy/vLJsK1cCcDbeI6o5cf0WO9SK5mS93bbEqOpcTDmAph78Lh68mren2uFNmLE23TZTJan0IdZ/g0FK4/dJB6AR8xho/LlY7WhesRCP6PuM7HApFGw8eMLQD2aOI6hwnLCjF9DYAWnyx3usvDjPW27cfHL3mSNgqrHPeSncUKN2bGWJAI9fn9ppmjXG3bjYKQr03r38uTybLohEWTIuEhymrcy9ObjgSVYf8BxWMgftZGlul/zHzybXcoGndWkEYwO97b5cK26KSI9zCAdNFiuvbgXU4sRVfR1c8cgfN6mefXrc+GdsCsvxOO0UWfD6EffOXplzcepw0USwQuVlWPN0PB4/rtb3q5MGf1a8YFMC+FTiJ78zQ0xg5ScqAzna7Cd870sunNttKp2MoLfe3OaIE843jJXuqSzyUO4kSwSbL+rxayPOxdyVjX54f5vZDZrEHAZO9eVXecO+456KyfWc65J46wull+uN0CUE2MolsWWOmXLOEjHYwMDDMQBz6ymqR6oXyMxbclDC5KzQkFgqsvlh60ZUlHG/ZqIzZ5IGjNAyb83i840X+206HkWC63qLiBnKraDDMWNzbbrFC0goqBpoAVNKrzJjyqZ4T21fvH2fMsl5Ibpqr0GHdZUbQ6W3WDPVXeI92GIysdDE+HgB1XQBpPbx7lzmndAX+8y8coSeIPx4YCMGMXFaP7e1LLl+be3fXKuPZpJlPqcgTMZ0EevHidulItwNIzJLaErkBorwbVBNTGZFgpJxu6o+CU2Z/75k/q/oeazaz80t02ykHh83u1NhRQ4dW18reXuNojc827IXVIoUmd4XMQPxpcNF4UL9cDv","layer_level":2},{"id":"9a5067ed-b95f-45ff-b75f-e1f1c44b1904","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Daily Summary Report","description":"ai-persona-daily-summary","prompt":"Develop detailed content for the daily summary report feature in the AI report generation system. Explain how the daily-summary persona creates comprehensive reports with link analysis and time-based event tracking. Document the complex structure of the dailySummaryReportSchema with 8 required sections: day_overview, key_events, participant_highlights, shared_links, link_summary, discussion_topics, daily_metrics, and next_day_forecast. Include examples from the code showing how buildLinkPrompt constructs the user prompt with link data and how the system analyzes shared resources. Detail the link categorization system and metrics interpretation. Explain how this report provides the most detailed analysis with specific timestamps and resource tracking, making it ideal for community managers who need granular insights into daily activity.","parent_id":"374a319d-39dc-4f05-9312-344b401fdadc","order":3,"progress_status":"completed","dependent_files":"lib/ai.ts,lib/reportSchemas.ts","gmt_create":"2025-10-11T18:39:49.689146-03:00","gmt_modified":"2025-10-11T19:01:47.948165-03:00","raw_data":"WikiEncrypted:XjbjnOzjruoAEvpn/dhFW87sOGP/3kTjVEp76Dct4RjybcbKw2nRKLHfls8o7xrINXJKS6kaRO4mfxTZZNdoAjFDyDSynmB5z2sntszZV5kfhOx2xhgvIWD1P6o2TM7jfIV6Hl5Z62YBisdwEJSVCmsXp69qxtI3EaEB4HuT6flS6X2TO+yPrp84zncegGqLD037Mbn5mHoR3Uv29McODLgdtiSOCry7DAJNAb3TECzYblRHevgp9TpUoy4NiXd0x3zmNsCijSb910GEjpDlBsx6kmNwZOoAlBzetuiz5Ff7VkCdylHSINfmXVODNeKd31UnBYBCdnMRd2Vig6lF6cafeZYSFdPUPZoO5OgCXTmFhyT58O2PSb6FkKSxmWG66IWG9EUQ1syoM7qyDiRvwGtYA5VejgxZk/sisPTKiHXUqc/Wv1T0FV6RxLjvYivNJzGNVX014IV2dweO9BRTf8A5LV/Nc5bxvdlLjHL1KraFnem7QScGi3z1JhZdQFMFl7qPY9G0lCVlkO1XqfH6v6e24HWi17wBfCm0dHdUo1aXrBEWc82TNcounyP0qWcGlsCPaym5Dc5CaXcJWaM3N7Mi9k05PYwL7st+noEbUcGYQCsc3CulIS3mMpuCQwvx2e/jaV8YvK9hDi+29U2kSsWfK7l7e6+JEtd/GMvOwO4pclefKZbOIf4QMpp3Vyy/42haJC4ZEfk9+r1zAQ20Ekskolc9m3v3z2tXmm15+6MLFJJ1Q6CuSmr+C3vteHQmnsclVqm51tP2UNoIQ1i34UkFMu0WKCnFpE7EFEt6LWHsYdNWFRrgSeX1GPZ7k4IbkSmZmFQS4XIZ6H+hWcE3p8dN5nLKFCLFyksZlnW4nEgdIvZYYK7ConJjzv8ulrLniVmJiYj9QcZA5AwsFUQMzhSFZ1s49XywVfklvurJZFs7dSIARup3FLRvHyollKSGoM1Hi8uA/Zeby6vy/cdDWs4NGBTlG0+9TpyIIhEPaoY2G605BWEKM/ioPaf8J/A3uDFAUcUSkbgMbmY4xNLmzA/vtGqlsNYUAaluSRx4CQy63gzXxK0RTuXpJRAKjE4EYFkCqcAP4HX9tVTjK+7up+bUb1hvUeXWTejMPnX3ur38uwFOjKRCqMHQ8KK78Rvvx5b4QSWo4d9FhRkb2Px5c1byC6MlDj7ZQuOV2MYCsYvviDEK4qRO3wURjlE/hC3SoUXwUvs+1nORx9mcZkwOl33I28sJoG05B+vsRu2APswsqIvo5lIdjGCcmiLlEDTCIvsDvXhiJPYI5r3g0XXSMILW8TBJ+DZFshFupOgLBqKv+hawCjGhArSY9pqPJRLSulyY0fEZvibOp35t7Bekjd7Vcq5cGea/8nA3QnRYo8gDyG/v3R6LenUOynl75hdPSolVw8G67FkEOP0NF2wC32DnoBUS0wmaeC8AmhulXYBdl9Zy0wlNdoy+AS4cX7NA07JYlH26oy7hjCcksabmXr8gFK/2+YLX8Xb7WP3TcHSTSEN7dFZz+TxtDVdf2dSr","layer_level":3},{"id":"a14d18a3-9e0b-4a19-ab6d-4b13dbd25e00","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Backend Architecture","description":"backend-architecture","prompt":"Create architectural documentation for the backend component of the tg-ai-vibecoders-summary application. Describe the high-level design of the API routes using Next.js App Router, including the endpoints for overview data, report generation, Telegram integration, and topic retrieval. Document the architectural patterns such as RESTful API design, server-side data fetching, and request handling with query parameters (chat_id, days, date). Explain the system boundaries and component interactions between API routes, service layer (lib/report.ts), and database layer. Include infrastructure requirements for handling AI requests with timeout considerations (OPENROUTER_TIMEOUT_MS). Address cross-cutting concerns like error handling (503 when AI unavailable), rate limiting, and security considerations for API key management. Provide component breakdowns showing the relationship between different API endpoints and their respective functions. Document the query parameter patterns and response formats for each endpoint.","order":4,"progress_status":"completed","dependent_files":"app/api/overview/route.ts,app/api/report/[kind]/route.ts,app/api/send-to-telegram/route.ts,app/api/topics/route.ts","gmt_create":"2025-10-11T18:38:14.784136-03:00","gmt_modified":"2025-10-11T19:03:01.235619-03:00","raw_data":"WikiEncrypted:N3UbzwGjCC3xD6BrTM0cq8Y9ccVoDb9n1FwE8c3MNy2FQOgK1VCbEwsDvJYoUtQwj8mQ14lxcm0/1ON0LgrajrrtL/Z0a37U8aFUXdQgN1k0mSjSz+AijAR0OTzqm3xTMKASt1J1/2Bh0Q2WN07wdjvn+7vFdAvmT78J89U7emP6P2+mkxqmtzPtda87R0JxSyXpb2tgok5yIlS5Y8qahcoxiDDGQmxDk6MZQ3iJhHZBr+2YZK8L7+kjx4rSkQrWfwFhmXQIim0Czd6jpiEFU5bUUzSCQOHvxzfuD/T0i7vVYsiG4PcJVlBhr19ILBOEd45sCDnEk3R9bDSmbMV2nd1HMW2IZI6osseXuEK6Rk8CZPHKSmD8mzoDdwz23/mXh5+MVp7xajnlb4ezN3g4+7WbIHnFzosNIaaMEShYXXdrAVYefkIiFxCpe/DzrKuEni8k/vlHu9sdmkTUK15y0wFU9FTjTClhrg1qwJgNGoE/VpSna2WM4lo/Z2oxpi5S6rh/XmHnwDmVVj2NA1poreCfOPHpB4EBjNjD5OxP2oau3ZOoNck4CPuajjM2nzq9xzaj8KWTNsxtHQWaWMXHvXH/bfZ3tYgvfK/MVnKoVXZk9qwLid/5Um9VzgQ9LWHRRtrvsVU2EwKAWI9V/fxyoC8foBdxn2aSyArBLcmeMBXbSt8kwqk6T5bZnJmjbhiMkpKSUWksYfGpK3gCyOhzHY4Le3oruxmIEp26zzORhql2p8IkBSkAG6U49h2RWOOWH6oSMIOMm0bV+qmUeAsIhuDYp50syL+m2/7FC8yt2vvkUTfOPMK3MG5G/CpDXxH2tZpS+fo6BpNuOVdL79JZJylGf+UiE9n6StUMHZWTb2HIkCTWo88xivUfiRXMsvuxjyMus/J/3nh7CPib/wnNKwyLd+ThrIzScRcRpIN+ii6TS3Usis1y47Ysc4K+RrhTbxY0PBvgryU0IqO5NPAgTLBZHm8CTSsoQtWjVp8HT3qWysdOEMm5z4puPvT96gio2xQNWy5FXgb9twRoHqggjNsNzUxNo2dDeg3hUWXk8dkKGJHDYySIG6WWVNoO7doLn4XSlC/nQV+L5Jtp96rtwqfo+shtcveELY8OoSh9nw3ELjL+gljcziJHzCQZwMkf/BZZJMmk+an09H1ntlUWspXxVSHnhwY/iQ5ealwY15fqgaL7BkXvoBuFWD3LEae39rIZOvvZPx6hx/pA4Tj2GALW9JmsswkKcVryH2GCly6gfx76qclppyQ1Iv/rm7om3Ia+usdBPCAEZCevoxvGuNdNj9eCTaxdPKKjiWLjnRobkKnPSGVkFWau3U7srZX32TgQCNoGBGae2K/JGbQ+o2vjP6kEf9h1v4m34/gQ/QuReH0yL0flDs0/iWihn3s06Xl+eFWirI0y7Tn7/iB+Caja/mqs6BF18x5bd6dYnNvyQSTP2B6Fzj94PVReej4GJun9i2Q6ZZasYrepCONpOeKHPXG6dmHntyJCNzLfJDImT8kmLS2j3r4ZnTgWw18vJNYm+IcIGZjlGfJ8Dtw7zJRyYwh1sBn4fYA958rQVahR8NsFfcwvkRMxMSz8fOuWWboTXXnPT2f47n5ByU6UDw0p2pAxsTKPEfk5CXYKp+F+vIQjkcWVJh9JVcCsUvlT05WuiHrElsCSowmOwd7ZOGIHL73xCd28H4m1R7B6jMIvG08NiJg3V29JcYqDNeaffJcgSIF4VAoIL0pM52rRfnaTR4LhWxZHF+kE+Yb558DZjb9V07kT4v8/btsrg3eQvVZEQvj3kYRvOGH1RVzc2q1UFJllOHwaoF/KsJFa8jv8H90ZEVjtl0UEB0Q5zZ8AMHw2Qh+uZBoeENW0f0OmJkcq6XDFG2DB3jTgp+ab1Is="},{"id":"1787f244-6fb6-4170-8b25-17f214156272","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Summary Generator","description":"summary-generator","prompt":"Create detailed documentation for the SummaryGenerator component that orchestrates AI report generation and Telegram delivery. Explain its role as the primary interaction point for creating daily summaries of Telegram activity. Document the SummaryGeneratorProps interface with optional chatId and required date parameters. Describe the component's state management using useState hooks for loading states, error conditions, generated content, and Telegram delivery status. Detail the two main workflows: generateSummary function that calls /api/report/generate with proper query parameters and handles JSON responses, and sendToTelegram function that POSTs formatted content to /api/send-to-telegram. Explain the UI structure with dual action buttons, success/error notifications with styled containers, and conditional rendering of results. Provide examples of the data flow from user interaction to API communication and state updates. Address error handling strategies, loading states, and user feedback mechanisms.","parent_id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","order":4,"progress_status":"completed","dependent_files":"components/summary-generator.tsx,app/api/report/generate/route.ts,app/api/send-to-telegram/route.ts","gmt_create":"2025-10-11T18:39:16.164888-03:00","gmt_modified":"2025-10-11T18:56:49.9317-03:00","raw_data":"WikiEncrypted:c2I6ZU+FJ7DHhsRKK/IGsQg7ZaNxCmFEyBT5bp6AGqef3Lxm/JVjHXDvPHX4qWfiA5JN+RL4rbJxKKMtAUV8H+wbjRE1NOQ/2Ff6ACFRs1IOi0lseneJaFOtYmqMp9yjByQuzW3ekjCwKZYF8hj7JseFPrJuHQ8zW8p0c7iz4qF/2d8Ixx8lcjfdQMO9kvcdP97YgvHEWUs2KWkKFsDoPVsp/xL6uL5/cqMvAJFCzrtTXxhdlh+eG2GS5IdhydP1RYUY3qkNHxZIHkzHl/jj0thYUIj0UpTZGFRGIEu4fGkJKP29h1MK0LrmCHBVotAJSSYlpHTuYF1jlj86t4YdQ8WicR1KtrCaA6w3HAUaWy1XQfHetQTzH4YzOyt3dknJ3OAzG+u5DtnCvD33PnhW+WZpjVa1ibwRrpT9+4dOrcb52GQk8hU7ZYIfWeqdcSh9E/V0R4hv7Ib1YCg01dwk4RNr9SWYtn24tjRvrsEFDOvQbHmqWJary1LEhjX78L3Q5y/ntIY58EGDg+hlowJIxqW8e1dD8CJuT2qGGDGzGq435KqrFuF3SQ/G7Y49J9aqMBamZTTTBsnaPeuDcdjcV6oPptIVkbSVWCd8w7tkbElSmOJX6cO+X7OZKZHBybDqOp2aSWhTDAiCN7FqELGkSUGeAUz1nKSLBw+hfYumF+SVnC6ZEIwuTrTA/TT3Qg0VrGg8x2FFHL2QVeHNY0GAcLEgAQZ8cM5lVz8p53NyzCZxIQhZ+ejhclD++ulaHlegcsDcnzrRJweESSZpfUq6LmeFrjYUwEj//+WbG6x+gbj+DTQufGOeipBau7mfSW9DuTgCvbzWghrwztTCBnPjyZWDudPP0Nw8f6DDFrFpzwbtYsUsK2PTCRSxRdQDxHI5YO/TzyC1qdtO8gm+U9WnuR2lIU5ncbgxMzWe6mRbGtnx+iFg38BQOQnNAtx9pV7ipcGZaekiYpk5dFLl1DtMHhQdJCXCuwaMJY5+Q0LDx5qD/xfWQjxkBrttOfel/iDWerqVGCrbk1Gzo+oyfJbKF5CaB4ppVx0gVJV1CpYMY8kpFCeF3+o1BAgSwLtnHCVIMyw+oD56VRCdC6ArZAqCxp1BoYTTWL9R6hqvxiKJCIjP6yPGNbhVouaiY0pMBoyM7loovwhGfN9s7XjHLQ3mBFNhEskpgs/AMPDAdWoV1+epJYhv6HV/v/hU1V4gccq/qb6/jws1FiZy1A52r3tHtVGwfnihN/91lqnLe4wwud91yDVD5UErOadQ1jaT7ytKNWxYOEFv+2vq3qtMI9xDpruO6jbyzsFVn1kEDraRfQDB2xzucwl+DxeDUzQHEgU2KYaLyGDHkETFfD+a4iy0kz2SHUDY2XNPS/MUxtveR/XqzYs/La6KcWzOD35v8P2Oqyxtz0bLOUNs7l14qDoW6iUNGi4fALoKRn8eZUja1/bs9P+uvb0nVhpFLFE5QCzgpyOOUuoqKv91UVGvNufTLy/A7HRof0PZFqMVe2JL1Vp9QQWEtPURC9UBQQWjiFhMDOUe402xRWNqnM9ErHu4YBkQHo3SbQ0SYHal8qiDdxjGCRNrDuY8tWFAyeqZif60Hx334KMr7MRMnMEpJJFhBERvtAbaQkhtQsPcrpZlBUcmWynEIHBs35ytZIq+PeyFcL5/OAApysQ6KK2FkL6PdS66rF8L0ZTU6F3ug6rolv6XKxm9xSKXoDeigufPAw1f9KcnSgBeiNTf0mj3VEVQxwuqUoB/EYiqdH6DK0ejJk1bXVinVhHGscJDlNYmAciiw53rsk+lzsnn6TPbxUoy1g==","layer_level":2},{"id":"dc80ea17-dfd5-4ed4-81d0-ad45144285dd","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Curator Persona Analysis","description":"ai-persona-curator","prompt":"Develop detailed content for the curator persona analysis feature in the AI report generation system. Explain how the curator persona provides balanced insights about chat dynamics with a focus on practical community management. Document the standard reportSchema structure used by curator, twitter, and reddit personas with summary, themes, and insights fields. Include examples from the code showing how getPersonaPrompt('curator') creates a system prompt that encourages honest assessment of community health, including problematic behaviors. Detail how this persona serves as the default analysis mode and provides actionable recommendations for improving community engagement. Address how the curator balances constructive criticism with positive observations and how its output differs from the more specialized personas.","parent_id":"374a319d-39dc-4f05-9312-344b401fdadc","order":4,"progress_status":"completed","dependent_files":"lib/ai.ts,lib/reportSchemas.ts","gmt_create":"2025-10-11T18:39:49.6898-03:00","gmt_modified":"2025-10-11T19:01:23.423268-03:00","raw_data":"WikiEncrypted:XjbjnOzjruoAEvpn/dhFW7smgUQgS4UXySfcZC7HhL1x3LR3mkHS9YFvPB+sVvDiUfj6d37/ePtcVOucs0N64OJZ9cczhC0xAiuOHhbJK+1vWXQjn/ex32tS4KliPpMthjho2enAhoPthqZ5XM/ptgcoRsOHGkMWWEaGS0uXRxeSvTjJ1Yg/H72kRMcDDX25upkQhGYb9v5uDB81U+knjXL2Z/O3vGl3lV4yPVN2WLp9bTeX4lT628vpoVf5bKUI92sMElFeDkvYgPeEPzLb1X5NNYRsRn4VupQcMRrgqxyonw6Ff83RFNGTdBeSL351shbRuVT4OobJJlOIzq6Pb+/ixFkgJISfB00WIoepleFySK79xGp7GJhpcMRi6b7q6gfu0oMs69zrWrpTGvDJblX3YEsvUY6yMz5VPQpP9teMjdsLMKbxDaiqn9UkyypfnL+cPmF+vC51EkJ+k9eksNbpefsBz4v6MchYgXqOrm5NQaXnF6sBfZIsfFXrl5YCS8hNx4M9MG/PRDSYmrCnjZKnHUU1OyfxBcQhgbvieRu1OyWnqQ3afZqZvVVz4bcNq6KqepWFlU9mP/AzXck8W0RW/uxuKvktdBHkElz6c4skOlRxuyqyUK2f60VmcpY1bZ3nkbWVpDSHi0r3YLe3xpUEkJsNVNQjT/zmmxT6nrq4gGcCI/OwsslFCwZWQPAcdMF6/ia63u4xniit1LvK0GUt82PZMYU3GguWiO9Xub2kgXuMv8a271vbohwCw/Cl0WGMt0lnDURn81b0kH+7I+GUdsD8exTsaQnyN8zWLGC8is0f7yWmExVwuS7jx4TjzRjsz6kAnKSOj5ysPISOgTK73DZLA2jE0mSflaLIRLAhDXBYVykgGsaNm+CvNvL5tn+dFbNpk4LRBuRRDSp4PYJm72M5krVYzelXzJ685nK9xVHP488cYW0FW8p3A3VNbeFaBuoT4mcSuJ5uHt67I0Fl2Kr70NE2tgsTAgxAnYREJcYse8DwSQl6vVijY3MjNCKPPobMnSfqsQqJF0RAVhYFSGBHrXIgtfcX6v9kLSCBkAJwcGP/6oMcaLiIv2z88WbDO5uJOn0NarODQIH6z3AP9f203UAvtVNC4JZMLXJ3F9Gbku5N4Xiv9HD1UTpPfRmepr9jY3blrM7dfpzNnbsM66FQvJPO89QnIxib0BBOpU3a8hf3N+CRFQ0SCShNdwBNrTpyYmtIz8hdKC33kcmZ+JNOZbdTry1s4bAe2XcUW4DF2jFJ0+V7UUi7h4PHTT9fum55VgqTOVHIgsDFqWNSXhWWM9RyQ73OGua5JhmsW5f+fkvEkkww8oHbaDpkTFixpJgtVzYmC7XFb/w4wqJowprvOEZ71fNhpW/AY8nTh8PTV9HR5Xjmhkykmiq944hnkLRCJgeChQMf++gWX24Cxc8dzFq0mtq5Pv+187GEgP6DsLyjPtxnECqkR6Gd9IcvyKYXWRNf9sHu6yh1bw==","layer_level":3},{"id":"d5234fb2-3f55-47ab-861f-49c3096f6167","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"AI Integration","description":"ai-integration","prompt":"Create architectural documentation for the AI integration component of the tg-ai-vibecoders-summary application. Describe the high-level design of the AI system using OpenRouter API with Google Gemini 2.5 Pro for generating insights. Document the architectural patterns including the unified generateReport function, JSON schema validation with Zod, and the two-mode report generation strategy (text-based with message authors and metrics-only fallback). Explain the system boundaries between the application and OpenRouter API, including request formatting and response parsing. Include infrastructure requirements for handling AI requests with proper timeout and error handling. Address cross-cutting concerns like prompt engineering (Russian-language curator persona), response validation, and fallback strategies. Provide component breakdowns showing the relationship between ai.ts, report.ts, and reportSchemas.ts. Document the technical implementation of the 676 lines of code saved through refactoring and the deprecated wrapper functions for backward compatibility.","order":5,"progress_status":"completed","dependent_files":"lib/ai.ts,lib/report.ts,lib/reportSchemas.ts","gmt_create":"2025-10-11T18:38:14.784812-03:00","gmt_modified":"2025-10-11T19:03:15.254043-03:00","raw_data":"WikiEncrypted:cziBIEQqiXGL3msY0WwrljD7FmiTTtz2XhrrJYKSVvESyxNiH0b7fQTaHTBAYm42HdisL8+/k1i0CkvI/y88IIrsshFN+fXPWy6zZXbAQgmcqyFAtGKGrJ1rnYcoU7i6cUgSf0MxpQ9RFXZgfYGfuD2ikR6IQmzhBQjteeyI17cfOVteASbIBoOIBXx1Rc9JF2z4df0w4i1G5DMULVwneNCw/8VkFvHkTQ9eJT8k2BLPUd3ZC6Qw+l76cJyJ6vIXWRGtrKzr2sep4xw5ERCNPftTT3DfBfMdKgls1I5RDo7qZVWsUmFq7ej7guWb6j2+cD0XsLewD4yI/JFTe/xZnRTw0vEPyL7SvqkMWufKXEbEsQaN/eML9/DAXIOtDwH0H+xyAzWr4Uu46ohFcL0pNMZF3S+92ZvU3qoQ51srPtZlqdfyYJXPezgdBwfpTkC3xAVl4to4sNLc0KBkxRveliHvF1ENMBNJMiCuHxgkxSjgFMY20CDshnkgA+RLmhJcVPkO0zeK+zQdUzN8Fz+AvtYqLWiPi9Ckm1ZNjx3KySYpuoYHWDSj0lCbJRUa8rcK6ND9H1n964bm3NiSLYLMTgFwihpG2A8BYP1NuYxc+hckDTIZpZJDexGXIN3j+gtxUUyqrhgJEhHQK3psYtz/Eoa1JZyQHC/LaOdZTTUZkFmtNrg+KOCo9uZAs8l4xwUo/1npOKuYhP0EMPbGEhEO2/66JL0ui8VpSrHmQg3aSMwHZR2+iFpd9Vm8Eq/juN5bxXIqaXYNCsEp0qo0+chTnVxe3CkUpbheEGztTPjTFpipe6LyqHhbpmg18rHuJWBGFXVD83fgE9qRGdvS6aYvM21Ja+eO61UhTtcGPqDK5/gOEPoHQ2X3kkfo8xSNG74skqgfIN643Uj7hY/EfEm0B9iFuwCjrry8LDuoyodHPO/UtVxTRcFWZ+C2lTyqvauASJsXP2Zu+laM9d6jf2azis2cyctqyQgBmQxaM1C+rZD6S/weoetuzZWFUKW8vpy/VWlDCLa2bhgKACbkEzLT6gbw7m5IrxrD0y/QZcl3zahWCbMWH0jo8+RBeaOwr6kiwXKWf19PWsa8HRQNYuKuHrlgjIWVBKgGGri7IyZvZPG+A4fe3S50DbzFqcMDZwEGdFymwJ4xHdn8YDK/zxGp131s+NrNcLS1aCWlErdGD0wh1183mvmZbsUAy3TT0+Ruz8p1R5RSdV7vlnMNqfHpiwQYxyXHIsvvmqEEdNnM19/kLB1vIvBBbjtXohDSXzZG2hWgfTw+bXdXIrRSmWkNBeHUMOPn49aAxmwOj2XGA3BzMbOWbGOlS0TEAkoDoUbojeQaFSAFcgAydpXo52Z0YoI6Ka+rSN4MIjltvl2Vm56CBuAsmPaHPCTGJGkcm4LEKI2WNT51/Yl3vcSkqmLmgrMoBP7clUkg8/oPVUhWvKdIPFmX2pcLwsDp3qkWmLSNXuEH3WqTwmoSvH0UqCcTDKLNKHlhqLUOJaFuhDowmrWUwCumj6j6bCIN2Kp1HvO+6l+nmn30k3TbcfktjKHQeWY/TJtDCnxQSxIwod9MO+FFX8qppfe+j1uUyXWIP4ZnPtrUWRGo9VeVOBedhzCsckh43e2zRfz3rUrFVfUvmVOQACGqjkjcpF+0cGDb5Mq/yg1SLCMIm/RlXnVTvJLhCX9dtOai1PpW6GDInse/T59+cqKsP2BzO9/KOT1jJRxBq5jgT6bDR9sD34JTVj4d0YwvzG9THWcA8R/kgRBcpKdoo6dv9kCD7uBnTCIKaI1vce0KEA4TZ6Rd65sapic0i8Xz8ms/i10Tmh5SC2dfiFSAvYeS4/jNTl0BRuJoAWMxu7PR4q547imQIGDZS4VZi0SWl4JrGWqbreRF2HLK/AA="},{"id":"188b758f-726a-44ac-8eb2-19ce707fca29","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Multi-Style Summary Generator","description":"multi-style-summary-generator","prompt":"Develop comprehensive documentation for the MultiStyleSummaryGenerator component that enables multi-perspective AI analysis of Telegram community dynamics. Explain its advanced functionality compared to the basic SummaryGenerator, allowing generation of reports from seven distinct expert personas (daily-summary, business, psychologist, creative, curator, twitter, reddit). Document the MultiStyleSummaryGeneratorProps interface with optional chatId, threadId, and required date parameters. Describe the component's state management using a reports array that tracks individual report status for each persona, including data, loading state, and errors. Detail the generateSingleReport and generateAllReports functions that orchestrate parallel API calls to /api/report/generate with specific persona parameters. Explain the renderReportContent function that dynamically formats output based on persona type and response structure. Describe the showTelegramPreview functionality for previewing formatted messages. Address the component's complex UI with multiple report cards, persona-specific styling using color coding, and batch operation capabilities. Provide examples of integration with the AI service layer in lib/ai.ts and the specialized response schemas for different personas.","parent_id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","order":5,"progress_status":"completed","dependent_files":"components/multi-style-summary-generator.tsx,lib/ai.ts,app/api/report/generate/route.ts,app/api/send-to-telegram/route.ts","gmt_create":"2025-10-11T18:39:16.165316-03:00","gmt_modified":"2025-10-11T18:58:05.5448-03:00","raw_data":"WikiEncrypted:Zt230nV3k3ww0eU+N8tTkvSRPP8WlXyui21+ht1SnM7jKU9MwdP1GgCNtWqMtBxCt1qh77YawarXJ1zE6x6ub/wBA6xtYU1N+ha5AMNMVRggW/KoYVjuVFS+Y3uHUMInvFg/VcmOr0f7c1kvFIpbnx+Kp8es5ykuxnED7MimW4ciiBfHf5LdC3a7A/GUJr3/4GkoB3oTJfI058FzM8cqGu+6RbWP0UXJ6C47xgIi2xhQkeOwz7OjKeUNA8N1br/USRXj3t6fD6TmOXhmCgHty2SSiYO2/r+uCY8JEqgokS+jVBhZHGu2fkXGMH40NkjTYCnAyFh1qciNDLXFl+qLYopR93OvpY79na9nXF7DH3P0MnN8rO/J3LGImuZbEwOtyMFKBwbYK6z2v1WSUquqSRe1kNTofZzqjncnJCffEZzZbMBetpyEz+EUnnwottzXnRh8eOPS2zl567w6xQFVWnkaK8CkFuxgxNQhQTV1lYtl1C9LSsmqijhLLrVGKNmm6q60XM3F4F89+uDrbrySa+XuOV3MhFWKq1l5Mtn2BUzV/kD43oQvRT74sMIOREHcQMS/jfkET5r6UQKvepZsBOqV2HGf7ekUbAeOsXAjXUlohznjbXKLzPh4Od/0d7lUOYcNdgmNUGMQdrVjp6GmGLhwsW74bgKTR8GDLEIllVc749gcBxC2zypvyRSArZ8AZwOjT7HDuKy5Lx5pBVAECFJR0ZtQbvqb3AXmvMub6De5ole3YvLxJUodqm+8VcQjZ8Axe08qHqc288UK7z9zVlTcaUp2sIRzq9BwylMYb4pXgrIH9DZkuWFQyuL7zOFJQ+EHu/oLpDqZANph4wiwD+CBJVe4ovaR3QaCjaBcN/TL+WXsnQjzBtBbX/dcHpMRA7Ps6gOd4JZP5ThRFMQC8Cw2Rys5IUMplW/CnoQk8A2BODSEEDZDWdw/SOvDJgZOkWD19QIjf/zuarBSctChAtiX0MT6OkkcCDcz2aLVK1HlldgU1dPZiek2emYiU04vUkD4Voc8BtHdGE03Q6vfWrssN5Hh8e/ebNp7CgNAvOSY7p/Sv0cQDX10m/SVfAlZibJpAGelDTmAw49wmIm0Vu+gJCozBzvQWI04joXUlwtLTCveb+REIRwpX2pw3OG+KpE/z+uzh5t0sklaxsLCQAwEI2Z4NA2owSPd8CpD2Bm/NZ2K6sq5VhTVlY7t4ZgkgODDUHHN2rns+8dv8aTwDxd8arrgWsctLKxVSuC6g6vrmCZ3F4W1+hXVuOB/SYhBKXGKhK4aL6qx7hQYggyUSrr09XMaSmgPGZK686iZpaAbrQB48IkU0smNWX+za4p7IhaHuoI1M1tMemuUc/BFq25HXcMZhv3Sd7R/7eQykeEA2GM4iovwnUgcfL/2uamEt0wmiU2WT3z7jSXhoW2fDTFxNZYUWOMb+d8i5QYUxShrrl+Vm22JiR6755o4M23kFt3HVGxFWTR8R/pVflNmbR8xOHxB/BBxnqLorhEwjVqiSFPaHjNKUvxK5EvBaFkAjI8pRnhH/U1SmRL+Z7ypHtFnG3awKXhqIGIF4PGBvUWjdYzW9mcOpn+/yRgqvoH6gRGuPP8xd14B7A2acYdu77qnrwKNgfYxIGh2McxuwmovHXiKhGaH5UgYrmzI7NGZcIY1WtuuPhLx1m9A+jF/KohKU+p1y1/otj6CrinMYVf/XMsqQxzx4YfqDftrGJm3cx/fUfT8LkbWjuDLyqHzySx+N7GflUIj7qQmNvgAwfM8HnbkAJKkVSLcg5pVHHfMKiZWvADxrPMHBicyIgzdKbQIMw9JiN/NZfdVEskb2IarqBzxLRn+ALxyHdjCHmEXnmq7RKTJGCIugm1G+Kd6K9i6pnt81UfM4yVUaW5/K0pQqxbNneKOY6azyP45FAeeKsC1q0kYAy7Lp+ywjL5ttpUVehIDUt8pyzec96I9kbLgU3xfUoYilrQjFYGhtDpSz8umQLUHi4uqwW4Z06WMaeCUkEq2b3MeEExsX9cYHojDK7yBAmwluH+oKhGccbhVREjM/8p7ytHu0ARxG4U0cNRJY82kW5N5n0eKj85a+qZEa5hzBNn7UYIUsoGwZCD1jtUgSqI+jjdUx9m7GbAVvvzqi5kEUBVA5Fm+eSOt226v6Bh7Bydp2NIUyjKAzn3RxIoRrjdkCBO0DDb2rEQlPB8qr8Ylal0Ojcv/6Z84ZMRNlOJsmjv5H9xBlfpzwrlj","layer_level":2},{"id":"7b6b4319-4f55-42f6-830d-10fbedc42ff7","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Social Media Skeptic Personas","description":"ai-persona-twitter-reddit","prompt":"Develop detailed content for the social media skeptic personas (Twitter and Reddit) in the AI report generation system. Explain how these personas provide critical, often cynical analysis of Telegram chat dynamics, similar to typical discourse on Twitter/X and Reddit platforms. Document how both personas use the standard reportSchema but with distinct system prompts that encourage identifying manipulation tactics, echo chambers, and hidden agendas. Include examples from the code showing how getPersonaPrompt('twitter') emphasizes calling out attention-seekers and spam, while getPersonaPrompt('reddit') focuses on karma dynamics, circlejerk patterns, and moderation issues. Detail how these personas help community owners see beyond surface-level positivity and understand underlying power structures and problematic behaviors within their communities.","parent_id":"374a319d-39dc-4f05-9312-344b401fdadc","order":5,"progress_status":"completed","dependent_files":"lib/ai.ts","gmt_create":"2025-10-11T18:39:49.69051-03:00","gmt_modified":"2025-10-11T19:01:40.480954-03:00","raw_data":"WikiEncrypted:XjbjnOzjruoAEvpn/dhFW1vkJKgUfiQIv1YsVlO3+umMs9zjrJI98J+Xix+bz1uBXNnpj+eCRTPqat6rT689NGWkbuBilqV8LNolCbfJDWSCPEJahf0DSbfFdtjILL9B7bmo+xU3jKIMxti2YN+OuemolZJ56JwzFRqT6B71CVMZyA3UZ5xnnM863pyiVdTxBidm/4utYv4CF88CmIiD/jznENNCPStNpSJDA3ywEDD8tAIENdEGw2c8vDAPXI+4L5sqmUkFZxaF63aow/9RUsZnBDT5NylMXQgiyUJJvFBVUVxnm6oPFfg1SWHwAcivig0ADPIdoif0HZeDwbNNDxaI+ymnsNGbyhqePC26yCw/cSSNdKkDhsjMbV25zBDmQLAorQg1XcW+NYivVIhF0d7S9jD0ql1rnLi3jlYoglg9J76AYHDsC6KjKbpd2+D1RUOm7mk0T2t0Irc1Y0QfwGpvCzU2az1JeFW6fUKgXihCVkh8thAZiWeSiY4WE4L+Zc/BAzIogGeZT/2P84boXPnrm9dxyDGmTJRyEJ5HFtqde8bVsZq/m0Bm/RK2UBUhU5UqtulqJoJICEipni28g3ZNjhqYtaAEGI4PU/vvDdfYPrwdXQsxawYXYmCroNHwicUK8yZlT+ryRihzodDGor8qHGdfuME3Hq2ahmnroazg7abmApzX9ijhl0IWzpwfm1HWUxAp4QNrJdLCjAbTmeigwEq9jHmydQRLDhtgAES4bP3u/pGOat0rRmmFVWa7MzliOC9+teeaQTNS1qrWczOVJnAskKdfkzUoslN4L4AQFWeyOQ9A9KSvf+B6K1eaV7QW6RbqXujWykZJ540Xj3XematP9UxAS0mNbAYgeDBlBmuxzpWJYnK2nq/WyZKn3Z9YsgT5QQnyJsIYG+jhBnVlEYp/k6OigWkSoqd6qnj+e3kjudeO67TP3TTtRFVL3rIrKwcVr6ATFbKOaAQBdeZ8LrXnjOYxuIdUsLY97b9AizOewEcX2Io6c50HHphpjVxEDUNhkzcCM2abMAgb2gba2kUu+e0yEH5S73rQaZfMfhvzX1kMFK1Z2b+Hnx0wjlhP0z4U++zWR3+HzXlZvNLC3/M2gQ4E6sS4NelZ3APYTagtyrpmi7KJUo+bjGbf+NRepq4FavxL4UX1xGUDaNrYfmvVuB+/lUakXSG+jsTTRvV5lUrkd1PnwOdoAL+gjNHRB+bQOGfh9WTtVcw1aNxASmAbgQLOq5L2EhcD/z+KAxTLVzBxknsALEv70hxaTHzZUcp2vBd6dympEYMOk9C7xQaTor5WbtBcSudB8tuPiF+r4JZbg3hRAI81Qsj3KTZP6k+QPgh1hHF4zZsjH5iMnOFXicHPva8JN4J5MXAUfmQcymrIpCUrE5qjZ26YwXC6Bz+qe0vx1RgML5Rew9Ewa8n4oquC6AIyS1syOOvZbww4/MFCr59HMMqcJMFRpIsjkn63Z2ygZr58LE8bW3n4MwwlHqu1S/iVFgNuTGcQdX4FO22xARK+9Yrv/NkOn9vJYYOZTp4g/LxGfZLEkQ==","layer_level":3},{"id":"9a817426-9008-4d83-9b6e-714a96e01fcb","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Database Design","description":"database-design","prompt":"Create comprehensive data model documentation for the database component of the tg-ai-vibecoders-summary application. Detail the expected external schema with the messages table (id, chat_id, user_id, text, sent_at) and users table (id, first_name, last_name, username). Document the entity relationships, field definitions, and data types. Explain the data access patterns through the Repository Pattern implemented in queries.ts, including fetchOverview, fetchMessagesText, and fetchMessagesWithAuthors. Include database schema diagrams and sample queries. Document the connection pooling strategy with global Pool instance and max 5 connections to prevent leaks during hot-reload. Address performance considerations for time-series aggregation and large message sets. Specify data lifecycle assumptions and access patterns. Include information about the external schema requirement and how the application depends on pre-existing tables rather than managing schema migrations.","order":6,"progress_status":"completed","dependent_files":"lib/db.ts,lib/queries.ts","gmt_create":"2025-10-11T18:38:14.785243-03:00","gmt_modified":"2025-10-11T18:47:10.015984-03:00","raw_data":"WikiEncrypted:veTYwq2y4io5qXerCTrkkBwdhOAmcMQTz+AJLOFORhNp0MWSQeil5bm+a7gm9BradQRuvU0yDGFjGwsqBvwG3ocBCmLqQJwO7IrOECkp8Hit5dA2EocktR4zNuEnMY5wrm3kBBxUr/j7Jx79z9gRr1NBZdHzErEu5m1i0uP3hRRQIDiZZjBgaFsMPHmgrRN75WBe4P81QuuXQVOwj4RpzohdLh3EmI0GsWjA1nIv03xqkt6gVMRW/SyfS+dp/1sbRAkmQ2pi8rj0yC0Ot9tGtZMmjICCjwe0Uuzz9czylswmSyX04lCDxAZoxsJT1N30DESxW9XMlxVHjtiJgoua9vN24xx1eFMLi3IrSYZkh2rDGl/+r+CNVRqNpoDzVUERTta74qDZI4fsbc/KXOkSbfYCT4uBhvlqURZNJQ8uCq65zF1skcfbu6MVPO4zV37H/l2cCtJh0cYyfMo8i/Pt9syFkpFGNCE4vpYBZo0b/zETsKrnDJrCdoRcCMV0IkmP85wnsMIYNDOQRGWv8lOQk6LkkmSaQdZs7jfFC9l5xfWLr/dTddfsBbPxbgl53k19cYiNUaZhr+JkXkfJBwICwEN+4c9foHnvtI0txhQXnmBzSpnD7f5lEJnknZlmWAgeZ014wy+sB0X95ZsRNeeZbDRVSknI5iKA99hkL/bb+kXNv5x8aG4qbIrRqOuucyuGjxtTNZX4iEFjQO6ZfzkUmchFUBDYMgsftVbY+NSpkEhx5FUS0yOpQYAylW7is1vlFRz9ibYCeGdWEagZx3slvCM+4AEeogWPpo2dVkWGfO9gPKi4oasPLo7+n5PkOCxlexZanv3lZUptnBYvPPEaz6nSDFAMUwVZ6WVpMudz9hEDZ4cwuQAN+SXOVbEjEOAnQ3mYMSKswG2x/fJS3b+8clj+tmwZrJU/b9ldQ8cubR9QJwpZ4x1P+VYEVKBNOzeVP1d6v7mngxLYQzsvnUsFzRJFc9I0tnYO5oHB2QvIPR6iQvTNPqfjxofys1MYPlvUCYfrmz6P1MjWcxuaqq4nUM5k8xPtAJbPN04JW5Iny/2mVcqcuUk+m6QRa1RnwC9DDoj2+Knkvyn2KeOrDTVcmxKJq36+MaQMWrrnZtcEvcpCLzwv55zEfBugrJHJ/mmhGdYx+O9gTgbu3biNIcNeivW3gyZhNbG4m24XSUgxf211jKnPkh30Se5jfkIWU0RtLNExJsMSySPqXsjeoLxFyMK0RLvA8jzyICnQ2sKDF3k5V1pUmfoVqKW+T6UE/sz3xJZw/ppCI9wuqDIYbyVdDDOE5SZ5H461fYF1tXUvrB0yqz/P0iccneNgwHPVA3vHC8puR6UrIBTiiE0QxdGC2flvKzBXfWBn6kD4chJAiUImOXOzNKyf1F7T72smF2v1godNuMHuQMX2W1jd+4Ez8HeyxLIcrMt/Px3v/iCQHwVcjNV6X7LrcFSV+JjAuTsonE8FjlBxYlEn5ycG8aaNDIMpauUCa+Rw8Ar55WmjfRcY2C0ERFAuTkfppm6t/1JIk/b1DnoK1IA6cF+yhLpbtFHaG9QIsfUitIoJ3GecW1lUXJ8Gm2ZjOLcYxe+f5n1Y8wF0n5ADkox4Rq1deBP9BamQR29/DkzG8O36Z+VAqbuuW4OUHYL8KR3heDR+8gq5"},{"id":"c061ea25-2d8b-4da7-af99-da4b5072dd7d","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Telegram Integration","description":"telegram-integration","prompt":"Create architectural documentation for the Telegram integration component of the tg-ai-vibecoders-summary application. Describe the high-level design of the message delivery system using Telegram Bot API. Document the architectural patterns including message formatting, automatic splitting of long messages (\u003e4096 characters), and thread support. Explain the system boundaries between the application and Telegram API, including authentication with TELEGRAM_BOT_TOKEN and message delivery to TELEGRAM_CHAT_ID. Include infrastructure requirements for handling message delivery and error recovery. Address cross-cutting concerns like message formatting helpers, JSON schema helpers, and error handling for failed deliveries. Provide component breakdowns showing the relationship between lib/telegram.ts and the send-to-telegram API route. Document the user workflow for sending reports via the '📤 Отправить в Telegram' button and the configuration process for bot setup using @BotFather and @userinfobot.","order":7,"progress_status":"completed","dependent_files":"lib/telegram.ts,app/api/send-to-telegram/route.ts","gmt_create":"2025-10-11T18:38:14.786132-03:00","gmt_modified":"2025-10-11T18:47:10.017994-03:00","raw_data":"WikiEncrypted:/lmdJ17ZMRlElr81I4gxUU4FY4kNmP3Fchkkvkqk5yfs3+jYAgsDSatKsa9gDTEixeVX9FFsRl7lyhX4Slh0yKs9mwBFpihweuTNWdfOo8m4iuP+9MNxew0u+gHbbQrKZ/CPej7m8NhAQjzhiAu8djMjqo/grw/XyZn5MU4sBBQaq9Q/IYPgnz0ZItGrCEBt9jRpw1YRskBeT7bDAbP7VqcVEcL3PcJYKfN49yzxJthWBWqAbb9eG/01UyM5H70HYc5kyR7t2ZYzTwThgaY1xvEUQJW1JozqofJXpCOVQXAEWUJ0PIlzCwImbgs8G4G59+/tHy71n/KEEWMC2LPKnBm5SZcK10cQMplbGb+30wzdn53BCHxlF5xyjyLpachhRdfNV9jAWKu+gfByRu5X4pDy0zniooI6/c9SpInMZY915GXj3BTMYTCnPSGe7hw1PQ0yWGPZpZo8jRnSCkHos2HgmCN9eY1hgamQWil3jx+A/NW/K0S54S3SSus239Wvq8WIWt+RxFB33qYADryeyIqdPzi3HVMUhhvFr22U1V0prr9TjQ5HZd0LBk7VCfPSBKAf4jeDDtynvWlDh2w4oKjXrDEop8/vOZXXAoIVGe00073tIvj72sDMdoEAhDsAQ+yUHb4ev702GloIZAtZAN3wRmH5whREaA5vlYmDPULiidaLoU1vt4sEPUsK2Vp1vf2CZ9rDlNDLX9IdQLrzkpvmS4SmAWFlF/1m9LGB3FulfWrqIId6iZrl1iABsJ86q1igdVy2Muz+dz/ZC/9CtED/Nl2yvaFWyQsu0MG+ZmZEBAw8GTYfe1Hbs0tNGgmkbgJH7FmWQoe5feeLZPD8RhSUHBGptq6fIaXKJiJ0RvoalR08qMZa2XFHWDJfaGgPeTx0/Whf09jbYJZXTnKcwOqJFrNJmQfHbWyBLKxu9zFGnhIWe2nnbhYPSdn3JSPXvV6FI7ZZz1nkIZ1GDKpWhjkVOYTt6HSWXIKMIX/h6vmNvhFQB4ah0vW+QM4rVIn2CW2cfZ5HZSr0+rnE4y/xKpEIDTdZW/fzVbPi0XlSwRjaCgOwaOlUqHyyL0EI0XzBo2HOaeqTW3VtCS4qM9LZUUFx9MODbKUipmdSLmFLT5L47wT/1mV76EO5puJRa+RvqqP5bdu5FuDb/HiWI1vnDN7VFrJIKo/cWrhNMV155865y/oKWB/p2ZG0XaJt2e8U8TBGuVZhvgcIStk4jbT932JrlPyrhWbeoAnrVUWabjRulv1w4cJoXxLOU7sL/0UI0kPVijwKdNZlBk6N48mh4RzRhAKzwNOCndpG438i5PfaZaaZK7BOD7IpXT9aBrirvC77AFUEEX+2idHC1IFlFYPqMyGCW657mEE3EQ4HEAcHRTIdxu8yMmjfVAyCVdQuS/zOOtyGFM1+0tLVfuPMyviWWlkgivGBBRY63UUVMy2ps571HZAViO8dfmEcAamvUmNFB2p+4wgil1HngRquC7lNVf5AOHXHDAVHP/ctAUiX1gu2RPARnnrF8+iLFd2YqFuD9/rzLtaekyBOUsdzlzK2Pt3T3p6gKXPUpYEsvvCJRaQJqjS4oGtqnBlOBQEXrgHZXidVdCifPQIjK7smqvl3dzIutaZhdRcIH48hOuBYcUXgdaiav4ExFWfw7nRUd+a4XZusX39x67AyC1gjqddXe6XYVsKo0WLJI7oy5Er3MY3ODdsLlheL/kEsEaHPk2EzBu26wRDJcFd5GFKh/Cu6AdYQkP4cbgdSU/lLNog="},{"id":"fee115e4-4c30-47da-8530-3b9fe3c134ee","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Configuration Guide","description":"configuration-guide","prompt":"Create comprehensive content for this section focused on configuring the tg-ai-vibecoders-summary application. Explain all environment variables in detail, categorizing them as required (DATABASE_URL, OPENROUTER_API_KEY, OPENROUTER_MODEL) or optional (OPENROUTER_TIMEOUT_MS, LLM_TEXT_CHAR_BUDGET, LLM_DEBUG_VERBOSE, TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID). Document the purpose and acceptable values for each variable, including connection string formats for PostgreSQL and valid model identifiers for OpenRouter. Provide step-by-step instructions for creating a .env file and populating it with the correct values. Include practical examples of complete configuration setups for different deployment scenarios. Address common configuration issues such as invalid connection strings, expired API keys, and incorrect chat IDs. Explain the impact of configuration options on application behavior, such as timeout settings affecting report generation reliability and character budget affecting AI analysis depth. Include troubleshooting guidance for configuration-related errors.","order":8,"progress_status":"completed","dependent_files":"CLAUDE.md,README.md","gmt_create":"2025-10-11T18:38:14.786559-03:00","gmt_modified":"2025-10-11T18:47:57.279804-03:00","raw_data":"WikiEncrypted:aC5ZtUyEKPSxjzg//aVllG3KeKoHrt3VUYbwJdfZuc0oxoKZ34OseePg+VVHDrdEhdI9NXcR0MdzCBvFt4fAM6UXPu+bPqi0N4CaIYUe6cveNmmB2LdnEQGY+utWQTN0WbakHdS5bNZ7ciqaTlxCSloDEsjX5oSduexqid2VzUL8W5VMs+d426ESSqq86ZUWjDvwIj6dU7bjHTaqB/6xDEsPFP99mBz7fuTARfN7nZVsu3dQtCM2eRz5Re1RLrL0cy+QX+AmXjUDsTPoYRzKdSOeiRckH9NU41SW1z3268/Hm+jfcFY6M4uH1y393GKshJpvh4eTvOt9FFk3aP9BtVVOfHswLzBoKHhL7EV3VTlvPdGm8CkWtlHTKevVMLYun063xTgqLQWnPU49972QqQmkKSd8oQfa7rcFn4EqmvX/30jRF/FoIIAapIlrXrJjMt+mvQT4VBTP4JWtXrY/E6JJGBiWsSNd5875w97B2mIAzgOv0okfz3RzDwUjSxBAyrJL5jCOtOnJAWk9V7ug2WvGTqGie5eAU6r9MJz+of0g5N3s9IikdnFQjqvFysJ70G3P/EbkXSCmFY/u/xlBFWNAkXan3+g2wtmxbzzcfKDdR1RVdW/VdWcQcIicHybQ0o6nGWMDfWzrwPkNCmDywnx7V+JDYEaEPkeS+x9Gech3G0UVk7MTUGUQG4Yvp0eS/4XES066Gy0xjEeTnGA0nJdKWnEb8W4BlrUH4qEOrz2XCibbdgJbx0ZqonWyo/yjyNNpkKbtzV/hfOImrt+UQ3aSjd4kWk5dRp2SCo5syfNAj/f3xZfiXeuazwKgosyRMaiWBKCDvr1OsKCJMdmhWEBUX1qQaaUQW10fGNH3aljNlo3IYU+vSgVcI5wxG/wA9kN4A7+hfUnLrVFMvaki2fnardMFt1M/6cQ+DsfldzbN5QPei/EHrLMvNa/17ddJdkFLjfG3xJicZPZudlEUyk986hDhB9/DyxeQbWx7qu9lcFDRtYnjWi99tkTybUOvDZaDY0VRBntZPR/3mRs2ZnukangOXEWIvxHCv10nv8EqReFo+p6a+ukyCzJqKhiubZd5OnRk0PvoUXSC3FmLIugArSqww7pfqntolEZK5g380fabl3RipWJRoDX2sI3DmBV+HuD8YKJR1tq4ws7QgniXPd96JEaftT9bEpHua5AAcpdO2fhd/fhAWKmrxyRkEQT+2Z9kPNHypBvREE4Zz131pkHitnHYs4KJFct0FoAGeSzYVvnQiEyZPw2guo8YeLX7N5EFpL+HVsfIS0K7OIEfxG7dp3uGmDL1YnWv0OY0dGWoxabAhYaOEeP/x5P04vwf2n3qoq+dJiv97TktGIrpkKS5TrsTuHZmAAPRdsrPADIK5tJdb3fRj8/pLKnRlvnm3Nds/9YKLZ52kkB/i2/pt89R1YRsWuL7HHX5UMcMQbq0qPMrUO0HKw1LqR4I/E4930SMmOBy3r75QcQf2Y4zwboH80EUsSefa5niHzEhGSHFBMVFMyCGeCHXXSzqY9SwECedv+DzUOLOTYYX6oOfQmxncp5kacwrcw+hLxVUpkjw4u/ZeeJzDhjWvjWHGH4P0i18fVPM62sIEcgPXyP8xwaG7ZwBUyobohR2UMUqXg9ieserHSYJ94DOoMrruFS2uacaJESm3nE9slq+vFJFRVEERNoH4QV5naXcy2mrDnQ8EIceAQ4+e8WRYv3CrdMmOCLD7fntRoydF5QdxgSzwFlOKljJLg+S7OiQAqZzO/sV08It1UUokJ0DNJ73"},{"id":"bc38ff9b-e834-4f68-86c9-f4281c9333b5","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"Developer Guide","description":"developer-guide","prompt":"Create comprehensive content for this section focused on the development workflow for the tg-ai-vibecoders-summary application. Explain the complete development process from setting up the environment to deploying changes. Document the development workflow steps: ensuring PostgreSQL is running, verifying OpenRouter credentials, starting the development server with 'npm run dev', and accessing the appropriate dashboard views. Include instructions for using query parameters like chat_id for filtering and days for time period selection. Explain the linting process with 'npm run lint' and the importance of maintaining code quality. Document the refactoring strategy and progress, including the 676 lines of code saved through AI and Telegram module improvements. Address best practices for contributing to the codebase, including the use of TypeScript strict mode and path aliases. Provide practical examples of common development tasks and troubleshooting tips for common issues like hot-reload problems or type errors.","order":9,"progress_status":"completed","dependent_files":"CLAUDE.md,README.md","gmt_create":"2025-10-11T18:38:14.78696-03:00","gmt_modified":"2025-10-11T18:48:14.659203-03:00","raw_data":"WikiEncrypted:F3QgleoEfoy16cQggYe9C5IaSqlGa9MAZLOFAWytoRNMybnI1ljYEEif5toDwhEQ3OcIFU7EdxlfsxvLQBZG1/42aGCs6dmZ+qxoNudqroNNwZRTKHwTTRPDuEkA8gDLMb5syQC937plWkBOBa+uVuiacpPzTalH7xSdjg4EdP6Eo1dCF7yGGi1dsJY7JdR3Qe9SvKk6IGAxmY3j/GluYvn9RmpPkFVKW0iiMV8RJYSLr0CDy6ZzWNrftcNOsUZ48jBSFV5jQ3f2c7gC65mKt/C1JuS8KM7Ap3+1T9xsIoG+Lu/yrH6tMVREbDdhHqBd9o0LOIcEal0XN5Ztyb3Cii/SNwcYTDixUI9tlsjsV2yme/kAqcCOoA+n6NqHv4ZZxf81rxTObx3hIXnR84ZaOwTJquoLv3DFbogkHUckrqQfWfPJWkGuM1OEXjelUtheorByHbXaj79O3ezHrUs75JgHJU/5g+NQHYbWGgU041XKPdw8+P+btGdevwZzu7uZ4YjWZ2k6dXtUmjHRpKwQarcDS2X2WV7mITl9f/TH8JN9vcgD8WulDeHBDa+87SMCAY05C5hJtCzSm5jMOwLeHbp9iu2PigK7GDpm8Cl5sjjFSMU2EM476YA6W3P1dEU0wB+BjLNYzBjYTkMApIjFU2HoL1qyuHjzb4dVGAB4OSISKg9bHQALEgXjynUPoHW4r9l3r7Tv7s4Y0L9Dlmjr0ZeX4uybG6bst0AN1Kne3dc8gRn1Pyk1e92qczJ3Wbipbhrz2ssrrauj0h7JxIY1SHYSBoqamAyjWpPzhLa7D3lscrAkiePdSvOx2gWV8GNGRbZRs9L04jyBeYocWt9G+eTXWFveUYCrw/mFKWK/GoHiHrphscskqws6BVMp+xFmLkmjdguowXX3nv1yUdFh5O+ZWFbjYC73a7pbJ84B8wbfLYQI/ns8bFHM34CbDv2qoGscukcOsENODKFwwWyN2EUJKiUW9vAExe7fc5ukx/EW5BJbPV6nbzWLrp+tyZ5CXPkjpjUgMrG4t6nOSGOTlYMJUdrPx8skTI1RmkoblRfguUMUsPCSTabKjQzX4iouTwstNYPeqqFbd/Hsv4R1ZkjZxIsHTRooNCL0xoY3mJtLW+laYYTXqZj40v7V8HooOZ/rEUgk0B7o9CRR2hoPamh46XYsai88/8LHFAhkL2ZGr9Ga7bdP0DD0elbnLEo/Kb9YjU9ad+hcPJsBzP+ngoz1gxNut9yoc3CeMHFb1dCnmIM7RP3neT67iCGa6ocWD3jEBseY5cnxx9UZ07bT0Xp1OJCHjpOlUjzCumCTEZUjc1MOp+/OY7kxZbZrxVFbDBmyBJzfZJVmrKmZ03NvtB5eHGO7YA396sBLsZUX7Ur7cF6QSm6CFHjn75tQ/jWtTVeomsYYpcM64K5G/tjKOl/Oyc86Ig/TdT+GAZOpU8UgXVO2F5AmYiAuMBTMqK8k6sFHPmeyIVKtiHZwH2O5EL7uO76/GF3/TBEw3jpFqqGYxrPL3IGhMa4oFzvWPcJgv/5UP7CZLeIbpOCla80fBw5+KxTvxOtOV0Aayw+rhecA/99RdQvEZV4cn2w/9QRHXRk4gxOYUduI8ZrblTtmgtNZ+HW/FbFITBYyePwEOtj4vCO1xQwaU60ucfao3PlW2+xwqEXb3dZrO3kXR0MVvvmWiA+F0VkWii+qSrUeAk6sH8twbYrisxCCnlox4fbFrVcRnryBkBzJgptXGtOJPlm6xD5iZlXq9JU91Dr7IpI="}],"wiki_items":[{"catalog_id":"6e68e136-dedc-4d74-8f60-5439161a3a04","title":"Getting Started","description":"getting-started","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"cacface5-dd59-42c9-8786-fb8b833c72e3","gmt_create":"2025-10-11T18:40:50.15614-03:00","gmt_modified":"2025-10-11T18:40:50.159372-03:00"},{"catalog_id":"7a77f0c2-9104-48b7-8043-0ca441beaf8e","title":"Project Overview","description":"project-overview","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"ebd3fe5f-2acc-47e0-9ae8-a09fde7095db","gmt_create":"2025-10-11T18:40:52.618238-03:00","gmt_modified":"2025-10-11T18:40:52.621985-03:00"},{"catalog_id":"1ee11ae7-b261-4d5c-80e8-ef11052072a5","title":"Technology Stack","description":"technology-stack","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"6c059b97-eca8-4a89-85f4-25f9a168ca55","gmt_create":"2025-10-11T18:40:57.0915-03:00","gmt_modified":"2025-10-11T18:40:57.094923-03:00"},{"catalog_id":"c061ea25-2d8b-4da7-af99-da4b5072dd7d","title":"Telegram Integration","description":"telegram-integration","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"bfc7d72e-c008-4672-b21c-0fe80788ff58","gmt_create":"2025-10-11T18:47:06.781206-03:00","gmt_modified":"2025-10-11T18:47:10.039664-03:00"},{"catalog_id":"9a817426-9008-4d83-9b6e-714a96e01fcb","title":"Database Design","description":"database-design","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"3120c6c3-0f31-4ff5-8777-94fe6bab2ac6","gmt_create":"2025-10-11T18:47:07.397743-03:00","gmt_modified":"2025-10-11T18:47:10.017491-03:00"},{"catalog_id":"fee115e4-4c30-47da-8530-3b9fe3c134ee","title":"Configuration Guide","description":"configuration-guide","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"c9c4d25e-fce4-4160-87cd-43d40010e327","gmt_create":"2025-10-11T18:47:57.273819-03:00","gmt_modified":"2025-10-11T18:47:57.280071-03:00"},{"catalog_id":"bc38ff9b-e834-4f68-86c9-f4281c9333b5","title":"Developer Guide","description":"developer-guide","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"193a481d-d54c-4e92-9347-b97f16f480b5","gmt_create":"2025-10-11T18:48:14.654351-03:00","gmt_modified":"2025-10-11T18:48:14.659755-03:00"},{"catalog_id":"e1dc13bc-9fcd-4e76-ba9a-64f9d86595cf","title":"Report Generation","description":"ai-report-generation","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"8d488c67-6b32-4639-a69c-fa93734ba68d","gmt_create":"2025-10-11T18:48:33.216117-03:00","gmt_modified":"2025-10-11T18:48:33.219713-03:00"},{"catalog_id":"603fdd04-8e0d-4640-9982-851e10c7bebc","title":"Dashboard Layout","description":"dashboard-layout","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"73c290e6-929a-4f84-a974-63c64eebb1dd","gmt_create":"2025-10-11T18:48:43.333334-03:00","gmt_modified":"2025-10-11T18:48:43.339264-03:00"},{"catalog_id":"705c16ec-9f49-4e95-8bde-64291654b9fd","title":"API Overview","description":"api-overview","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"2579f4a5-9635-47d5-99cf-8c648730ef56","gmt_create":"2025-10-11T18:49:51.281737-03:00","gmt_modified":"2025-10-11T18:49:51.287031-03:00"},{"catalog_id":"a91ae67c-2d75-4967-b2fc-dee0c968c2fd","title":"Component Hierarchy","description":"component-hierarchy","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"199981b7-1163-4746-be32-f78d9a3bbbbb","gmt_create":"2025-10-11T18:50:06.56432-03:00","gmt_modified":"2025-10-11T18:50:08.905882-03:00"},{"catalog_id":"644d81c9-a251-42d8-9144-4d37ae4d82f8","title":"Schema Validation","description":"ai-schema-validation","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"7cf2b3e6-d90f-492f-b794-2603251deb39","gmt_create":"2025-10-11T18:50:06.758228-03:00","gmt_modified":"2025-10-11T18:50:08.912801-03:00"},{"catalog_id":"fe6999b2-9acf-408f-991e-bc78d67b5960","title":"Data Access Layer","description":"data-access-layer","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"cd64d2da-3060-4341-bc99-bf3e3cdc6bb1","gmt_create":"2025-10-11T18:50:55.043775-03:00","gmt_modified":"2025-10-11T18:50:55.048013-03:00"},{"catalog_id":"b26e1dc7-bf05-4d7b-be82-960426646642","title":"State Management","description":"state-management","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"cb66204b-cffc-4bd3-b34e-08c3596a6e55","gmt_create":"2025-10-11T18:51:18.603161-03:00","gmt_modified":"2025-10-11T18:51:18.60558-03:00"},{"catalog_id":"4f1029a6-3e39-424c-9f21-e1b862a6f287","title":"Service Orchestration","description":"service-orchestration","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"fd5eb682-e6a5-4f10-8159-2441ff91fc8f","gmt_create":"2025-10-11T18:52:06.483759-03:00","gmt_modified":"2025-10-11T18:52:06.489376-03:00"},{"catalog_id":"81ad1449-36de-4b5c-8640-ff3607fad276","title":"Overview Queries","description":"overview-queries","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"92c97570-f17d-4276-ad55-a1c1701c81e3","gmt_create":"2025-10-11T18:52:07.886693-03:00","gmt_modified":"2025-10-11T18:52:07.891178-03:00"},{"catalog_id":"a09c5c73-640e-44b0-9b54-d49d7b60e513","title":"Prompt Engineering","description":"ai-prompt-engineering","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"345ea698-0a62-485f-bf6d-768a04c9075d","gmt_create":"2025-10-11T18:52:29.305721-03:00","gmt_modified":"2025-10-11T18:52:29.310186-03:00"},{"catalog_id":"056881d8-c203-47a9-ab41-3a5a7e80e13f","title":"Metric Card","description":"metric-card","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"b636f08b-4127-4b44-a6a0-63a309e68068","gmt_create":"2025-10-11T18:52:55.078713-03:00","gmt_modified":"2025-10-11T18:52:55.082843-03:00"},{"catalog_id":"3f6b0885-195b-4468-b7aa-d69d0d475abc","title":"Overview API","description":"overview-api","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"e0aabb15-9588-4457-a863-a8407d6d6db4","gmt_create":"2025-10-11T18:52:57.841053-03:00","gmt_modified":"2025-10-11T18:52:57.844376-03:00"},{"catalog_id":"9e115045-fb8e-45c7-8ba4-fb0d001346f5","title":"Report Building Process","description":"report-building","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"6442c983-6060-4086-8841-40e64fab059d","gmt_create":"2025-10-11T18:53:38.684481-03:00","gmt_modified":"2025-10-11T18:53:38.688818-03:00"},{"catalog_id":"d462a166-b222-49be-b685-56af271d085c","title":"Message Queries","description":"message-queries","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"b6059293-5e91-42fd-ba47-cbba2bf2a0bd","gmt_create":"2025-10-11T18:53:46.317331-03:00","gmt_modified":"2025-10-11T18:53:46.321165-03:00"},{"catalog_id":"0ca0daff-512f-484b-b6cb-3005c8968713","title":"Top Users","description":"top-users","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"1e8e644f-fd67-44d8-85bb-c15144459c5a","gmt_create":"2025-10-11T18:54:18.007932-03:00","gmt_modified":"2025-10-11T18:54:18.012464-03:00"},{"catalog_id":"7d1ce1e9-8164-4429-ab2c-f9b899be913a","title":"Report API","description":"report-api","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"71368a46-16c3-4602-ba68-4d27bfb1cbf4","gmt_create":"2025-10-11T18:54:32.786576-03:00","gmt_modified":"2025-10-11T18:54:32.790026-03:00"},{"catalog_id":"82ab88aa-3e2e-4098-aa34-9d55f54da4ae","title":"Forum Topics Queries","description":"forum-topics-queries","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"6f4d5bb7-605d-4811-b933-0189be422648","gmt_create":"2025-10-11T18:55:05.116499-03:00","gmt_modified":"2025-10-11T18:55:05.120082-03:00"},{"catalog_id":"374a319d-39dc-4f05-9312-344b401fdadc","title":"AI Report Generation","description":"ai-report-generation","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"9f6c3a8a-f04a-4e53-ac0e-8cac35cee5d6","gmt_create":"2025-10-11T18:55:06.793573-03:00","gmt_modified":"2025-10-11T18:55:06.798643-03:00"},{"catalog_id":"470e9df5-6891-44d3-a476-651836170b64","title":"Telegram Integration API","description":"telegram-api","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"f0ae06cf-1481-46d4-beb6-7c582f600db9","gmt_create":"2025-10-11T18:55:54.734988-03:00","gmt_modified":"2025-10-11T18:55:54.741797-03:00"},{"catalog_id":"db0ae65b-dd38-49da-9d7b-abeadc409de9","title":"Connection Management","description":"connection-management","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"95b63857-b689-4cc7-bd9d-2d12dde67ab1","gmt_create":"2025-10-11T18:55:58.693298-03:00","gmt_modified":"2025-10-11T18:55:58.697399-03:00"},{"catalog_id":"eb9e54d2-0571-4418-b1c7-9fa5a6e56acc","title":"AI Insights","description":"ai-insights","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"d4ed5348-c0a6-4fc4-889d-e12c4f0d4d1f","gmt_create":"2025-10-11T18:55:59.872738-03:00","gmt_modified":"2025-10-11T18:55:59.875873-03:00"},{"catalog_id":"655313a0-3d83-4377-94e4-37cbf4928734","title":"Topics API","description":"topics-api","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"98859b6f-8655-4d45-ba04-ed444bebb01b","gmt_create":"2025-10-11T18:56:42.807074-03:00","gmt_modified":"2025-10-11T18:56:42.810078-03:00"},{"catalog_id":"3e8e9061-ed53-4159-a040-0a4541a4b450","title":"Forum Topics","description":"forum-topics","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"cca1f1c9-0fea-4f74-a759-40d2d18e5eca","gmt_create":"2025-10-11T18:56:49.904326-03:00","gmt_modified":"2025-10-11T18:56:49.909712-03:00"},{"catalog_id":"1787f244-6fb6-4170-8b25-17f214156272","title":"Summary Generator","description":"summary-generator","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"1dd292ce-8ba6-4d5f-abe9-6e8fc9aa29c7","gmt_create":"2025-10-11T18:56:49.924699-03:00","gmt_modified":"2025-10-11T18:56:49.936797-03:00"},{"catalog_id":"2d0300f5-67a1-4a55-8cc9-78ce9fd3f104","title":"Generate Report","description":"report-api-generate","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"5de91925-1faf-4cbc-8693-a8b1858ce719","gmt_create":"2025-10-11T18:57:50.314695-03:00","gmt_modified":"2025-10-11T18:57:50.321761-03:00"},{"catalog_id":"9eb59823-1c68-47ab-a318-6197f28087c0","title":"Fetch Messages Text","description":"fetch-messages-text","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"5cad39de-a7aa-46b2-a3a3-c94f286c55fd","gmt_create":"2025-10-11T18:57:51.623549-03:00","gmt_modified":"2025-10-11T18:57:51.628134-03:00"},{"catalog_id":"188b758f-726a-44ac-8eb2-19ce707fca29","title":"Multi-Style Summary Generator","description":"multi-style-summary-generator","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"34ff4ffc-b49c-4308-a43a-99fbb1c67236","gmt_create":"2025-10-11T18:58:05.541927-03:00","gmt_modified":"2025-10-11T18:58:05.544987-03:00"},{"catalog_id":"bad7f5d0-1c51-4b73-a99d-7391324207ee","title":"Fetch Messages With Authors","description":"fetch-messages-with-authors","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"f3d44325-ee3e-4617-aadb-1c3260914fb1","gmt_create":"2025-10-11T18:58:35.953345-03:00","gmt_modified":"2025-10-11T18:58:35.962096-03:00"},{"catalog_id":"bb1b188c-de4b-4c36-b02d-bb8198e4604d","title":"Creative Persona Analysis","description":"ai-persona-creative","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"87135262-dcdd-4bde-86c7-5f8ab7093ba0","gmt_create":"2025-10-11T19:00:09.33162-03:00","gmt_modified":"2025-10-11T19:00:09.336032-03:00"},{"catalog_id":"c2b4e646-b28a-4128-948b-c2dce54cd5f4","title":"Fetch Messages With Links","description":"fetch-messages-with-links","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"b5899c8a-6913-4d65-ab4e-96f795f69132","gmt_create":"2025-10-11T19:00:11.672038-03:00","gmt_modified":"2025-10-11T19:00:11.676683-03:00"},{"catalog_id":"895a53b1-ca44-4572-95ee-f4d72fb94bb0","title":"Report Preview","description":"report-api-preview","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"e867ae88-c4cd-433b-b934-c346bed960f0","gmt_create":"2025-10-11T19:00:25.689215-03:00","gmt_modified":"2025-10-11T19:00:25.691864-03:00"},{"catalog_id":"dc80ea17-dfd5-4ed4-81d0-ad45144285dd","title":"Curator Persona Analysis","description":"ai-persona-curator","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"489ecb06-bfd8-4cba-a07d-872ab24a78be","gmt_create":"2025-10-11T19:01:23.417033-03:00","gmt_modified":"2025-10-11T19:01:23.423604-03:00"},{"catalog_id":"7b6b4319-4f55-42f6-830d-10fbedc42ff7","title":"Social Media Skeptic Personas","description":"ai-persona-twitter-reddit","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"682fbec6-0c11-4d61-ba09-a85229bc0bbc","gmt_create":"2025-10-11T19:01:40.477299-03:00","gmt_modified":"2025-10-11T19:01:40.481317-03:00"},{"catalog_id":"9a5067ed-b95f-45ff-b75f-e1f1c44b1904","title":"Daily Summary Report","description":"ai-persona-daily-summary","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"1bedd8e7-0296-44eb-bb04-5642908597b4","gmt_create":"2025-10-11T19:01:47.939981-03:00","gmt_modified":"2025-10-11T19:01:47.948437-03:00"},{"catalog_id":"a14d18a3-9e0b-4a19-ab6d-4b13dbd25e00","title":"Backend Architecture","description":"backend-architecture","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"23881c8f-99b0-4f44-b028-71214875ed11","gmt_create":"2025-10-11T19:03:01.230721-03:00","gmt_modified":"2025-10-11T19:03:01.23621-03:00"},{"catalog_id":"d5234fb2-3f55-47ab-861f-49c3096f6167","title":"AI Integration","description":"ai-integration","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"04e0e8aa-24b8-4489-a98b-8950c038b4bd","gmt_create":"2025-10-11T19:03:15.249554-03:00","gmt_modified":"2025-10-11T19:03:15.254326-03:00"},{"catalog_id":"4b11e8bb-04fe-4d5b-bf5f-dfd8fa2b4019","title":"Frontend Architecture","description":"frontend-architecture","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"1dfa5f8d-02d6-461d-acd8-86796c07b12c","gmt_create":"2025-10-11T19:03:28.545985-03:00","gmt_modified":"2025-10-11T19:03:28.552006-03:00"},{"catalog_id":"ae401a95-eb43-449b-a9f9-987527b220c1","title":"Business Persona Analysis","description":"ai-persona-business","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"75ba66c9-b3ef-44e4-a9fc-9b5bfbc28569","gmt_create":"2025-10-11T19:03:53.458903-03:00","gmt_modified":"2025-10-11T19:03:53.463157-03:00"},{"catalog_id":"496fd1d5-71ad-418b-883d-699ebdfe73b0","title":"Insights-Only API","description":"report-api-insights","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"ddcde63a-026c-4468-8598-0f68c3f831e2","gmt_create":"2025-10-11T19:04:19.699591-03:00","gmt_modified":"2025-10-11T19:04:19.705696-03:00"},{"catalog_id":"df756b9b-e430-4ddf-8bdf-749cd65618e6","title":"Psychology Persona Analysis","description":"ai-persona-psychology","extend":"{}","progress_status":"completed","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e","id":"7728c04a-42d4-49fc-ab0f-168ab5c0b62a","gmt_create":"2025-10-11T19:04:45.714075-03:00","gmt_modified":"2025-10-11T19:04:45.72064-03:00"}],"wiki_overview":{"content":"\u003cblog\u003e\n# Comprehensive Project Analysis: Telegram AI Vibecoders Summary\n\n## 1. Project Introduction\n\nThe **Telegram AI Vibecoders Summary** project is a Next.js-based dashboard application designed to analyze Telegram chat activity and generate AI-powered insights. The system processes message data from a PostgreSQL database and leverages large language models via OpenRouter to create structured reports about community behavior, engagement patterns, and content trends.\n\n**Core Goals:**\n- Provide real-time analytics for Telegram communities\n- Generate AI-curated summaries with multiple persona perspectives\n- Visualize key metrics and user engagement patterns\n- Enable automated reporting through Telegram bot integration\n\n**Target Audience:**\n- Community managers and moderators\n- Product owners of Telegram-based communities\n- Marketing and growth teams\n- Data analysts monitoring community health\n\n## 2. Technical Architecture\n\n### Component Breakdown\n\nThe application follows a modern full-stack architecture with clear separation of concerns:\n\n```mermaid\nflowchart TD\n    A[Client Browser] --\u003e B[Next.js App Router]\n    B --\u003e C[API Routes]\n    C --\u003e D[Business Logic]\n    D --\u003e E[Data Access Layer]\n    E --\u003e F[(PostgreSQL Database)]\n    D --\u003e G[AI Service]\n    G --\u003e H[OpenRouter API]\n    D --\u003e I[Telegram Bot API]\n    I --\u003e J[Telegram Chat]\n```\n\n### Design Patterns\n\nThe system implements several key architectural patterns:\n\n- **API Route Pattern**: Next.js App Router for server-side endpoints\n- **Repository Pattern**: Data access through `lib/queries.ts`\n- **Service Layer Pattern**: Business logic in `lib/report.ts` and `lib/ai.ts`\n- **Configuration Management**: Environment variables for service credentials\n- **Type Safety**: Comprehensive TypeScript typing throughout\n\n### Data Flow\n\n```mermaid\nflowchart TD\n    A[User Request] --\u003e B{Dashboard Page}\n    B --\u003e C[fetchOverview]\n    C --\u003e D[Database Query]\n    D --\u003e E[Metrics Data]\n    E --\u003e F[AI Analysis]\n    F --\u003e G[Structured Report]\n    G --\u003e H[UI Components]\n    H --\u003e I[Rendered Dashboard]\n    \n    J[API Request] --\u003e K{Report Generation}\n    K --\u003e L[Fetch Messages]\n    L --\u003e M[AI Processing]\n    M --\u003e N[Formatted Report]\n    N --\u003e O[Telegram Delivery]\n```\n\n## 3. Key Implementation\n\n### Main Entry Points\n- `app/page.tsx`: Dashboard homepage component\n- `app/api/`: API route handlers for various endpoints\n\n### Core Modules\n- `lib/ai.ts`: AI report generation and persona management\n- `lib/db.ts`: Database connection pooling\n- `lib/queries.ts`: Data retrieval operations\n- `lib/report.ts`: Report building and orchestration\n- `lib/telegram.ts`: Telegram message formatting and delivery\n\n### Configuration Approach\n- `next.config.mjs`: Next.js framework configuration\n- Environment variables: Service credentials and API keys\n- TypeScript configuration for type safety\n\n### External Dependencies\n- `next`: React framework for server-rendered application\n- `pg`: PostgreSQL client for database access\n- `zod`: Schema validation for type safety\n- `react`: UI component library\n\n### Integration Points\n- OpenRouter API: AI model inference\n- Telegram Bot API: Report delivery\n- PostgreSQL: Data storage and querying\n\n### Component Relationships\n\n```mermaid\ngraph LR\n    A[Dashboard Page] --\u003e B[fetchOverview]\n    A --\u003e C[ForumTopics]\n    A --\u003e D[TopUsers]\n    A --\u003e E[AiInsights]\n    A --\u003e F[MultiStyleSummaryGenerator]\n    B --\u003e G[Database]\n    E --\u003e H[AI Service]\n    F --\u003e H\n    H --\u003e I[OpenRouter]\n    C --\u003e G\n    D --\u003e G\n```\n\n## 4. Key Features\n\n### Functionality Overview\n\nThe application provides comprehensive analytics for Telegram communities with AI-powered insights. Key features include:\n\n- Real-time metrics visualization\n- AI-generated community analysis\n- Multiple persona perspectives (business, psychology, creative)\n- Daily summary reports with link analysis\n- Automated Telegram message delivery\n- Forum topic tracking\n\n### Implementation Highlights\n\nThe system's most innovative feature is its **multi-persona AI analysis** capability, which allows the same data to be interpreted through different expert lenses. This is implemented through structured prompts and JSON schema validation to ensure consistent output formats.\n\nThe **daily summary report** with link analysis provides detailed tracking of shared resources, including domain classification, contributor analysis, and content categorization.\n\n```mermaid\nstateDiagram-v2\n    [*] --\u003e Idle\n    Idle --\u003e DataCollection: User Request\n    DataCollection --\u003e AIProcessing: Fetch Metrics\n    AIProcessing --\u003e ReportGeneration: Generate Insights\n    ReportGeneration --\u003e Formatting: Apply Template\n    Formatting --\u003e Delivery: Send to Telegram\n    Delivery --\u003e Idle: Complete\n    AIProcessing --\u003e Error: API Failure\n    Error --\u003e Retry: Exponential Backoff\n    Retry --\u003e AIProcessing\n    Retry --\u003e Idle: Max Attempts\n```\n\nSources:\n- [package.json](package.json)\n- [next.config.mjs](next.config.mjs)\n- [tsconfig.json](tsconfig.json)\n- [app/page.tsx](app/page.tsx)\n- [lib/ai.ts](lib/ai.ts)\n- [lib/db.ts](lib/db.ts)\n- [lib/queries.ts](lib/queries.ts)\n- [lib/report.ts](lib/report.ts)\n- [lib/telegram.ts](lib/telegram.ts)\n\u003c/blog\u003e","gmt_create":"2025-10-11T18:36:23.563842-03:00","gmt_modified":"2025-10-11T18:36:23.563842-03:00","id":"0f7f6215-a7ff-4431-be39-6732af64a7ab","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e"},"wiki_readme":{"content":"No readme file","gmt_create":"2025-10-11T18:35:45.428938-03:00","gmt_modified":"2025-10-11T18:35:45.428938-03:00","id":"56f068b4-b24d-441c-98e8-a4faf1bf48bb","repo_id":"ece3b8a4-4462-455f-a6ae-898456454e4e"},"wiki_repo":{"id":"ece3b8a4-4462-455f-a6ae-898456454e4e","name":"tg-ai-vibecoders-summary","progress_status":"completed","wiki_present_status":"COMPLETED","optimized_catalog":"\".\\n├── _ai-docs\\n│   └── create-prd.md\\n├── app\\n│   ├── api\\n│   │   ├── overview\\n│   │   │   └── route.ts\\n│   │   ├── report/[kind]\\n│   │   │   └── route.ts\\n│   │   ├── send-to-telegram\\n│   │   │   └── route.ts\\n│   │   └── topics\\n│   │       └── route.ts\\n│   ├── week\\n│   │   └── page.tsx\\n│   ├── globals.css\\n│   ├── layout.tsx\\n│   └── page.tsx\\n├── components\\n│   ├── ai-insights.tsx\\n│   ├── forum-topics.tsx\\n│   ├── metric-card.tsx\\n│   ├── multi-style-summary-generator.tsx\\n│   ├── summary-generator.tsx\\n│   └── top-users.tsx\\n├── lib\\n│   ├── ai.ts\\n│   ├── date-utils.ts\\n│   ├── db.ts\\n│   ├── format.ts\\n│   ├── queries.ts\\n│   ├── report.ts\\n│   ├── reportSchemas.ts\\n│   ├── telegram.ts\\n│   └── types.ts\\n├── CLAUDE.md\\n├── README.md\\n├── next-env.d.ts\\n├── next.config.mjs\\n├── package.json\\n└── tsconfig.json\\n\"","current_document_structure":"WikiEncrypted:","catalogue_think_content":"WikiEncrypted:","recovery_checkpoint":"wiki_generation_completed","last_commit_id":"77446c261ae4e6532724f1723267b0ea221ebe3e","last_commit_update":"2025-10-08T00:08:12-03:00","gmt_create":"2025-10-11T18:29:21.167686-03:00","gmt_modified":"2025-10-11T19:04:45.85868-03:00","extend_info":"{\"language\":\"en\",\"active\":true,\"branch\":\"main\",\"shareStatus\":\"\",\"server_error_code\":\"\",\"cosy_version\":\"\"}"}}